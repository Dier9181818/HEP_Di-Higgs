#include "TFile.h"
#include "TCanvas.h"
#include "TH1F.h"
#include "TF1.h"
#include "TTree.h"
#include "TLegend.h"
#include "TChain.h"
#include "TLatex.h"
#include "TStyle.h"
#include "TPad.h"
#include "TMath.h"
#include <iostream>
using namespace std;
string itoa(int num);

void SLT_plot_SM_TotalBkg(){

  const int n_smp = 39;

  string smp_tree[n_smp] = { "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal" };
  string smp;
  TChain  *chain_smp[n_smp];
  
  string smp_names[n_smp] = { "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt", "hh_bbtt" };
    
  for (int i=0; i<n_smp; i++)
    {
      smp = smp_names[i] +".root";
      cout<<smp<<endl;
      chain_smp[i] = new TChain(smp_tree[i].c_str());
      chain_smp[i]->Add(smp.c_str());
    }
  
  string h_title[n_smp] = { "ttH", "ttZ", "ttW", "VBFHtautau", "WHbb", "qqZHbb", "ggZHbb", "WHtautau", "qqZHtautau", "ggZHtautau", "ggFHtautau", "WZ", "WW", "ZZ", "DY", "DYtt", "ttbarFake", "WFake", "WttFake", "Zbb", "Zbc", "Zbl", "Zcc", "Zcl", "Zl", "W", "Wtt", "Zttbb", "Zttbc", "Zttbl", "Zttcc", "Zttcl", "Zttl", "stops", "stopWt", "stopt", "ttbar", "hh_bbtt", "hhttbb" };  // only for legend
    
  TH1::SetDefaultSumw2();
  TH1F * h_hist[n_smp];
  const char *h_nm;
  string hist_draw[n_smp];
      
        /*
      //   ===========================================================   pTBB   ===========================================================
          
          TCanvas *c1 = new TCanvas ("c1", "pTBB",1200,650);
            
          TPad *pad11 = new TPad("pad11","",0,0,0.8,1);
          TPad *pad12 = new TPad("pad12","",0.75,0,1,1);
          pad11->Draw();
          pad12->Draw();
            
          pad11->cd();
          pad11->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
          h_nm = h_title[i].c_str();
          h_hist[i] = new TH1F(h_nm, "",42,0,840);
          h_hist[i]->GetXaxis()->SetTitle("p_{T}^{bb} [GeV]");
          h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");
          //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
          h_hist[i]->GetYaxis()->SetRangeUser(0, 6000); //3200
        }

          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb


          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTBB*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs1 = new THStack("hs1", "");
          for(int i= 0; i<38 ; i++){ hs1->Add(h_hist[i], "hist1"); }
          hs1->Draw("SAMEHIST");


         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h1_1 = new TH1F("h1_1","Quadratic Sum from left",42,0,840); //left

          double QuadraticSum_l_1 = 0;
          double R_l_1 = 0;
          double E_l_1 = 0;
          double EE_l_1 = 0;
           
          for (int j=1; j<=42; j++) {

            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
             
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_1 +=  2* ( (S+B) * LSB - S );
                  E_l_1 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;
       
                  QuadraticSum_l_1 = sqrt(R_l_1);
                  if(R_l_1 > 0) { EE_l_1 = sqrt(E_l_1) / QuadraticSum_l_1; }
                  
              }
              
             h1_1->SetBinContent(j,QuadraticSum_l_1);
             h1_1->SetLineColor(kBlue-9);
             h1_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
          }

        
         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h1_2 = new TH1F("h1_2","Quadratic Sum from right",42,0,840); //right
          
         double QuadraticSum_r_1 = 0;
         double R_r_1 = 0;
         double E_r_1 = 0;
         double EE_r_1 = 0;
         
          for (int j=42; j>=1; j--) {
        
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_1 +=  2* ( (S+B) * LSB - S );
                  E_r_1 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_1 = sqrt(R_r_1);
                  if(R_r_1 > 0) { EE_r_1 = sqrt(E_r_1) / QuadraticSum_r_1; }
                 
             }

            h1_2->SetBinContent(j,QuadraticSum_r_1);
            h1_2->SetLineColor(kGreen-6);
            h1_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

      //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_1 = 0;
      double integral_Bkg_1 = 0;
      double integral_noVBFSM_1 = 0;

      double error_VBFSM_1 = 0;
      double error_Bkg_1 = 0;
      double error_noVBFSM_1 = 0;

        integral_VBFSM_1 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_1, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_1 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_1, "");

            integral_noVBFSM_1 += integral_Bkg_1;
            error_noVBFSM_1 += error_Bkg_1*error_Bkg_1;
        }

        error_noVBFSM_1 = sqrt(error_noVBFSM_1);

                double S_1 = 0;   S_1 = integral_VBFSM_1;
                double dS_1 = 0;  dS_1 = error_VBFSM_1;
                double B_1 = 0;   B_1 = integral_noVBFSM_1;
                double dB_1 = 0;  dB_1 = error_noVBFSM_1;

                double Significance_1 = 0;
                double R_1 = 0;
                double E_1 = 0;
                double EE_1 = 0;

                if( B_1 > 0 && S_1 > 0) {
                    
                      double LSB_1 = log(1 + S_1/B_1);
                      R_1 =  2 * ( (S_1+B_1) * LSB_1 - S_1 );
                      E_1 = LSB_1 * LSB_1 * dS_1 * dS_1 + (LSB_1 - S_1/B_1) * (LSB_1 - S_1/B_1) * dB_1 * dB_1;

                      Significance_1 = sqrt(R_1);
                      if(Significance_1 > 0) { EE_1 = sqrt(E_1) / Significance_1; }
                    
                }

         for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
         
          float rightmax1 = 1.1*h1_1 -> GetMaximum();
          float scale1 = 6000 / rightmax1;
          h1_1->Scale(scale1);
          h1_1->Draw("SAMEHIST");
          
          h1_2->Scale(scale1);
          h1_2->Draw("SAMEHIST");
          
        
          TGaxis*axis1 = new TGaxis(840,0,840,6000,0,rightmax1,510,"+L");
          // axis1->SetTitle("Quadratic Sum of significance");
          axis1->SetTitleSize(0.03);
          axis1->SetLabelSize(0.025);
          //axis1->Draw();
          
          pad12->cd();
          TLegend *leg1 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg1->SetBorderSize(1);
          leg1->SetFillColor(0);
          leg1->SetTextFont(42);
          leg1->SetTextSize(0.053);
          
          // for(int i=n_smp; i>=0 ; i--) { leg1->AddEntry(h_hist[i], h_titles[i].c_str()); }
          leg1->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg1->AddEntry(h_hist[37], "ggF HH");
          leg1->AddEntry(h_hist[36], "ttbar");
          leg1->AddEntry(h_hist[33], "single top");
          leg1->AddEntry(h_hist[27], "Z#tau#tau");
          leg1->AddEntry(h_hist[25], "W");
          leg1->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg1->AddEntry(h_hist[17], "Fake_W");
          leg1->AddEntry(h_hist[16], "Fake_ttbar");
          leg1->AddEntry(h_hist[14], "DY");
          leg1->AddEntry(h_hist[11], "diboson");
          leg1->AddEntry(h_hist[0], "SM H");
          leg1->AddEntry(h1_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg1->AddEntry(h1_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg1->Draw();

          c1 -> SaveAs("pTBB_SM.pdf");
        
 
        //   ===========================================================   mBB   ===========================================================
          
          TCanvas *c4 = new TCanvas ("c4", "mBB",1200,650);
            
          TPad *pad41 = new TPad("pad41","",0,0,0.8,1);
          TPad *pad42 = new TPad("pad42","",0.75,0,1,1);
          pad41->Draw();
          pad42->Draw();
            
          pad41->cd();
          pad41->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,500);
            h_hist[i]->GetXaxis()->SetTitle("m_{bb} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 12000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb
        

          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mBB*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs4 = new THStack("hs4", "");
          for(int i= 0; i<38 ; i++){ hs4->Add(h_hist[i], "hist5"); }
          hs4->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h4_1 = new TH1F("h4_1","Quadratic Sum from left",25,0,500); //left
          
          double QuadraticSum_l_4 = 0;
          double R_l_4 = 0;
          double E_l_4 = 0;
          double EE_l_4 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
             
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_4 +=  2* ( (S+B) * LSB - S );
                  E_l_4 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_4 = sqrt(R_l_4);
                  if(R_l_4 > 0) { EE_l_4 = sqrt(E_l_4) / QuadraticSum_l_4; }
                  
              }

             h4_1->SetBinContent(j,QuadraticSum_l_4);
             h4_1->SetLineColor(kBlue-9);
             h4_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h4_2 = new TH1F("h4_2","Quadratic Sum from right",25,0,500); //right
          
         double QuadraticSum_r_4 = 0;
         double R_r_4 = 0;
         double E_r_4 = 0;
         double EE_r_4 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_4 +=  2* ( (S+B) * LSB - S );
                  E_r_4 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_4 = sqrt(R_r_4);
                  if(R_r_4 > 0) { EE_r_4 = sqrt(E_r_4) / QuadraticSum_r_4; }
                 
             }

            h4_2->SetBinContent(j,QuadraticSum_r_4);
            h4_2->SetLineColor(kGreen-6);
            h4_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

      //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_4 = 0;
      double integral_Bkg_4 = 0;
      double integral_noVBFSM_4 = 0;

      double error_VBFSM_4 = 0;
      double error_Bkg_4 = 0;
      double error_noVBFSM_4 = 0;

        integral_VBFSM_4 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_4, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_4 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_4, "");

            integral_noVBFSM_4 += integral_Bkg_4;
            error_noVBFSM_4 += error_Bkg_4*error_Bkg_4;
        }

        error_noVBFSM_4 = sqrt(error_noVBFSM_4);

                double S_4 = 0;   S_4 = integral_VBFSM_4;
                double dS_4 = 0;  dS_4 = error_VBFSM_4;
                double B_4 = 0;   B_4 = integral_noVBFSM_4;
                double dB_4 = 0;  dB_4 = error_noVBFSM_4;

                double Significance_4 = 0;
                double R_4 = 0;
                double E_4 = 0;
                double EE_4 = 0;

                if( B_4 > 0 && S_4 > 0) {
                    
                      double LSB_4 = log(1 + S_4/B_4);
                      R_4 =  2 * ( (S_4+B_4) * LSB_4 - S_4 );
                      E_4 = LSB_4 * LSB_4 * dS_4 * dS_4 + (LSB_4 - S_4/B_4) * (LSB_4 - S_4/B_4) * dB_4 * dB_4;

                      Significance_4 = sqrt(R_4);
                      if(Significance_4 > 0) { EE_4 = sqrt(E_4) / Significance_4; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax4 = 1.1*h4_1->GetMaximum();
          float scale4 = 12000 / rightmax4;
          h4_1->Scale(scale4);
          h4_1->Draw("SAMEHIST");
          
          h4_2->Scale(scale4);
          h4_2->Draw("SAMEHIST");
          

          TGaxis*axis4 = new TGaxis(500,0,500,12000,0,rightmax4,510,"+L");
          // axis4->SetTitle("Quadratic Sum of significance");
          axis4->SetTitleSize(0.03);
          axis4->SetLabelSize(0.025);
          //axis4->Draw();
          
          pad42->cd();
          TLegend *leg4 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg4->SetBorderSize(1);
          leg4->SetFillColor(0);
          leg4->SetTextFont(42);
          leg4->SetTextSize(0.053);
          
          leg4->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg4->AddEntry(h_hist[37], "ggF HH");
          leg4->AddEntry(h_hist[36], "ttbar");
          leg4->AddEntry(h_hist[33], "single top");
          leg4->AddEntry(h_hist[27], "Z#tau#tau");
          leg4->AddEntry(h_hist[25], "W");
          leg4->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg4->AddEntry(h_hist[17], "Fake_W");
          leg4->AddEntry(h_hist[16], "Fake_ttbar");
          leg4->AddEntry(h_hist[14], "DY");
          leg4->AddEntry(h_hist[11], "diboson");
          leg4->AddEntry(h_hist[0], "SM H");
          leg4->AddEntry(h4_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg4->AddEntry(h4_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg4->Draw();
          
          c4 -> SaveAs("mBB_SM.pdf");
   

          //   ===========================================================   EtaBB   ===========================================================
          
          TCanvas *c47 = new TCanvas ("c47", "EtaBB",1200,650);
            
          TPad *pad471 = new TPad("pad471","",0,0,0.8,1);
          TPad *pad472 = new TPad("pad472","",0.75,0,1,1);
          pad471->Draw();
          pad472->Draw();
            
          pad471->cd();
          pad471->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,6);
              h_hist[i]->GetXaxis()->SetTitle("#eta (b,b)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="abs(EtaBB)>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs47 = new THStack("hs47", "");
          for(int i= 0; i<38 ; i++){ hs47->Add(h_hist[i], "hist47"); }
          hs47->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h47_1 = new TH1F("h47_1","Quadratic Sum from left",30,0,6); //left
          
         double QuadraticSum_l_47 = 0;
         double R_l_47 = 0;
         double E_l_47 = 0;
         double EE_l_47 = 0;
           
          for (int j=1; j<=30; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_47 +=  2* ( (S+B) * LSB - S );
                  E_l_47 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_47 = sqrt(R_l_47);
                  if(R_l_47 > 0) { EE_l_47 = sqrt(E_l_47) / QuadraticSum_l_47; }
                 
             }

             h47_1->SetBinContent(j,QuadraticSum_l_47);
             h47_1->SetLineColor(kBlue-9);
             h47_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h47_2 = new TH1F("h47_2","Quadratic Sum from right",30,0,6); //right
          
         double QuadraticSum_r_47 = 0;
         double R_r_47 = 0;
         double E_r_47 = 0;
         double EE_r_47 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_47 +=  2* ( (S+B) * LSB - S );
                  E_r_47 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_47 = sqrt(R_r_47);
                  if(R_r_47 > 0) { EE_r_47 = sqrt(E_r_47) / QuadraticSum_r_47; }
                 
             }

            h47_2->SetBinContent(j,QuadraticSum_r_47);
            h47_2->SetLineColor(kGreen-6);
            h47_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

      //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_47 = 0;
      double integral_Bkg_47 = 0;
      double integral_noVBFSM_47 = 0;

      double error_VBFSM_47 = 0;
      double error_Bkg_47 = 0;
      double error_noVBFSM_47 = 0;

        integral_VBFSM_47 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_47, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_47 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_47, "");

            integral_noVBFSM_47 += integral_Bkg_47;
            error_noVBFSM_47 += error_Bkg_47*error_Bkg_47;
        }

        error_noVBFSM_47 = sqrt(error_noVBFSM_47);

                double S_47 = 0;   S_47 = integral_VBFSM_47;
                double dS_47 = 0;  dS_47 = error_VBFSM_47;
                double B_47 = 0;   B_47 = integral_noVBFSM_47;
                double dB_47 = 0;  dB_47 = error_noVBFSM_47;

                double Significance_47 = 0;
                double R_47 = 0;
                double E_47 = 0;
                double EE_47 = 0;

                if( B_47 > 0 && S_47 > 0) {
                    
                      double LSB_47 = log(1 + S_47/B_47);
                      R_47 =  2 * ( (S_47+B_47) * LSB_47 - S_47 );
                      E_47 = LSB_47 * LSB_47 * dS_47 * dS_47 + (LSB_47 - S_47/B_47) * (LSB_47 - S_47/B_47) * dB_47 * dB_47;

                      Significance_47 = sqrt(R_47);
                      if(Significance_47 > 0) { EE_47 = sqrt(E_47) / Significance_47; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax47 = 1.1*h47_1->GetMaximum();
          float scale47 = 3000 / rightmax47;
          h47_1->Scale(scale47);
          h47_1->Draw("SAMEHIST");
          
          h47_2->Scale(scale47);
          h47_2->Draw("SAMEHIST");
          
        
          TGaxis*axis47 = new TGaxis(6,0,6,3000,0,rightmax47,510,"+L");
          // axis47->SetTitle("Quadratic Sum of significance");
          axis47->SetTitleSize(0.03);
          axis47->SetLabelSize(0.025);
          //axis47->Draw();
          
          pad472->cd();
          TLegend *leg47 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg47->SetBorderSize(1);
          leg47->SetFillColor(0);
          leg47->SetTextFont(42);
          leg47->SetTextSize(0.053);
          
          leg47->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg47->AddEntry(h_hist[37], "ggF HH");
          leg47->AddEntry(h_hist[36], "ttbar");
          leg47->AddEntry(h_hist[33], "single top");
          leg47->AddEntry(h_hist[27], "Z#tau#tau");
          leg47->AddEntry(h_hist[25], "W");
          leg47->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg47->AddEntry(h_hist[17], "Fake_W");
          leg47->AddEntry(h_hist[16], "Fake_ttbar");
          leg47->AddEntry(h_hist[14], "DY");
          leg47->AddEntry(h_hist[11], "diboson");
          leg47->AddEntry(h_hist[0], "SM H");
          leg47->AddEntry(h47_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg47->AddEntry(h47_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg47->Draw();
          
          c47 -> SaveAs("EtaBB_SM.pdf");
        
        
        //   ===========================================================   dEtaBB   ===========================================================
          
          TCanvas *c6 = new TCanvas ("c6", "dEtaBB",1200,650);
            
          TPad *pad61 = new TPad("pad61","",0,0,0.8,1);
          TPad *pad62 = new TPad("pad62","",0.75,0,1,1);
          pad61->Draw();
          pad62->Draw();
            
          pad61->cd();
          pad61->SetTickx();
          gStyle->SetOptStat(kFALSE);

          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",15,0,3);
            h_hist[i]->GetXaxis()->SetTitle("#Delta#eta (b,b)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 5000); //3200
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb
        

          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dEtaBB>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs6 = new THStack("hs6", "");
          for(int i= 0; i<38 ; i++){ hs6->Add(h_hist[i], "hist6"); }
          hs6->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h6_1 = new TH1F("h6_1","Quadratic Sum from left",15,0,3); //left
          
          double QuadraticSum_l_6 = 0;
          double R_l_6 = 0;
          double E_l_6 = 0;
          double EE_l_6 = 0;
           
          for (int j=1; j<=15; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
             
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_6 +=  2* ( (S+B) * LSB - S );
                  E_l_6 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_6 = sqrt(R_l_6);
                  if(R_l_6 > 0) { EE_l_6 = sqrt(E_l_6) / QuadraticSum_l_6; }
                  
              }

             h6_1->SetBinContent(j,QuadraticSum_l_6);
             h6_1->SetLineColor(kBlue-9);
             h6_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h6_2 = new TH1F("h6_2","Quadratic Sum from right",15,0,3); //right
          
         double QuadraticSum_r_6 = 0;
         double R_r_6 = 0;
         double E_r_6 = 0;
         double EE_r_6 = 0;
          
          for (int j=15; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_6 +=  2* ( (S+B) * LSB - S );
                  E_r_6 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_6 = sqrt(R_r_6);
                  if(R_r_6 > 0) { EE_r_6 = sqrt(E_r_6) / QuadraticSum_r_6; }
                 
             }

            h6_2->SetBinContent(j,QuadraticSum_r_6);
            h6_2->SetLineColor(kGreen-6);
            h6_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

      //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_6 = 0;
      double integral_Bkg_6 = 0;
      double integral_noVBFSM_6 = 0;

      double error_VBFSM_6 = 0;
      double error_Bkg_6 = 0;
      double error_noVBFSM_6 = 0;

        integral_VBFSM_6 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_6, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_6 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_6, "");

            integral_noVBFSM_6 += integral_Bkg_6;
            error_noVBFSM_6 += error_Bkg_6*error_Bkg_6;
        }

        error_noVBFSM_6 = sqrt(error_noVBFSM_6);

                double S_6 = 0;   S_6 = integral_VBFSM_6;
                double dS_6 = 0;  dS_6 = error_VBFSM_6;
                double B_6 = 0;   B_6 = integral_noVBFSM_6;
                double dB_6 = 0;  dB_6 = error_noVBFSM_6;

                double Significance_6 = 0;
                double R_6 = 0;
                double E_6 = 0;
                double EE_6 = 0;

                if( B_6 > 0 && S_6 > 0) {
                    
                      double LSB_6 = log(1 + S_6/B_6);
                      R_6 =  2 * ( (S_6+B_6) * LSB_6 - S_6 );
                      E_6 = LSB_6 * LSB_6 * dS_6 * dS_6 + (LSB_6 - S_6/B_6) * (LSB_6 - S_6/B_6) * dB_6 * dB_6;

                      Significance_6 = sqrt(R_6);
                      if(Significance_6 > 0) { EE_6 = sqrt(E_6) / Significance_6; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax6 = 1.1*h6_1->GetMaximum();
          float scale6 = 5000 / rightmax6;
          h6_1->Scale(scale6);
          h6_1->Draw("SAMEHIST");
          
          h6_2->Scale(scale6);
          h6_2->Draw("SAMEHIST");
          

          TGaxis*axis6 = new TGaxis(3,0,3,5000,0,rightmax6,510,"+L");
          // axis6->SetTitle("Quadratic Sum of significance");
          axis6->SetTitleSize(0.03);
          axis6->SetLabelSize(0.025);
          //axis6->Draw();
          
          pad62->cd();
          TLegend *leg6 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg6->SetBorderSize(1);
          leg6->SetFillColor(0);
          leg6->SetTextFont(42);
          leg6->SetTextSize(0.053);
          
          leg6->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg6->AddEntry(h_hist[37], "ggF HH");
          leg6->AddEntry(h_hist[36], "ttbar");
          leg6->AddEntry(h_hist[33], "single top");
          leg6->AddEntry(h_hist[27], "Z#tau#tau");
          leg6->AddEntry(h_hist[25], "W");
          leg6->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg6->AddEntry(h_hist[17], "Fake_W");
          leg6->AddEntry(h_hist[16], "Fake_ttbar");
          leg6->AddEntry(h_hist[14], "DY");
          leg6->AddEntry(h_hist[11], "diboson");
          leg6->AddEntry(h_hist[0], "SM H");
          leg6->AddEntry(h6_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg6->AddEntry(h6_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg6->Draw();
          
          c6 -> SaveAs("dEtaBB_SM.pdf");

        
        //   ===========================================================   dRBB   ===========================================================
          
          TCanvas *c7 = new TCanvas ("c7", "dRBB",1200,650);
            
          TPad *pad71 = new TPad("pad71","",0,0,0.8,1);
          TPad *pad72 = new TPad("pad72","",0.75,0,1,1);
          pad71->Draw();
          pad72->Draw();
            
          pad71->cd();
          pad71->SetTickx();
          gStyle->SetOptStat(kFALSE);

          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",20,0,4);
            h_hist[i]->GetXaxis()->SetTitle("#DeltaR (b,b)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3000); //2200
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb
        
        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRBB>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs7 = new THStack("hs7", "");
          for(int i= 0; i<38 ; i++){ hs7->Add(h_hist[i], "hist7"); }
          hs7->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h7_1 = new TH1F("h7_1","Quadratic Sum from left",20,0,4); //left
          
          double QuadraticSum_l_7 = 0;
          double R_l_7 = 0;
          double E_l_7 = 0;
          double EE_l_7 = 0;
           
          for (int j=1; j<=20; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
              
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_7 +=  2* ( (S+B) * LSB - S );
                  E_l_7 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_7 = sqrt(R_l_7);
                  if(R_l_7 > 0) { EE_l_7 = sqrt(E_l_7) / QuadraticSum_l_7; }
                  
              }

             h7_1->SetBinContent(j,QuadraticSum_l_7);
             h7_1->SetLineColor(kBlue-9);
             h7_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h7_2 = new TH1F("h7_2","Quadratic Sum from right",20,0,4); //right
          
         double QuadraticSum_r_7 = 0;
         double R_r_7 = 0;
         double E_r_7 = 0;
         double EE_r_7 = 0;
          
          for (int j=20; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_7 +=  2* ( (S+B) * LSB - S );
                  E_r_7 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_7 = sqrt(R_r_7);
                  if(R_r_7 > 0) { EE_r_7 = sqrt(E_r_7) / QuadraticSum_r_7; }
                 
             }

            h7_2->SetBinContent(j,QuadraticSum_r_7);
            h7_2->SetLineColor(kGreen-6);
            h7_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_7 = 0;
      double integral_Bkg_7 = 0;
      double integral_noVBFSM_7 = 0;

      double error_VBFSM_7 = 0;
      double error_Bkg_7 = 0;
      double error_noVBFSM_7 = 0;

        integral_VBFSM_7 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_7, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_7 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_7, "");

            integral_noVBFSM_7 += integral_Bkg_7;
            error_noVBFSM_7 += error_Bkg_7*error_Bkg_7;
        }

        error_noVBFSM_7 = sqrt(error_noVBFSM_7);

                double S_7 = 0;   S_7 = integral_VBFSM_7;
                double dS_7 = 0;  dS_7 = error_VBFSM_7;
                double B_7 = 0;   B_7 = integral_noVBFSM_7;
                double dB_7 = 0;  dB_7 = error_noVBFSM_7;

                double Significance_7 = 0;
                double R_7 = 0;
                double E_7 = 0;
                double EE_7 = 0;

                if( B_7 > 0 && S_7 > 0) {
                    
                      double LSB_7 = log(1 + S_7/B_7);
                      R_7 =  2 * ( (S_7+B_7) * LSB_7 - S_7 );
                      E_7 = LSB_7 * LSB_7 * dS_7 * dS_7 + (LSB_7 - S_7/B_7) * (LSB_7 - S_7/B_7) * dB_7 * dB_7;

                      Significance_7 = sqrt(R_7);
                      if(Significance_7 > 0) { EE_7 = sqrt(E_7) / Significance_7; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax7 = 1.1*h7_1->GetMaximum();
          float scale7 = 3000 / rightmax7;
          h7_1->Scale(scale7);
          h7_1->Draw("SAMEHIST");
          
          h7_2->Scale(scale7);
          h7_2->Draw("SAMEHIST");
          

          TGaxis*axis7 = new TGaxis(4,0,4,3000,0,rightmax7,510,"+L");
          // axis7->SetTitle("Quadratic Sum of significance");
          axis7->SetTitleSize(0.03);
          axis7->SetLabelSize(0.025);
          //axis7->Draw();
          
          pad72->cd();
          TLegend *leg7 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg7->SetBorderSize(1);
          leg7->SetFillColor(0);
          leg7->SetTextFont(42);
          leg7->SetTextSize(0.053);
          
          leg7->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg7->AddEntry(h_hist[37], "ggF HH");
          leg7->AddEntry(h_hist[36], "ttbar");
          leg7->AddEntry(h_hist[33], "single top");
          leg7->AddEntry(h_hist[27], "Z#tau#tau");
          leg7->AddEntry(h_hist[25], "W");
          leg7->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg7->AddEntry(h_hist[17], "Fake_W");
          leg7->AddEntry(h_hist[16], "Fake_ttbar");
          leg7->AddEntry(h_hist[14], "DY");
          leg7->AddEntry(h_hist[11], "diboson");
          leg7->AddEntry(h_hist[0], "SM H");
          leg7->AddEntry(h7_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg7->AddEntry(h7_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg7->Draw();
          
          c7 -> SaveAs("dRBB_SM.pdf");
        
        
        //   ===========================================================   pTTauTau   ===========================================================
          
          TCanvas *c8 = new TCanvas ("c8", "pTTauTau",1200,650);
            
          TPad *pad81 = new TPad("pad81","",0,0,0.8,1);
          TPad *pad82 = new TPad("pad82","",0.75,0,1,1);
          pad81->Draw();
          pad82->Draw();
            
          pad81->cd();
          pad81->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,500);
            h_hist[i]->GetXaxis()->SetTitle("p_{T}^{#tau#tau} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 5000); //2400
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTTauTau*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs8 = new THStack("hs8", "");
          for(int i= 0; i<38 ; i++){ hs8->Add(h_hist[i], "hist8"); }
          hs8->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h8_1 = new TH1F("h8_1","Quadratic Sum from left",25,0,500); //left
          
          double QuadraticSum_l_8 = 0;
          double R_l_8 = 0;
          double E_l_8 = 0;
          double EE_l_8 = 0;
           
          for (int j=1; j<=25; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
             
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_8 +=  2* ( (S+B) * LSB - S );
                  E_l_8 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_8 = sqrt(R_l_8);
                  if(R_l_8 > 0) { EE_l_8 = sqrt(E_l_8) / QuadraticSum_l_8; }
                  
              }

             h8_1->SetBinContent(j,QuadraticSum_l_8);
             h8_1->SetLineColor(kBlue-9);
             h8_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h8_2 = new TH1F("h8_2","Quadratic Sum from right",25,0,500); //right
          
         double QuadraticSum_r_8 = 0;
         double R_r_8 = 0;
         double E_r_8 = 0;
         double EE_r_8 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_8 +=  2* ( (S+B) * LSB - S );
                  E_r_8 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_8 = sqrt(R_r_8);
                  if(R_r_8 > 0) { EE_r_8 = sqrt(E_r_8) / QuadraticSum_r_8; }
                 
             }

            h8_2->SetBinContent(j,QuadraticSum_r_8);
            h8_2->SetLineColor(kGreen-6);
            h8_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_8 = 0;
      double integral_Bkg_8 = 0;
      double integral_noVBFSM_8 = 0;

      double error_VBFSM_8 = 0;
      double error_Bkg_8 = 0;
      double error_noVBFSM_8 = 0;

        integral_VBFSM_8 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_8, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_8 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_8, "");

            integral_noVBFSM_8 += integral_Bkg_8;
            error_noVBFSM_8 += error_Bkg_8*error_Bkg_8;
        }

        error_noVBFSM_8 = sqrt(error_noVBFSM_8);

                double S_8 = 0;   S_8 = integral_VBFSM_8;
                double dS_8 = 0;  dS_8 = error_VBFSM_8;
                double B_8 = 0;   B_8 = integral_noVBFSM_8;
                double dB_8 = 0;  dB_8 = error_noVBFSM_8;

                double Significance_8 = 0;
                double R_8 = 0;
                double E_8 = 0;
                double EE_8 = 0;

                if( B_8 > 0 && S_8 > 0) {
                    
                      double LSB_8 = log(1 + S_8/B_8);
                      R_8 =  2 * ( (S_8+B_8) * LSB_8 - S_8 );
                      E_8 = LSB_8 * LSB_8 * dS_8 * dS_8 + (LSB_8 - S_8/B_8) * (LSB_8 - S_8/B_8) * dB_8 * dB_8;

                      Significance_8 = sqrt(R_8);
                      if(Significance_8 > 0) { EE_8 = sqrt(E_8) / Significance_8; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax8 = 1.1*h8_1->GetMaximum();
          float scale8 = 5000 / rightmax8;
          h8_1->Scale(scale8);
          h8_1->Draw("SAMEHIST");
          
          h8_2->Scale(scale8);
          h8_2->Draw("SAMEHIST");
          
          TGaxis*axis8 = new TGaxis(500,0,500,5000,0,rightmax8,510,"+L");
          // axis8->SetTitle("Quadratic Sum of significance");
          axis8->SetTitleSize(0.03);
          axis8->SetLabelSize(0.025);
          //axis8->Draw();
          
          pad82->cd();
          TLegend *leg8 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg8->SetBorderSize(1);
          leg8->SetFillColor(0);
          leg8->SetTextFont(42);
          leg8->SetTextSize(0.053);
          
          leg8->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg8->AddEntry(h_hist[37], "ggF HH");
          leg8->AddEntry(h_hist[36], "ttbar");
          leg8->AddEntry(h_hist[33], "single top");
          leg8->AddEntry(h_hist[27], "Z#tau#tau");
          leg8->AddEntry(h_hist[25], "W");
          leg8->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg8->AddEntry(h_hist[17], "Fake_W");
          leg8->AddEntry(h_hist[16], "Fake_ttbar");
          leg8->AddEntry(h_hist[14], "DY");
          leg8->AddEntry(h_hist[11], "diboson");
          leg8->AddEntry(h_hist[0], "SM H");
          leg8->AddEntry(h8_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg8->AddEntry(h8_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg8->Draw();
          
          c8 -> SaveAs("pTTauTau_SM.pdf");


          //   ===========================================================   pTTauLep   ===========================================================
          
          TCanvas *c13 = new TCanvas ("c13", "pTTauLep",1200,650);
            
          TPad *pad131 = new TPad("pad131","",0,0,0.8,1);
          TPad *pad132 = new TPad("pad132","",0.75,0,1,1);
          pad131->Draw();
          pad132->Draw();
            
          pad131->cd();
          pad131->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,500);
            h_hist[i]->GetXaxis()->SetTitle("p_{T}^{#taul} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 7000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTTauLep*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs13 = new THStack("hs13", "");
          for(int i= 0; i<38 ; i++){ hs13->Add(h_hist[i], "hist13"); }
          hs13->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h13_1 = new TH1F("h13_1","Quadratic Sum from left",25,0,500); //left
          
         double QuadraticSum_l_13 = 0;
         double R_l_13 = 0;
         double E_l_13 = 0;
         double EE_l_13 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_13 +=  2* ( (S+B) * LSB - S );
                  E_l_13 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_13 = sqrt(R_l_13);
                  if(R_l_13 > 0) { EE_l_13 = sqrt(E_l_13) / QuadraticSum_l_13; }
                 
             }

             h13_1->SetBinContent(j,QuadraticSum_l_13);
             h13_1->SetLineColor(kBlue-9);
             h13_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h13_2 = new TH1F("h13_2","Quadratic Sum from right",25,0,500); //right
          
         double QuadraticSum_r_13 = 0;
         double R_r_13 = 0;
         double E_r_13 = 0;
         double EE_r_13 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_13 +=  2* ( (S+B) * LSB - S );
                  E_r_13 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_13 = sqrt(R_r_13);
                  if(R_r_13 > 0) { EE_r_13 = sqrt(E_r_13) / QuadraticSum_r_13; }
                 
             }

            h13_2->SetBinContent(j,QuadraticSum_r_13);
            h13_2->SetLineColor(kGreen-6);
            h13_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_13 = 0;
      double integral_Bkg_13 = 0;
      double integral_noVBFSM_13 = 0;

      double error_VBFSM_13 = 0;
      double error_Bkg_13 = 0;
      double error_noVBFSM_13 = 0;

        integral_VBFSM_13 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_13, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_13 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_13, "");

            integral_noVBFSM_13 += integral_Bkg_13;
            error_noVBFSM_13 += error_Bkg_13*error_Bkg_13;
        }

        error_noVBFSM_13 = sqrt(error_noVBFSM_13);

                double S_13 = 0;   S_13 = integral_VBFSM_13;
                double dS_13 = 0;  dS_13 = error_VBFSM_13;
                double B_13 = 0;   B_13 = integral_noVBFSM_13;
                double dB_13 = 0;  dB_13 = error_noVBFSM_13;

                double Significance_13 = 0;
                double R_13 = 0;
                double E_13 = 0;
                double EE_13 = 0;

                if( B_13 > 0 && S_13 > 0) {
                    
                      double LSB_13 = log(1 + S_13/B_13);
                      R_13 =  2 * ( (S_13+B_13) * LSB_13 - S_13 );
                      E_13 = LSB_13 * LSB_13 * dS_13 * dS_13 + (LSB_13 - S_13/B_13) * (LSB_13 - S_13/B_13) * dB_13 * dB_13;

                      Significance_13 = sqrt(R_13);
                      if(Significance_13 > 0) { EE_13 = sqrt(E_13) / Significance_13; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax13 = 1.1*h13_1->GetMaximum();
          float scale13 = 7000 / rightmax13;
          h13_1->Scale(scale13);
          h13_1->Draw("SAMEHIST");
          
          h13_2->Scale(scale13);
          h13_2->Draw("SAMEHIST");
          
        
          TGaxis*axis13 = new TGaxis(500,0,500,7000,0,rightmax13,510,"+L");
          // axis13->SetTitle("Quadratic Sum of significance");
          axis13->SetTitleSize(0.03);
          axis13->SetLabelSize(0.025);
          //axis13->Draw();
          
          pad132->cd();
          TLegend *leg13 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg13->SetBorderSize(1);
          leg13->SetFillColor(0);
          leg13->SetTextFont(42);
          leg13->SetTextSize(0.053);
          
          leg13->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg13->AddEntry(h_hist[37], "ggF HH");
          leg13->AddEntry(h_hist[36], "ttbar");
          leg13->AddEntry(h_hist[33], "single top");
          leg13->AddEntry(h_hist[27], "Z#tau#tau");
          leg13->AddEntry(h_hist[25], "W");
          leg13->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg13->AddEntry(h_hist[17], "Fake_W");
          leg13->AddEntry(h_hist[16], "Fake_ttbar");
          leg13->AddEntry(h_hist[14], "DY");
          leg13->AddEntry(h_hist[11], "diboson");
          leg13->AddEntry(h_hist[0], "SM H");
          leg13->AddEntry(h13_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg13->AddEntry(h13_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg13->Draw();
          
          c13 -> SaveAs("pTTauLep_SM.pdf");
        
        
        //   ===========================================================   dPtLepTau   ===========================================================
          
          TCanvas *c19 = new TCanvas ("c19", "dPtLepTau",1200,650);
            
          TPad *pad191 = new TPad("pad191","",0,0,0.8,1);
          TPad *pad192 = new TPad("pad192","",0.75,0,1,1);
          pad191->Draw();
          pad192->Draw();
            
          pad191->cd();
          pad191->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",23,0,460);
            h_hist[i]->GetXaxis()->SetTitle("#Deltap_{T} (#tau,#tau) [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 8000); //4500
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dPtLepTau*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs19 = new THStack("hs19", "");
          for(int i= 0; i<38 ; i++){ hs19->Add(h_hist[i], "hist19"); }
          hs19->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h19_1 = new TH1F("h19_1","Quadratic Sum from left",23,0,460); //left
          
          double QuadraticSum_l_19 = 0;
          double R_l_19 = 0;
          double E_l_19 = 0;
          double EE_l_19 = 0;
           
          for (int j=1; j<=23; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
             
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_19 +=  2* ( (S+B) * LSB - S );
                  E_l_19 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_19 = sqrt(R_l_19);
                  if(R_l_19 > 0) { EE_l_19 = sqrt(E_l_19) / QuadraticSum_l_19; }
                  
              }

             h19_1->SetBinContent(j,QuadraticSum_l_19);
             h19_1->SetLineColor(kBlue-9);
             h19_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h19_2 = new TH1F("h19_2","Quadratic Sum from right",23,0,460); //right
          
         double QuadraticSum_r_19 = 0;
         double R_r_19 = 0;
         double E_r_19 = 0;
         double EE_r_19 = 0;
          
          for (int j=23; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_19 +=  2* ( (S+B) * LSB - S );
                  E_r_19 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_19 = sqrt(R_r_19);
                  if(R_r_19 > 0) { EE_r_19 = sqrt(E_r_19) / QuadraticSum_r_19; }
                 
             }

            h19_2->SetBinContent(j,QuadraticSum_r_19);
            h19_2->SetLineColor(kGreen-6);
            h19_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_19 = 0;
      double integral_Bkg_19 = 0;
      double integral_noVBFSM_19 = 0;

      double error_VBFSM_19 = 0;
      double error_Bkg_19 = 0;
      double error_noVBFSM_19 = 0;

        integral_VBFSM_19 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_19, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_19 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_19, "");

            integral_noVBFSM_19 += integral_Bkg_19;
            error_noVBFSM_19 += error_Bkg_19*error_Bkg_19;
        }

        error_noVBFSM_19 = sqrt(error_noVBFSM_19);

                double S_19 = 0;   S_19 = integral_VBFSM_19;
                double dS_19 = 0;  dS_19 = error_VBFSM_19;
                double B_19 = 0;   B_19 = integral_noVBFSM_19;
                double dB_19 = 0;  dB_19 = error_noVBFSM_19;

                double Significance_19 = 0;
                double R_19 = 0;
                double E_19 = 0;
                double EE_19 = 0;

                if( B_19 > 0 && S_19 > 0) {
                    
                      double LSB_19 = log(1 + S_19/B_19);
                      R_19 =  2 * ( (S_19+B_19) * LSB_19 - S_19 );
                      E_19 = LSB_19 * LSB_19 * dS_19 * dS_19 + (LSB_19 - S_19/B_19) * (LSB_19 - S_19/B_19) * dB_19 * dB_19;

                      Significance_19 = sqrt(R_19);
                      if(Significance_19 > 0) { EE_19 = sqrt(E_19) / Significance_19; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax19 = 1.1*h19_1->GetMaximum();
          float scale19 = 8000 / rightmax19;
          h19_1->Scale(scale19);
          h19_1->Draw("SAMEHIST");
          
          h19_2->Scale(scale19);
          h19_2->Draw("SAMEHIST");
          

        
          TGaxis*axis19 = new TGaxis(460,0,460,8000,0,rightmax19,510,"+L");
          // axis19->SetTitle("Quadratic Sum of significance");
          axis19->SetTitleSize(0.03);
          axis19->SetLabelSize(0.025);
          //axis19->Draw();
          
          pad192->cd();
          TLegend *leg19 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg19->SetBorderSize(1);
          leg19->SetFillColor(0);
          leg19->SetTextFont(42);
          leg19->SetTextSize(0.053);
          
          leg19->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg19->AddEntry(h_hist[37], "ggF HH");
          leg19->AddEntry(h_hist[36], "ttbar");
          leg19->AddEntry(h_hist[33], "single top");
          leg19->AddEntry(h_hist[27], "Z#tau#tau");
          leg19->AddEntry(h_hist[25], "W");
          leg19->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg19->AddEntry(h_hist[17], "Fake_W");
          leg19->AddEntry(h_hist[16], "Fake_ttbar");
          leg19->AddEntry(h_hist[14], "DY");
          leg19->AddEntry(h_hist[11], "diboson");
          leg19->AddEntry(h_hist[0], "SM H");
          leg19->AddEntry(h19_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg19->AddEntry(h19_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg19->Draw();
          
          c19 -> SaveAs("dPtLepTau_SM.pdf");
        
        
        //   ===========================================================   TauPt   ===========================================================
          
          TCanvas *c9 = new TCanvas ("c9", "TauPt",1200,650);
            
          TPad *pad91 = new TPad("pad91","",0,0,0.8,1);
          TPad *pad92 = new TPad("pad92","",0.75,0,1,1);
          pad91->Draw();
          pad92->Draw();
            
          pad91->cd();
          pad91->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",35,0,700);
            h_hist[i]->GetXaxis()->SetTitle("p_{T}^{#tau_{had}} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 17000); //9000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="TauPt*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs9 = new THStack("hs9", "");
          for(int i= 0; i<38 ; i++){ hs9->Add(h_hist[i], "hist9"); }
          hs9->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h9_1 = new TH1F("h9_1","Quadratic Sum from left",35,0,700); //left
          
         double QuadraticSum_l_9 = 0;
         double R_l_9 = 0;
         double E_l_9 = 0;
         double EE_l_9 = 0;
           
          for (int j=1; j<=35; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_9 +=  2* ( (S+B) * LSB - S );
                  E_l_9 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_9 = sqrt(R_l_9);
                  if(R_l_9 > 0) { EE_l_9 = sqrt(E_l_9) / QuadraticSum_l_9; }
                 
             }
             h9_1->SetBinContent(j,QuadraticSum_l_9);
             h9_1->SetLineColor(kBlue-9);
             h9_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h9_2 = new TH1F("h9_2","Quadratic Sum from right",35,0,700); //right
          
         double QuadraticSum_r_9 = 0;
         double R_r_9 = 0;
         double E_r_9 = 0;
         double EE_r_9 = 0;


          for (int j=35; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_9 +=  2* ( (S+B) * LSB - S );
                  E_r_9 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_9 = sqrt(R_r_9);
                  if(R_r_9 > 0) { EE_r_9 = sqrt(E_r_9) / QuadraticSum_r_9; }
                 
             }

            h9_2->SetBinContent(j,QuadraticSum_r_9);
            h9_2->SetLineColor(kGreen-6);
            h9_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_9 = 0;
      double integral_Bkg_9 = 0;
      double integral_noVBFSM_9 = 0;

      double error_VBFSM_9 = 0;
      double error_Bkg_9 = 0;
      double error_noVBFSM_9 = 0;

        integral_VBFSM_9 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_9, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_9 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_9, "");

            integral_noVBFSM_9 += integral_Bkg_9;
            error_noVBFSM_9 += error_Bkg_9*error_Bkg_9;
        }

        error_noVBFSM_9 = sqrt(error_noVBFSM_9);

                double S_9 = 0;   S_9 = integral_VBFSM_9;
                double dS_9 = 0;  dS_9 = error_VBFSM_9;
                double B_9 = 0;   B_9 = integral_noVBFSM_9;
                double dB_9 = 0;  dB_9 = error_noVBFSM_9;

                double Significance_9 = 0;
                double R_9 = 0;
                double E_9 = 0;
                double EE_9 = 0;

                if( B_9 > 0 && S_9 > 0) {
                    
                      double LSB_9 = log(1 + S_9/B_9);
                      R_9 =  2 * ( (S_9+B_9) * LSB_9 - S_9 );
                      E_9 = LSB_9 * LSB_9 * dS_9 * dS_9 + (LSB_9 - S_9/B_9) * (LSB_9 - S_9/B_9) * dB_9 * dB_9;

                      Significance_9 = sqrt(R_9);
                      if(Significance_9 > 0) { EE_9 = sqrt(E_9) / Significance_9; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax9 = 1.1*h9_1->GetMaximum();
          float scale9 = 17000 / rightmax9;
          h9_1->Scale(scale9);
          h9_1->Draw("SAMEHIST");
          
          h9_2->Scale(scale9);
          h9_2->Draw("SAMEHIST");
          
        
          TGaxis*axis9 = new TGaxis(700,0,700,17000,0,rightmax9,510,"+L");
          // axis9->SetTitle("Quadratic Sum of significance");
          axis9->SetTitleSize(0.03);
          axis9->SetLabelSize(0.025);
          //axis9->Draw();
          
          pad92->cd();
          TLegend *leg9 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg9->SetBorderSize(1);
          leg9->SetFillColor(0);
          leg9->SetTextFont(42);
          leg9->SetTextSize(0.053);
          
          leg9->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg9->AddEntry(h_hist[37], "ggF HH");
          leg9->AddEntry(h_hist[36], "ttbar");
          leg9->AddEntry(h_hist[33], "single top");
          leg9->AddEntry(h_hist[27], "Z#tau#tau");
          leg9->AddEntry(h_hist[25], "W");
          leg9->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg9->AddEntry(h_hist[17], "Fake_W");
          leg9->AddEntry(h_hist[16], "Fake_ttbar");
          leg9->AddEntry(h_hist[14], "DY");
          leg9->AddEntry(h_hist[11], "diboson");
          leg9->AddEntry(h_hist[0], "SM H");
          leg9->AddEntry(h9_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg9->AddEntry(h9_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg9->Draw();
          
          c9 -> SaveAs("TauPt_SM.pdf");
        
        
        //   ===========================================================   pTLep   ===========================================================
          
          TCanvas *c10 = new TCanvas ("c10", "pTLep",1200,650);
            
          TPad *pad101 = new TPad("pad101","",0,0,0.8,1);
          TPad *pad102 = new TPad("pad102","",0.75,0,1,1);
          pad101->Draw();
          pad102->Draw();
            
          pad101->cd();
          pad101->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,500);
            h_hist[i]->GetXaxis()->SetTitle("p_{T}^{#tau_{lep}} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 10000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTLep*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs10 = new THStack("hs10", "");
          for(int i= 0; i<38 ; i++){ hs10->Add(h_hist[i], "hist10"); }
          hs10->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h10_1 = new TH1F("h10_1","Quadratic Sum from left",25,0,500); //left
          
         double QuadraticSum_l_10 = 0;
         double R_l_10 = 0;
         double E_l_10 = 0;
         double EE_l_10 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_10 +=  2* ( (S+B) * LSB - S );
                  E_l_10 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_10 = sqrt(R_l_10);
                  if(R_l_10 > 0) { EE_l_10 = sqrt(E_l_10) / QuadraticSum_l_10; }
                 
             }

             h10_1->SetBinContent(j,QuadraticSum_l_10);
             h10_1->SetLineColor(kBlue-9);
             h10_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h10_2 = new TH1F("h10_2","Quadratic Sum from right",25,0,500); //right
          
         double QuadraticSum_r_10 = 0;
         double R_r_10 = 0;
         double E_r_10 = 0;
         double EE_r_10 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_10 +=  2* ( (S+B) * LSB - S );
                  E_r_10 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_10 = sqrt(R_r_10);
                  if(R_r_10 > 0) { EE_r_10 = sqrt(E_r_10) / QuadraticSum_r_10; }
                 
             }

            h10_2->SetBinContent(j,QuadraticSum_r_10);
            h10_2->SetLineColor(kGreen-6);
            h10_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_10 = 0;
      double integral_Bkg_10 = 0;
      double integral_noVBFSM_10 = 0;

      double error_VBFSM_10 = 0;
      double error_Bkg_10 = 0;
      double error_noVBFSM_10 = 0;

        integral_VBFSM_10 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_10, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_10 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_10, "");

            integral_noVBFSM_10 += integral_Bkg_10;
            error_noVBFSM_10 += error_Bkg_10*error_Bkg_10;
        }

        error_noVBFSM_10 = sqrt(error_noVBFSM_10);

                double S_10 = 0;   S_10 = integral_VBFSM_10;
                double dS_10 = 0;  dS_10 = error_VBFSM_10;
                double B_10 = 0;   B_10 = integral_noVBFSM_10;
                double dB_10 = 0;  dB_10 = error_noVBFSM_10;

                double Significance_10 = 0;
                double R_10 = 0;
                double E_10 = 0;
                double EE_10 = 0;

                if( B_10 > 0 && S_10 > 0) {
                    
                      double LSB_10 = log(1 + S_10/B_10);
                      R_10 =  2 * ( (S_10+B_10) * LSB_10 - S_10 );
                      E_10 = LSB_10 * LSB_10 * dS_10 * dS_10 + (LSB_10 - S_10/B_10) * (LSB_10 - S_10/B_10) * dB_10 * dB_10;

                      Significance_10 = sqrt(R_10);
                      if(Significance_10 > 0) { EE_10 = sqrt(E_10) / Significance_10; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax10 = 1.1*h10_1->GetMaximum();
          float scale10 = 10000 / rightmax10;
          h10_1->Scale(scale10);
          h10_1->Draw("SAMEHIST");
          
          h10_2->Scale(scale10);
          h10_2->Draw("SAMEHIST");
          
        
        TGaxis*axis10 = new TGaxis(500,0,500,10000,0,rightmax10,510,"+L");
          // axis10->SetTitle("Quadratic Sum of significance");
          axis10->SetTitleSize(0.03);
          axis10->SetLabelSize(0.025);
          //axis10->Draw();
          
          pad102->cd();
          TLegend *leg10 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg10->SetBorderSize(1);
          leg10->SetFillColor(0);
          leg10->SetTextFont(42);
          leg10->SetTextSize(0.053);
          
          leg10->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg10->AddEntry(h_hist[37], "ggF HH");
          leg10->AddEntry(h_hist[36], "ttbar");
          leg10->AddEntry(h_hist[33], "single top");
          leg10->AddEntry(h_hist[27], "Z#tau#tau");
          leg10->AddEntry(h_hist[25], "W");
          leg10->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg10->AddEntry(h_hist[17], "Fake_W");
          leg10->AddEntry(h_hist[16], "Fake_ttbar");
          leg10->AddEntry(h_hist[14], "DY");
          leg10->AddEntry(h_hist[11], "diboson");
          leg10->AddEntry(h_hist[0], "SM H");
          leg10->AddEntry(h10_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg10->AddEntry(h10_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg10->Draw();
          
          c10 -> SaveAs("pTLep_SM.pdf");
         
        
        //   ===========================================================   mMMC   ===========================================================
          
          TCanvas *c11 = new TCanvas ("c11", "mMMC",1200,650);
            
          TPad *pad111 = new TPad("pad111","",0,0,0.8,1);
          TPad *pad112 = new TPad("pad112","",0.75,0,1,1);
          pad111->Draw();
          pad112->Draw();
            
          pad111->cd();
          pad111->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",30,0,600);
            h_hist[i]->GetXaxis()->SetTitle("m_{MMC} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 11000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mMMC*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs11 = new THStack("hs11", "");
          for(int i= 0; i<38 ; i++){ hs11->Add(h_hist[i], "hist11"); }
          hs11->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h11_1 = new TH1F("h11_1","Quadratic Sum from left",30,0,600); //left
          
         double QuadraticSum_l_11 = 0;
         double R_l_11 = 0;
         double E_l_11 = 0;
         double EE_l_11 = 0;
           
          for (int j=1; j<=30; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_11 +=  2* ( (S+B) * LSB - S );
                  E_l_11 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_11 = sqrt(R_l_11);
                  if(R_l_11 > 0) { EE_l_11 = sqrt(E_l_11) / QuadraticSum_l_11; }
                 
             }

             h11_1->SetBinContent(j,QuadraticSum_l_11);
             h11_1->SetLineColor(kBlue-9);
             h11_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h11_2 = new TH1F("h11_2","Quadratic Sum from right",30,0,600); //right
          
         double QuadraticSum_r_11 = 0;
         double R_r_11 = 0;
         double E_r_11 = 0;
         double EE_r_11 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_11 +=  2* ( (S+B) * LSB - S );
                  E_r_11 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_11 = sqrt(R_r_11);
                  if(R_r_11 > 0) { EE_r_11 = sqrt(E_r_11) / QuadraticSum_r_11; }
                 
             }

            h11_2->SetBinContent(j,QuadraticSum_r_11);
            h11_2->SetLineColor(kGreen-6);
            h11_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_11 = 0;
      double integral_Bkg_11 = 0;
      double integral_noVBFSM_11 = 0;

      double error_VBFSM_11 = 0;
      double error_Bkg_11 = 0;
      double error_noVBFSM_11 = 0;

        integral_VBFSM_11 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_11, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_11 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_11, "");

            integral_noVBFSM_11 += integral_Bkg_11;
            error_noVBFSM_11 += error_Bkg_11*error_Bkg_11;
        }

        error_noVBFSM_11 = sqrt(error_noVBFSM_11);

                double S_11 = 0;   S_11 = integral_VBFSM_11;
                double dS_11 = 0;  dS_11 = error_VBFSM_11;
                double B_11 = 0;   B_11 = integral_noVBFSM_11;
                double dB_11 = 0;  dB_11 = error_noVBFSM_11;

                double Significance_11 = 0;
                double R_11 = 0;
                double E_11 = 0;
                double EE_11 = 0;

                if( B_11 > 0 && S_11 > 0) {
                    
                      double LSB_11 = log(1 + S_11/B_11);
                      R_11 =  2 * ( (S_11+B_11) * LSB_11 - S_11 );
                      E_11 = LSB_11 * LSB_11 * dS_11 * dS_11 + (LSB_11 - S_11/B_11) * (LSB_11 - S_11/B_11) * dB_11 * dB_11;

                      Significance_11 = sqrt(R_11);
                      if(Significance_11 > 0) { EE_11 = sqrt(E_11) / Significance_11; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax11 = 1.1*h11_1->GetMaximum();
          float scale11 = 11000 / rightmax11;
          h11_1->Scale(scale11);
          h11_1->Draw("SAMEHIST");
          
          h11_2->Scale(scale11);
          h11_2->Draw("SAMEHIST");
          
        
          TGaxis*axis11 = new TGaxis(600,0,600,11000,0,rightmax11,510,"+L");
          // axis11->SetTitle("Quadratic Sum of significance");
          axis11->SetTitleSize(0.03);
          axis11->SetLabelSize(0.025);
          //axis11->Draw();
          
          pad112->cd();
          TLegend *leg11 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg11->SetBorderSize(1);
          leg11->SetFillColor(0);
          leg11->SetTextFont(42);
          leg11->SetTextSize(0.053);
          
          leg11->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg11->AddEntry(h_hist[37], "ggF HH");
          leg11->AddEntry(h_hist[36], "ttbar");
          leg11->AddEntry(h_hist[33], "single top");
          leg11->AddEntry(h_hist[27], "Z#tau#tau");
          leg11->AddEntry(h_hist[25], "W");
          leg11->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg11->AddEntry(h_hist[17], "Fake_W");
          leg11->AddEntry(h_hist[16], "Fake_ttbar");
          leg11->AddEntry(h_hist[14], "DY");
          leg11->AddEntry(h_hist[11], "diboson");
          leg11->AddEntry(h_hist[0], "SM H");
          leg11->AddEntry(h11_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg11->AddEntry(h11_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg11->Draw();
          
          c11 -> SaveAs("mMMC_SM.pdf");

        
        //   ===========================================================   EtaTauTau   ===========================================================
          
          TCanvas *c49 = new TCanvas ("c49", "EtaTauTau",1200,650);
            
          TPad *pad491 = new TPad("pad491","",0,0,0.8,1);
          TPad *pad492 = new TPad("pad492","",0.75,0,1,1);
          pad491->Draw();
          pad492->Draw();
            
          pad491->cd();
          pad491->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",25,0,5);
              h_hist[i]->GetXaxis()->SetTitle("#eta (#tau,#tau)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3000); //900
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="abs(EtaTauTau)>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs49 = new THStack("hs49", "");
          for(int i= 0; i<38 ; i++){ hs49->Add(h_hist[i], "hist49"); }
          hs49->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h49_1 = new TH1F("h49_1","Quadratic Sum from left",25,0,5); //left
          
         double QuadraticSum_l_49 = 0;
         double R_l_49 = 0;
         double E_l_49 = 0;
         double EE_l_49 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_49 +=  2* ( (S+B) * LSB - S );
                  E_l_49 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_49 = sqrt(R_l_49);
                  if(R_l_49 > 0) { EE_l_49 = sqrt(E_l_49) / QuadraticSum_l_49; }
                 
             }

             h49_1->SetBinContent(j,QuadraticSum_l_49);
             h49_1->SetLineColor(kBlue-9);
             h49_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h49_2 = new TH1F("h49_2","Quadratic Sum from right",25,0,5); //right
          
         double QuadraticSum_r_49 = 0;
         double R_r_49 = 0;
         double E_r_49 = 0;
         double EE_r_49 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_49 +=  2* ( (S+B) * LSB - S );
                  E_r_49 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_49 = sqrt(R_r_49);
                  if(R_r_49 > 0) { EE_r_49 = sqrt(E_r_49) / QuadraticSum_r_49; }
                 
             }

            h49_2->SetBinContent(j,QuadraticSum_r_49);
            h49_2->SetLineColor(kGreen-6);
            h49_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_49 = 0;
      double integral_Bkg_49 = 0;
      double integral_noVBFSM_49 = 0;

      double error_VBFSM_49 = 0;
      double error_Bkg_49 = 0;
      double error_noVBFSM_49 = 0;

        integral_VBFSM_49 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_49, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_49 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_49, "");

            integral_noVBFSM_49 += integral_Bkg_49;
            error_noVBFSM_49 += error_Bkg_49*error_Bkg_49;
        }

        error_noVBFSM_49 = sqrt(error_noVBFSM_49);

                double S_49 = 0;   S_49 = integral_VBFSM_49;
                double dS_49 = 0;  dS_49 = error_VBFSM_49;
                double B_49 = 0;   B_49 = integral_noVBFSM_49;
                double dB_49 = 0;  dB_49 = error_noVBFSM_49;

                double Significance_49 = 0;
                double R_49 = 0;
                double E_49 = 0;
                double EE_49 = 0;

                if( B_49 > 0 && S_49 > 0) {
                    
                      double LSB_49 = log(1 + S_49/B_49);
                      R_49 =  2 * ( (S_49+B_49) * LSB_49 - S_49 );
                      E_49 = LSB_49 * LSB_49 * dS_49 * dS_49 + (LSB_49 - S_49/B_49) * (LSB_49 - S_49/B_49) * dB_49 * dB_49;

                      Significance_49 = sqrt(R_49);
                      if(Significance_49 > 0) { EE_49 = sqrt(E_49) / Significance_49; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax49 = 1.1*h49_1->GetMaximum();
          float scale49 = 3000 / rightmax49;
          h49_1->Scale(scale49);
          h49_1->Draw("SAMEHIST");
          
          h49_2->Scale(scale49);
          h49_2->Draw("SAMEHIST");
          
        
          TGaxis*axis49 = new TGaxis(5,0,5,3000,0,rightmax49,510,"+L");
          // axis49->SetTitle("Quadratic Sum of significance");
          axis49->SetTitleSize(0.03);
          axis49->SetLabelSize(0.025);
          //axis49->Draw();
          
          pad492->cd();
          TLegend *leg49 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg49->SetBorderSize(1);
          leg49->SetFillColor(0);
          leg49->SetTextFont(42);
          leg49->SetTextSize(0.053);
          
          leg49->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg49->AddEntry(h_hist[37], "ggF HH");
          leg49->AddEntry(h_hist[36], "ttbar");
          leg49->AddEntry(h_hist[33], "single top");
          leg49->AddEntry(h_hist[27], "Z#tau#tau");
          leg49->AddEntry(h_hist[25], "W");
          leg49->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg49->AddEntry(h_hist[17], "Fake_W");
          leg49->AddEntry(h_hist[16], "Fake_ttbar");
          leg49->AddEntry(h_hist[14], "DY");
          leg49->AddEntry(h_hist[11], "diboson");
          leg49->AddEntry(h_hist[0], "SM H");
          leg49->AddEntry(h49_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg49->AddEntry(h49_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg49->Draw();
          
          c49 -> SaveAs("EtaTauTau_SM.pdf");
        
        
        //   ===========================================================   dEtalepTau   ===========================================================
          
          TCanvas *c15 = new TCanvas ("c15", "dEtalepTau",1200,650);
            
          TPad *pad151 = new TPad("pad151","",0,0,0.8,1);
          TPad *pad152 = new TPad("pad152","",0.75,0,1,1);
          pad151->Draw();
          pad152->Draw();
            
          pad151->cd();
          pad151->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,5);
            h_hist[i]->GetXaxis()->SetTitle("#Delta#eta (#tau,#tau)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 5000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dEtalepTau>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs15 = new THStack("hs15", "");
          for(int i= 0; i<38 ; i++){ hs15->Add(h_hist[i], "hist15"); }
          hs15->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h15_1 = new TH1F("h15_1","Quadratic Sum from left",25,0,5); //left
          
         double QuadraticSum_l_15 = 0;
         double R_l_15 = 0;
         double E_l_15 = 0;
         double EE_l_15 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_15 +=  2* ( (S+B) * LSB - S );
                  E_l_15 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_15 = sqrt(R_l_15);
                  if(R_l_15 > 0) { EE_l_15 = sqrt(E_l_15) / QuadraticSum_l_15; }
                 
             }

             h15_1->SetBinContent(j,QuadraticSum_l_15);
             h15_1->SetLineColor(kBlue-9);
             h15_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h15_2 = new TH1F("h15_2","Quadratic Sum from right",25,0,5); //right
          
         double QuadraticSum_r_15 = 0;
         double R_r_15 = 0;
         double E_r_15 = 0;
         double EE_r_15 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_15 +=  2* ( (S+B) * LSB - S );
                  E_r_15 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_15 = sqrt(R_r_15);
                  if(R_r_15 > 0) { EE_r_15 = sqrt(E_r_15) / QuadraticSum_r_15; }
                 
             }

            h15_2->SetBinContent(j,QuadraticSum_r_15);
            h15_2->SetLineColor(kGreen-6);
            h15_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_15 = 0;
      double integral_Bkg_15 = 0;
      double integral_noVBFSM_15 = 0;

      double error_VBFSM_15 = 0;
      double error_Bkg_15 = 0;
      double error_noVBFSM_15 = 0;

        integral_VBFSM_15 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_15, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_15 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_15, "");

            integral_noVBFSM_15 += integral_Bkg_15;
            error_noVBFSM_15 += error_Bkg_15*error_Bkg_15;
        }

        error_noVBFSM_15 = sqrt(error_noVBFSM_15);

                double S_15 = 0;   S_15 = integral_VBFSM_15;
                double dS_15 = 0;  dS_15 = error_VBFSM_15;
                double B_15 = 0;   B_15 = integral_noVBFSM_15;
                double dB_15 = 0;  dB_15 = error_noVBFSM_15;

                double Significance_15 = 0;
                double R_15 = 0;
                double E_15 = 0;
                double EE_15 = 0;

                if( B_15 > 0 && S_15 > 0) {
                    
                      double LSB_15 = log(1 + S_15/B_15);
                      R_15 =  2 * ( (S_15+B_15) * LSB_15 - S_15 );
                      E_15 = LSB_15 * LSB_15 * dS_15 * dS_15 + (LSB_15 - S_15/B_15) * (LSB_15 - S_15/B_15) * dB_15 * dB_15;

                      Significance_15 = sqrt(R_15);
                      if(Significance_15 > 0) { EE_15 = sqrt(E_15) / Significance_15; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax15 = 1.1*h15_1->GetMaximum();
          float scale15 = 5000 / rightmax15;
          h15_1->Scale(scale15);
          h15_1->Draw("SAMEHIST");
          
          h15_2->Scale(scale15);
          h15_2->Draw("SAMEHIST");
          
        
          TGaxis*axis15 = new TGaxis(5,0,5,5000,0,rightmax15,510,"+L");
          // axis15->SetTitle("Quadratic Sum of significance");
          axis15->SetTitleSize(0.03);
          axis15->SetLabelSize(0.025);
          //axis15->Draw();
          
          pad152->cd();
          TLegend *leg15 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg15->SetBorderSize(1);
          leg15->SetFillColor(0);
          leg15->SetTextFont(42);
          leg15->SetTextSize(0.053);
          
          leg15->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg15->AddEntry(h_hist[37], "ggF HH");
          leg15->AddEntry(h_hist[36], "ttbar");
          leg15->AddEntry(h_hist[33], "single top");
          leg15->AddEntry(h_hist[27], "Z#tau#tau");
          leg15->AddEntry(h_hist[25], "W");
          leg15->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg15->AddEntry(h_hist[17], "Fake_W");
          leg15->AddEntry(h_hist[16], "Fake_ttbar");
          leg15->AddEntry(h_hist[14], "DY");
          leg15->AddEntry(h_hist[11], "diboson");
          leg15->AddEntry(h_hist[0], "SM H");
          leg15->AddEntry(h15_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg15->AddEntry(h15_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg15->Draw();
          
          c15 -> SaveAs("dEtalepTau_SM.pdf");
        
        
        //   ===========================================================   dRTauLep   ===========================================================
          
          TCanvas *c18 = new TCanvas ("c18", "dRTauLep",1200,650);
            
          TPad *pad181 = new TPad("pad181","",0,0,0.8,1);
          TPad *pad182 = new TPad("pad182","",0.75,0,1,1);
          pad181->Draw();
          pad182->Draw();
            
          pad181->cd();
          pad181->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",30,0,6);
            h_hist[i]->GetXaxis()->SetTitle("#DeltaR (#tau,#tau)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3500); //2000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRTauLep>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs18 = new THStack("hs18", "");
          for(int i= 0; i<38 ; i++){ hs18->Add(h_hist[i], "hist18"); }
          hs18->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h18_1 = new TH1F("h18_1","Quadratic Sum from left",30,0,6); //left
          
         double QuadraticSum_l_18 = 0;
         double R_l_18 = 0;
         double E_l_18 = 0;
         double EE_l_18 = 0;
           
          for (int j=1; j<=30; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_18 +=  2* ( (S+B) * LSB - S );
                  E_l_18 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_18 = sqrt(R_l_18);
                  if(R_l_18 > 0) { EE_l_18 = sqrt(E_l_18) / QuadraticSum_l_18; }
                 
             }

             h18_1->SetBinContent(j,QuadraticSum_l_18);
             h18_1->SetLineColor(kBlue-9);
             h18_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h18_2 = new TH1F("h18_2","Quadratic Sum from right",30,0,6); //right
          
         double QuadraticSum_r_18 = 0;
         double R_r_18 = 0;
         double E_r_18 = 0;
         double EE_r_18 = 0;
          
          for (int j=30; j>=1; j--) {
              
           double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_18 +=  2* ( (S+B) * LSB - S );
                  E_r_18 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_18 = sqrt(R_r_18);
                  if(R_r_18 > 0) { EE_r_18 = sqrt(E_r_18) / QuadraticSum_r_18; }
                 
             }

            h18_2->SetBinContent(j,QuadraticSum_r_18);
            h18_2->SetLineColor(kGreen-6);
            h18_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_18 = 0;
      double integral_Bkg_18 = 0;
      double integral_noVBFSM_18 = 0;

      double error_VBFSM_18 = 0;
      double error_Bkg_18 = 0;
      double error_noVBFSM_18 = 0;

        integral_VBFSM_18 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_18, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_18 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_18, "");

            integral_noVBFSM_18 += integral_Bkg_18;
            error_noVBFSM_18 += error_Bkg_18*error_Bkg_18;
        }

        error_noVBFSM_18 = sqrt(error_noVBFSM_18);

                double S_18 = 0;   S_18 = integral_VBFSM_18;
                double dS_18 = 0;  dS_18 = error_VBFSM_18;
                double B_18 = 0;   B_18 = integral_noVBFSM_18;
                double dB_18 = 0;  dB_18 = error_noVBFSM_18;

                double Significance_18 = 0;
                double R_18 = 0;
                double E_18 = 0;
                double EE_18 = 0;

                if( B_18 > 0 && S_18 > 0) {
                    
                      double LSB_18 = log(1 + S_18/B_18);
                      R_18 =  2 * ( (S_18+B_18) * LSB_18 - S_18 );
                      E_18 = LSB_18 * LSB_18 * dS_18 * dS_18 + (LSB_18 - S_18/B_18) * (LSB_18 - S_18/B_18) * dB_18 * dB_18;

                      Significance_18 = sqrt(R_18);
                      if(Significance_18 > 0) { EE_18 = sqrt(E_18) / Significance_18; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax18 = 1.1*h18_1->GetMaximum();
          float scale18 = 3500 / rightmax18;
          h18_1->Scale(scale18);
          h18_1->Draw("SAMEHIST");
          
          h18_2->Scale(scale18);
          h18_2->Draw("SAMEHIST");
          
        
          TGaxis*axis18 = new TGaxis(6,0,6,3500,0,rightmax18,510,"+L");
          // axis18->SetTitle("Quadratic Sum of significance");
          axis18->SetTitleSize(0.03);
          axis18->SetLabelSize(0.025);
          //axis18->Draw();
          
          pad182->cd();
          TLegend *leg18 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg18->SetBorderSize(1);
          leg18->SetFillColor(0);
          leg18->SetTextFont(42);
          leg18->SetTextSize(0.053);
          
          leg18->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg18->AddEntry(h_hist[37], "ggF HH");
          leg18->AddEntry(h_hist[36], "ttbar");
          leg18->AddEntry(h_hist[33], "single top");
          leg18->AddEntry(h_hist[27], "Z#tau#tau");
          leg18->AddEntry(h_hist[25], "W");
          leg18->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg18->AddEntry(h_hist[17], "Fake_W");
          leg18->AddEntry(h_hist[16], "Fake_ttbar");
          leg18->AddEntry(h_hist[14], "DY");
          leg18->AddEntry(h_hist[11], "diboson");
          leg18->AddEntry(h_hist[0], "SM H");
          leg18->AddEntry(h18_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg18->AddEntry(h18_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg18->Draw();
          
          c18 -> SaveAs("dRTauLep_SM.pdf");
        
        
        //   ===========================================================   MT2   ===========================================================
          
          TCanvas *c20 = new TCanvas ("c20", "MT2",1200,650);
            
          TPad *pad201 = new TPad("pad201","",0,0,0.8,1);
          TPad *pad202 = new TPad("pad202","",0.75,0,1,1);
          pad201->Draw();
          pad202->Draw();
            
          pad201->cd();
          pad201->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",35,0,700);
            h_hist[i]->GetXaxis()->SetTitle("m_{T}^{2} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 12000); //5000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="MT2*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs20 = new THStack("hs20", "");
          for(int i= 0; i<38 ; i++){ hs20->Add(h_hist[i], "hist20"); }
          hs20->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h20_1 = new TH1F("h20_1","Quadratic Sum from left",35,0,700); //left
          
         double QuadraticSum_l_20 = 0;
         double R_l_20 = 0;
         double E_l_20 = 0;
         double EE_l_20 = 0;
           
          for (int j=1; j<=35; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_20 +=  2* ( (S+B) * LSB - S );
                  E_l_20 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_20 = sqrt(R_l_20);
                  if(R_l_20 > 0) { EE_l_20 = sqrt(E_l_20) / QuadraticSum_l_20; }
                 
             }

             h20_1->SetBinContent(j,QuadraticSum_l_20);
             h20_1->SetLineColor(kBlue-9);
             h20_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h20_2 = new TH1F("h20_2","Quadratic Sum from right",35,0,700); //right
          
         double QuadraticSum_r_20 = 0;
         double R_r_20 = 0;
         double E_r_20 = 0;
         double EE_r_20 = 0;
          
          for (int j=35; j>=1; j--) {
              
           double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_20 +=  2* ( (S+B) * LSB - S );
                  E_r_20 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_20 = sqrt(R_r_20);
                  if(R_r_20 > 0) { EE_r_20 = sqrt(E_r_20) / QuadraticSum_r_20; }
                 
             }

            h20_2->SetBinContent(j,QuadraticSum_r_20);
            h20_2->SetLineColor(kGreen-6);
            h20_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_20 = 0;
      double integral_Bkg_20 = 0;
      double integral_noVBFSM_20 = 0;

      double error_VBFSM_20 = 0;
      double error_Bkg_20 = 0;
      double error_noVBFSM_20 = 0;

        integral_VBFSM_20 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_20, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_20 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_20, "");

            integral_noVBFSM_20 += integral_Bkg_20;
            error_noVBFSM_20 += error_Bkg_20*error_Bkg_20;
        }

        error_noVBFSM_20 = sqrt(error_noVBFSM_20);

                double S_20 = 0;   S_20 = integral_VBFSM_20;
                double dS_20 = 0;  dS_20 = error_VBFSM_20;
                double B_20 = 0;   B_20 = integral_noVBFSM_20;
                double dB_20 = 0;  dB_20 = error_noVBFSM_20;

                double Significance_20 = 0;
                double R_20 = 0;
                double E_20 = 0;
                double EE_20 = 0;

                if( B_20 > 0 && S_20 > 0) {
                    
                      double LSB_20 = log(1 + S_20/B_20);
                      R_20 =  2 * ( (S_20+B_20) * LSB_20 - S_20 );
                      E_20 = LSB_20 * LSB_20 * dS_20 * dS_20 + (LSB_20 - S_20/B_20) * (LSB_20 - S_20/B_20) * dB_20 * dB_20;

                      Significance_20 = sqrt(R_20);
                      if(Significance_20 > 0) { EE_20 = sqrt(E_20) / Significance_20; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax20 = 1.1*h20_1->GetMaximum();
          float scale20 = 12000 / rightmax20;
          h20_1->Scale(scale20);
          h20_1->Draw("SAMEHIST");
          
          h20_2->Scale(scale20);
          h20_2->Draw("SAMEHIST");
          
        
          TGaxis*axis20 = new TGaxis(700,0,700,12000,0,rightmax20,510,"+L");
          // axis20->SetTitle("Quadratic Sum of significance");
          axis20->SetTitleSize(0.03);
          axis20->SetLabelSize(0.025);
          //axis20->Draw();
          
          pad202->cd();
          TLegend *leg20 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg20->SetBorderSize(1);
          leg20->SetFillColor(0);
          leg20->SetTextFont(42);
          leg20->SetTextSize(0.053);
          
          leg20->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg20->AddEntry(h_hist[37], "ggF HH");
          leg20->AddEntry(h_hist[36], "ttbar");
          leg20->AddEntry(h_hist[33], "single top");
          leg20->AddEntry(h_hist[27], "Z#tau#tau");
          leg20->AddEntry(h_hist[25], "W");
          leg20->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg20->AddEntry(h_hist[17], "Fake_W");
          leg20->AddEntry(h_hist[16], "Fake_ttbar");
          leg20->AddEntry(h_hist[14], "DY");
          leg20->AddEntry(h_hist[11], "diboson");
          leg20->AddEntry(h_hist[0], "SM H");
          leg20->AddEntry(h20_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg20->AddEntry(h20_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg20->Draw();
          
          c20 -> SaveAs("MT2_SM.pdf");
        
        
        //   ===========================================================   pTjjVBF   ===========================================================
          
          TCanvas *c39 = new TCanvas ("c39", "pTjjVBF",1200,650);
            
          TPad *pad391 = new TPad("pad391","",0,0,0.8,1);
          TPad *pad392 = new TPad("pad392","",0.75,0,1,1);
          pad391->Draw();
          pad392->Draw();
            
          pad391->cd();
          pad391->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",45,0,900);
              h_hist[i]->GetXaxis()->SetTitle("VBF p_{T}^{jj} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 [GeV]");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 7);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 5000); //2500
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTjjVBF*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs39 = new THStack("hs39", "");
          for(int i= 0; i<38 ; i++){ hs39->Add(h_hist[i], "hist39"); }
          hs39->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h39_1 = new TH1F("h39_1","Quadratic Sum from left",45,0,900); //left
          
         double QuadraticSum_l_39 = 0;
         double R_l_39 = 0;
         double E_l_39 = 0;
         double EE_l_39 = 0;
           
          for (int j=1; j<=45; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_39 +=  2* ( (S+B) * LSB - S );
                  E_l_39 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_39 = sqrt(R_l_39);
                  if(R_l_39 > 0) { EE_l_39 = sqrt(E_l_39) / QuadraticSum_l_39; }
                 
             }

             h39_1->SetBinContent(j,QuadraticSum_l_39);
             h39_1->SetLineColor(kBlue-9);
             h39_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h39_2 = new TH1F("h39_2","Quadratic Sum from right",45,0,900); //right
          
         double QuadraticSum_r_39 = 0;
         double R_r_39 = 0;
         double E_r_39 = 0;
         double EE_r_39 = 0;
          
          for (int j=45; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_39 +=  2* ( (S+B) * LSB - S );
                  E_r_39 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_39 = sqrt(R_r_39);
                  if(R_r_39 > 0) { EE_r_39 = sqrt(E_r_39) / QuadraticSum_r_39; }
                 
             }

            h39_2->SetBinContent(j,QuadraticSum_r_39);
            h39_2->SetLineColor(kGreen-6);
            h39_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_39 = 0;
      double integral_Bkg_39 = 0;
      double integral_noVBFSM_39 = 0;

      double error_VBFSM_39 = 0;
      double error_Bkg_39 = 0;
      double error_noVBFSM_39 = 0;

        integral_VBFSM_39 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_39, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_39 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_39, "");

            integral_noVBFSM_39 += integral_Bkg_39;
            error_noVBFSM_39 += error_Bkg_39*error_Bkg_39;
        }

        error_noVBFSM_39 = sqrt(error_noVBFSM_39);

                double S_39 = 0;   S_39 = integral_VBFSM_39;
                double dS_39 = 0;  dS_39 = error_VBFSM_39;
                double B_39 = 0;   B_39 = integral_noVBFSM_39;
                double dB_39 = 0;  dB_39 = error_noVBFSM_39;

                double Significance_39 = 0;
                double R_39 = 0;
                double E_39 = 0;
                double EE_39 = 0;

                if( B_39 > 0 && S_39 > 0) {
                    
                      double LSB_39 = log(1 + S_39/B_39);
                      R_39 =  2 * ( (S_39+B_39) * LSB_39 - S_39 );
                      E_39 = LSB_39 * LSB_39 * dS_39 * dS_39 + (LSB_39 - S_39/B_39) * (LSB_39 - S_39/B_39) * dB_39 * dB_39;

                      Significance_39 = sqrt(R_39);
                      if(Significance_39 > 0) { EE_39 = sqrt(E_39) / Significance_39; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax39 = 1.1*h39_1->GetMaximum();
          float scale39 = 5000 / rightmax39;
          h39_1->Scale(scale39);
          h39_1->Draw("SAMEHIST");
          
          h39_2->Scale(scale39);
          h39_2->Draw("SAMEHIST");
          
        
        TGaxis*axis39 = new TGaxis(900,0,900,5000,0,rightmax39,510,"+L");
          // axis39->SetTitle("Quadratic Sum of significance");
          axis39->SetTitleSize(0.03);
          axis39->SetLabelSize(0.025);
          //axis39->Draw();
          
          pad392->cd();
          TLegend *leg39 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg39->SetBorderSize(1);
          leg39->SetFillColor(0);
          leg39->SetTextFont(42);
          leg39->SetTextSize(0.053);
          
          leg39->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg39->AddEntry(h_hist[37], "ggF HH");
          leg39->AddEntry(h_hist[36], "ttbar");
          leg39->AddEntry(h_hist[33], "single top");
          leg39->AddEntry(h_hist[27], "Z#tau#tau");
          leg39->AddEntry(h_hist[25], "W");
          leg39->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg39->AddEntry(h_hist[17], "Fake_W");
          leg39->AddEntry(h_hist[16], "Fake_ttbar");
          leg39->AddEntry(h_hist[14], "DY");
          leg39->AddEntry(h_hist[11], "diboson");
          leg39->AddEntry(h_hist[0], "SM H");
          leg39->AddEntry(h39_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg39->AddEntry(h39_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg39->Draw();
          
          c39 -> SaveAs("pTjjVBF_SM.pdf");


        //   ===========================================================   pTj1VBF   ===========================================================
          
          TCanvas *c21 = new TCanvas ("c21", "pTj1VBF",1200,650);
            
          TPad *pad211 = new TPad("pad211","",0,0,0.8,1);
          TPad *pad212 = new TPad("pad212","",0.75,0,1,1);
          pad211->Draw();
          pad212->Draw();
            
          pad211->cd();
          pad211->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",45,0,900);
            h_hist[i]->GetXaxis()->SetTitle("VBF p_{T}^{j0} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 850);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 7000); //4000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTj1VBF*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs21 = new THStack("hs21", "");
          for(int i= 0; i<38 ; i++){ hs21->Add(h_hist[i], "hist21"); }
          hs21->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h21_1 = new TH1F("h21_1","Quadratic Sum from left",45,0,900); //left
          
         double QuadraticSum_l_21 = 0;
         double R_l_21 = 0;
         double E_l_21 = 0;
         double EE_l_21 = 0;
           
          for (int j=1; j<=45; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_21 +=  2* ( (S+B) * LSB - S );
                  E_l_21 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_21 = sqrt(R_l_21);
                  if(R_l_21 > 0) { EE_l_21 = sqrt(E_l_21) / QuadraticSum_l_21; }
                 
             }

             h21_1->SetBinContent(j,QuadraticSum_l_21);
             h21_1->SetLineColor(kBlue-9);
             h21_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h21_2 = new TH1F("h21_2","Quadratic Sum from right",45,0,900); //right
          
         double QuadraticSum_r_21 = 0;
         double R_r_21 = 0;
         double E_r_21 = 0;
         double EE_r_21 = 0;
          
          for (int j=45; j>=1; j--) {
              
           double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_21 +=  2* ( (S+B) * LSB - S );
                  E_r_21 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_21 = sqrt(R_r_21);
                  if(R_r_21 > 0) { EE_r_21 = sqrt(E_r_21) / QuadraticSum_r_21; }
                 
             }

            h21_2->SetBinContent(j,QuadraticSum_r_21);
            h21_2->SetLineColor(kGreen-6);
            h21_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_21 = 0;
      double integral_Bkg_21 = 0;
      double integral_noVBFSM_21 = 0;

      double error_VBFSM_21 = 0;
      double error_Bkg_21 = 0;
      double error_noVBFSM_21 = 0;

        integral_VBFSM_21 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_21, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_21 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_21, "");

            integral_noVBFSM_21 += integral_Bkg_21;
            error_noVBFSM_21 += error_Bkg_21*error_Bkg_21;
        }

        error_noVBFSM_21 = sqrt(error_noVBFSM_21);

                double S_21 = 0;   S_21 = integral_VBFSM_21;
                double dS_21 = 0;  dS_21 = error_VBFSM_21;
                double B_21 = 0;   B_21 = integral_noVBFSM_21;
                double dB_21 = 0;  dB_21 = error_noVBFSM_21;

                double Significance_21 = 0;
                double R_21 = 0;
                double E_21 = 0;
                double EE_21 = 0;

                if( B_21 > 0 && S_21 > 0) {
                    
                      double LSB_21 = log(1 + S_21/B_21);
                      R_21 =  2 * ( (S_21+B_21) * LSB_21 - S_21 );
                      E_21 = LSB_21 * LSB_21 * dS_21 * dS_21 + (LSB_21 - S_21/B_21) * (LSB_21 - S_21/B_21) * dB_21 * dB_21;

                      Significance_21 = sqrt(R_21);
                      if(Significance_21 > 0) { EE_21 = sqrt(E_21) / Significance_21; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax21 = 1.1*h21_1->GetMaximum();
          float scale21 = 7000 / rightmax21;
          h21_1->Scale(scale21);
          h21_1->Draw("SAMEHIST");
          
          h21_2->Scale(scale21);
          h21_2->Draw("SAMEHIST");
          
        
          TGaxis*axis21 = new TGaxis(900,0,900,7000,0,rightmax21,510,"+L");
          // axis21->SetTitle("Quadratic Sum of significance");
          axis21->SetTitleSize(0.03);
          axis21->SetLabelSize(0.025);
          //axis21->Draw();
          
          pad212->cd();
          TLegend *leg21 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg21->SetBorderSize(1);
          leg21->SetFillColor(0);
          leg21->SetTextFont(42);
          leg21->SetTextSize(0.053);
          
          leg21->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg21->AddEntry(h_hist[37], "ggF HH");
          leg21->AddEntry(h_hist[36], "ttbar");
          leg21->AddEntry(h_hist[33], "single top");
          leg21->AddEntry(h_hist[27], "Z#tau#tau");
          leg21->AddEntry(h_hist[25], "W");
          leg21->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg21->AddEntry(h_hist[17], "Fake_W");
          leg21->AddEntry(h_hist[16], "Fake_ttbar");
          leg21->AddEntry(h_hist[14], "DY");
          leg21->AddEntry(h_hist[11], "diboson");
          leg21->AddEntry(h_hist[0], "SM H");
          leg21->AddEntry(h21_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg21->AddEntry(h21_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg21->Draw();
          
          c21 -> SaveAs("pTj1VBF_SM.pdf");
        
        
        //   ===========================================================   pTj2VBF   ===========================================================
          
          TCanvas *c22 = new TCanvas ("c22", "pTj2VBF",1200,650);
            
          TPad *pad221 = new TPad("pad221","",0,0,0.8,1);
          TPad *pad222 = new TPad("pad222","",0.75,0,1,1);
          pad221->Draw();
          pad222->Draw();
            
          pad221->cd();
          pad221->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",36,0,360);
            h_hist[i]->GetXaxis()->SetTitle("VBF p_{T}^{j1} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 10 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 350);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 9000); //6500
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTj2VBF*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs22 = new THStack("hs22", "");
          for(int i= 0; i<38 ; i++){ hs22->Add(h_hist[i], "hist22"); }
          hs22->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h22_1 = new TH1F("h22_1","Quadratic Sum from left",36,0,360); //left
          
         double QuadraticSum_l_22 = 0;
         double R_l_22 = 0;
         double E_l_22 = 0;
         double EE_l_22 = 0;
           
          for (int j=1; j<=36; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_22 +=  2* ( (S+B) * LSB - S );
                  E_l_22 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_22 = sqrt(R_l_22);
                  if(R_l_22 > 0) { EE_l_22 = sqrt(E_l_22) / QuadraticSum_l_22; }
                 
             }


             h22_1->SetBinContent(j,QuadraticSum_l_22);
             h22_1->SetLineColor(kBlue-9);
             h22_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h22_2 = new TH1F("h22_2","Quadratic Sum from right",36,0,360); //right
          
         double QuadraticSum_r_22 = 0;
         double R_r_22 = 0;
         double E_r_22 = 0;
         double EE_r_22 = 0;
          
          for (int j=36; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_22 +=  2* ( (S+B) * LSB - S );
                  E_r_22 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_22 = sqrt(R_r_22);
                  if(R_r_22 > 0) { EE_r_22 = sqrt(E_r_22) / QuadraticSum_r_22; }
                 
             }

            h22_2->SetBinContent(j,QuadraticSum_r_22);
            h22_2->SetLineColor(kGreen-6);
            h22_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_22 = 0;
      double integral_Bkg_22 = 0;
      double integral_noVBFSM_22 = 0;

      double error_VBFSM_22 = 0;
      double error_Bkg_22 = 0;
      double error_noVBFSM_22 = 0;

        integral_VBFSM_22 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_22, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_22 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_22, "");

            integral_noVBFSM_22 += integral_Bkg_22;
            error_noVBFSM_22 += error_Bkg_22*error_Bkg_22;
        }

        error_noVBFSM_22 = sqrt(error_noVBFSM_22);

                double S_22 = 0;   S_22 = integral_VBFSM_22;
                double dS_22 = 0;  dS_22 = error_VBFSM_22;
                double B_22 = 0;   B_22 = integral_noVBFSM_22;
                double dB_22 = 0;  dB_22 = error_noVBFSM_22;

                double Significance_22 = 0;
                double R_22 = 0;
                double E_22 = 0;
                double EE_22 = 0;

                if( B_22 > 0 && S_22 > 0) {
                    
                      double LSB_22 = log(1 + S_22/B_22);
                      R_22 =  2 * ( (S_22+B_22) * LSB_22 - S_22 );
                      E_22 = LSB_22 * LSB_22 * dS_22 * dS_22 + (LSB_22 - S_22/B_22) * (LSB_22 - S_22/B_22) * dB_22 * dB_22;

                      Significance_22 = sqrt(R_22);
                      if(Significance_22 > 0) { EE_22 = sqrt(E_22) / Significance_22; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax22 = 1.1*h22_1->GetMaximum();
          float scale22 = 9000 / rightmax22;
          h22_1->Scale(scale22);
          h22_1->Draw("SAMEHIST");
          
          h22_2->Scale(scale22);
          h22_2->Draw("SAMEHIST");
          
        
          TGaxis*axis22 = new TGaxis(360,0,360,9000,0,rightmax22,510,"+L");
          // axis22->SetTitle("Quadratic Sum of significance");
          axis22->SetTitleSize(0.03);
          axis22->SetLabelSize(0.025);
          //axis22->Draw();
          
          pad222->cd();
          TLegend *leg22 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg22->SetBorderSize(1);
          leg22->SetFillColor(0);
          leg22->SetTextFont(42);
          leg22->SetTextSize(0.053);
          
          leg22->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg22->AddEntry(h_hist[37], "ggF HH");
          leg22->AddEntry(h_hist[36], "ttbar");
          leg22->AddEntry(h_hist[33], "single top");
          leg22->AddEntry(h_hist[27], "Z#tau#tau");
          leg22->AddEntry(h_hist[25], "W");
          leg22->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg22->AddEntry(h_hist[17], "Fake_W");
          leg22->AddEntry(h_hist[16], "Fake_ttbar");
          leg22->AddEntry(h_hist[14], "DY");
          leg22->AddEntry(h_hist[11], "diboson");
          leg22->AddEntry(h_hist[0], "SM H");
          leg22->AddEntry(h22_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg22->AddEntry(h22_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg22->Draw();
          
          c22 -> SaveAs("pTj2VBF_SM.pdf");
        */
       
        //   ===========================================================   mjjVBF   ===========================================================
          

          TCanvas *c23 = new TCanvas ("c23", "mjjVBF",1200,650);
            
          TPad *pad231 = new TPad("pad231","",0,0,0.8,1);
          TPad *pad232 = new TPad("pad232","",0.75,0,1,1);
          pad231->Draw();
          pad232->Draw();
            
          pad231->cd();
          pad231->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,5000); //33,0,6600
            h_hist[i]->GetXaxis()->SetTitle("VBF m_{jj} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 200 [GeV]");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 13000); //6000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mjjVBF*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs23 = new THStack("hs23", "");
          for(int i= 0; i<38 ; i++){ hs23->Add(h_hist[i], "hist23"); }
          hs23->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h23_1 = new TH1F("h23_1","Quadratic Sum from left",25,0,5000); //left
          
         double QuadraticSum_l_23 = 0;
         double R_l_23 = 0;
         double E_l_23 = 0;
         double EE_l_23 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_23 +=  2* ( (S+B) * LSB - S );
                  E_l_23 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_23 = sqrt(R_l_23);
                  if(R_l_23 > 0) { EE_l_23 = sqrt(E_l_23) / QuadraticSum_l_23; }
                 
             }

             h23_1->SetBinContent(j,QuadraticSum_l_23);
             h23_1->SetLineColor(kBlue-9);
             h23_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h23_2 = new TH1F("h23_2","Quadratic Sum from right",25,0,5000); //right
          
         double QuadraticSum_r_23 = 0;
         double R_r_23 = 0;
         double E_r_23 = 0;
         double EE_r_23 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_23 +=  2* ( (S+B) * LSB - S );
                  E_r_23 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_23 = sqrt(R_r_23);
                  if(R_r_23 > 0) { EE_r_23 = sqrt(E_r_23) / QuadraticSum_r_23; }
                 
             }

            h23_2->SetBinContent(j,QuadraticSum_r_23);
            h23_2->SetLineColor(kGreen-6);
            h23_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_23 = 0;
      double integral_Bkg_23 = 0;
      double integral_noVBFSM_23 = 0;

      double error_VBFSM_23 = 0;
      double error_Bkg_23 = 0;
      double error_noVBFSM_23 = 0;

        integral_VBFSM_23 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_23, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_23 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_23, "");

            integral_noVBFSM_23 += integral_Bkg_23;
            error_noVBFSM_23 += error_Bkg_23*error_Bkg_23;
        }

        error_noVBFSM_23 = sqrt(error_noVBFSM_23);

                double S_23 = 0;   S_23 = integral_VBFSM_23;
                double dS_23 = 0;  dS_23 = error_VBFSM_23;
                double B_23 = 0;   B_23 = integral_noVBFSM_23;
                double dB_23 = 0;  dB_23 = error_noVBFSM_23;

                double Significance_23 = 0;
                double R_23 = 0;
                double E_23 = 0;
                double EE_23 = 0;

                if( B_23 > 0 && S_23 > 0) {
                    
                      double LSB_23 = log(1 + S_23/B_23);
                      R_23 =  2 * ( (S_23+B_23) * LSB_23 - S_23 );
                      E_23 = LSB_23 * LSB_23 * dS_23 * dS_23 + (LSB_23 - S_23/B_23) * (LSB_23 - S_23/B_23) * dB_23 * dB_23;

                      Significance_23 = sqrt(R_23);
                      if(Significance_23 > 0) { EE_23 = sqrt(E_23) / Significance_23; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax23 = 1.1*h23_1->GetMaximum();
          float scale23 = 13000 / rightmax23;
          h23_1->Scale(scale23);
           h23_1->Draw("SAMEHIST");
          
          h23_2->Scale(scale23);
           h23_2->Draw("SAMEHIST");
          
        
          TGaxis*axis23 = new TGaxis(5000,0,5000,13000,0,rightmax23,510,"+L");
          // axis23->SetTitle("Quadratic Sum of significance");
          axis23->SetTitleSize(0.03);
          axis23->SetLabelSize(0.025);
          // axis23->Draw();
          
          pad232->cd();
          TLegend *leg23 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg23->SetBorderSize(1);
          leg23->SetFillColor(0);
          leg23->SetTextFont(42);
          leg23->SetTextSize(0.053);
          
          leg23->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg23->AddEntry(h_hist[37], "ggF HH");
          leg23->AddEntry(h_hist[36], "ttbar");
          leg23->AddEntry(h_hist[33], "single top");
          leg23->AddEntry(h_hist[27], "Z#tau#tau");
          leg23->AddEntry(h_hist[25], "W");
          leg23->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg23->AddEntry(h_hist[17], "Fake_W");
          leg23->AddEntry(h_hist[16], "Fake_ttbar");
          leg23->AddEntry(h_hist[14], "DY");
          leg23->AddEntry(h_hist[11], "diboson");
          leg23->AddEntry(h_hist[0], "SM H");
          leg23->AddEntry(h23_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg23->AddEntry(h23_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg23->Draw();
          
          c23 -> SaveAs("mjjVBF_SM.pdf");
        
        /*
        //   ===========================================================   dRb0lep   ===========================================================
          
          TCanvas *c24 = new TCanvas ("c24", "dRb0lep",1200,650);
            
          TPad *pad241 = new TPad("pad241","",0,0,0.8,1);
          TPad *pad242 = new TPad("pad242","",0.75,0,1,1);
          pad241->Draw();
          pad242->Draw();
            
          pad241->cd();
          pad241->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,6);
            h_hist[i]->GetXaxis()->SetTitle("#DeltaR (b0, #tau_{lep})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 4000); 
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRb0lep>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs24 = new THStack("hs24", "");
          for(int i= 0; i<38 ; i++){ hs24->Add(h_hist[i], "hist24"); }
          hs24->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h24_1 = new TH1F("h24_1","Quadratic Sum from left",30,0,6); //left
          
         double QuadraticSum_l_24 = 0;
         double R_l_24 = 0;
         double E_l_24 = 0;
         double EE_l_24 = 0;
           
          for (int j=1; j<=30; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_24 +=  2* ( (S+B) * LSB - S );
                  E_l_24 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_24 = sqrt(R_l_24);
                  if(R_l_24 > 0) { EE_l_24 = sqrt(E_l_24) / QuadraticSum_l_24; }
                 
             }

             h24_1->SetBinContent(j,QuadraticSum_l_24);
             h24_1->SetLineColor(kBlue-9);
             h24_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h24_2 = new TH1F("h24_2","Quadratic Sum from right",30,0,6); //right
          
         double QuadraticSum_r_24 = 0;
         double R_r_24 = 0;
         double E_r_24 = 0;
         double EE_r_24 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_24 +=  2* ( (S+B) * LSB - S );
                  E_r_24 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_24 = sqrt(R_r_24);
                  if(R_r_24 > 0) { EE_r_24 = sqrt(E_r_24) / QuadraticSum_r_24; }
                 
             }

            h24_2->SetBinContent(j,QuadraticSum_r_24);
            h24_2->SetLineColor(kGreen-6);
            h24_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_24 = 0;
      double integral_Bkg_24 = 0;
      double integral_noVBFSM_24 = 0;

      double error_VBFSM_24 = 0;
      double error_Bkg_24 = 0;
      double error_noVBFSM_24 = 0;

        integral_VBFSM_24 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_24, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_24 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_24, "");

            integral_noVBFSM_24 += integral_Bkg_24;
            error_noVBFSM_24 += error_Bkg_24*error_Bkg_24;
        }

        error_noVBFSM_24 = sqrt(error_noVBFSM_24);

                double S_24 = 0;   S_24 = integral_VBFSM_24;
                double dS_24 = 0;  dS_24 = error_VBFSM_24;
                double B_24 = 0;   B_24 = integral_noVBFSM_24;
                double dB_24 = 0;  dB_24 = error_noVBFSM_24;

                double Significance_24 = 0;
                double R_24 = 0;
                double E_24 = 0;
                double EE_24 = 0;

                if( B_24 > 0 && S_24 > 0) {
                    
                      double LSB_24 = log(1 + S_24/B_24);
                      R_24 =  2 * ( (S_24+B_24) * LSB_24 - S_24 );
                      E_24 = LSB_24 * LSB_24 * dS_24 * dS_24 + (LSB_24 - S_24/B_24) * (LSB_24 - S_24/B_24) * dB_24 * dB_24;

                      Significance_24 = sqrt(R_24);
                      if(Significance_24 > 0) { EE_24 = sqrt(E_24) / Significance_24; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax24 = 1.1*h24_1->GetMaximum();
          float scale24 = 4000 / rightmax24;
          h24_1->Scale(scale24);
          h24_1->Draw("SAMEHIST");
          
          h24_2->Scale(scale24);
          h24_2->Draw("SAMEHIST");
          
        
        TGaxis*axis24 = new TGaxis(6,0,6,4000,0,rightmax24,510,"+L");
          // axis24->SetTitle("Quadratic Sum of significance");
          axis24->SetTitleSize(0.03);
          axis24->SetLabelSize(0.025);
          //axis24->Draw();
          
          pad242->cd();
          TLegend *leg24 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg24->SetBorderSize(1);
          leg24->SetFillColor(0);
          leg24->SetTextFont(42);
          leg24->SetTextSize(0.053);
          
          leg24->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg24->AddEntry(h_hist[37], "ggF HH");
          leg24->AddEntry(h_hist[36], "ttbar");
          leg24->AddEntry(h_hist[33], "single top");
          leg24->AddEntry(h_hist[27], "Z#tau#tau");
          leg24->AddEntry(h_hist[25], "W");
          leg24->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg24->AddEntry(h_hist[17], "Fake_W");
          leg24->AddEntry(h_hist[16], "Fake_ttbar");
          leg24->AddEntry(h_hist[14], "DY");
          leg24->AddEntry(h_hist[11], "diboson");
          leg24->AddEntry(h_hist[0], "SM H");
          leg24->AddEntry(h24_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg24->AddEntry(h24_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg24->Draw();
          
          c24 -> SaveAs("dRb0lep_SM.pdf");
        
        
        //   ===========================================================   dRb1lep   ===========================================================
          
          TCanvas *c25 = new TCanvas ("c25", "dRb1lep",1200,650);
            
          TPad *pad251 = new TPad("pad251","",0,0,0.8,1);
          TPad *pad252 = new TPad("pad252","",0.75,0,1,1);
          pad251->Draw();
          pad252->Draw();
            
          pad251->cd();
          pad251->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,6);
            h_hist[i]->GetXaxis()->SetTitle("#DeltaR (b1, #tau_{lep})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3800);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRb1lep>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs25 = new THStack("hs25", "");
          for(int i= 0; i<38 ; i++){ hs25->Add(h_hist[i], "hist25"); }
          hs25->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h25_1 = new TH1F("h25_1","Quadratic Sum from left",30,0,6); //left
          
         double QuadraticSum_l_25 = 0;
         double R_l_25 = 0;
         double E_l_25 = 0;
         double EE_l_25 = 0;
           
          for (int j=1; j<=30; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_25 +=  2* ( (S+B) * LSB - S );
                  E_l_25 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_25 = sqrt(R_l_25);
                  if(R_l_25 > 0) { EE_l_25 = sqrt(E_l_25) / QuadraticSum_l_25; }
                 
             }

             h25_1->SetBinContent(j,QuadraticSum_l_25);
             h25_1->SetLineColor(kBlue-9);
             h25_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h25_2 = new TH1F("h25_2","Quadratic Sum from right",30,0,6); //right
          
         double QuadraticSum_r_25 = 0;
         double R_r_25 = 0;
         double E_r_25 = 0;
         double EE_r_25 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_25 +=  2* ( (S+B) * LSB - S );
                  E_r_25 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_25 = sqrt(R_r_25);
                  if(R_r_25 > 0) { EE_r_25 = sqrt(E_r_25) / QuadraticSum_r_25; }
                 
             }

            h25_2->SetBinContent(j,QuadraticSum_r_25);
            h25_2->SetLineColor(kGreen-6);
            h25_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_25 = 0;
      double integral_Bkg_25 = 0;
      double integral_noVBFSM_25 = 0;

      double error_VBFSM_25 = 0;
      double error_Bkg_25 = 0;
      double error_noVBFSM_25 = 0;

        integral_VBFSM_25 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_25, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_25 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_25, "");

            integral_noVBFSM_25 += integral_Bkg_25;
            error_noVBFSM_25 += error_Bkg_25*error_Bkg_25;
        }

        error_noVBFSM_25 = sqrt(error_noVBFSM_25);

                double S_25 = 0;   S_25 = integral_VBFSM_25;
                double dS_25 = 0;  dS_25 = error_VBFSM_25;
                double B_25 = 0;   B_25 = integral_noVBFSM_25;
                double dB_25 = 0;  dB_25 = error_noVBFSM_25;

                double Significance_25 = 0;
                double R_25 = 0;
                double E_25 = 0;
                double EE_25 = 0;

                if( B_25 > 0 && S_25 > 0) {
                    
                      double LSB_25 = log(1 + S_25/B_25);
                      R_25 =  2 * ( (S_25+B_25) * LSB_25 - S_25 );
                      E_25 = LSB_25 * LSB_25 * dS_25 * dS_25 + (LSB_25 - S_25/B_25) * (LSB_25 - S_25/B_25) * dB_25 * dB_25;

                      Significance_25 = sqrt(R_25);
                      if(Significance_25 > 0) { EE_25 = sqrt(E_25) / Significance_25; }
                    
                }
         
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax25 = 1.1*h25_1->GetMaximum();
          float scale25 = 3800 / rightmax25;
          h25_1->Scale(scale25);
          h25_1->Draw("SAMEHIST");
          
          h25_2->Scale(scale25);
          h25_2->Draw("SAMEHIST");
          
        
        TGaxis*axis25 = new TGaxis(6,0,6,3800,0,rightmax25,510,"+L");
          // axis25->SetTitle("Quadratic Sum of significance");
          axis25->SetTitleSize(0.03);
          axis25->SetLabelSize(0.025);
          //axis25->Draw();
          
          pad252->cd();
          TLegend *leg25 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg25->SetBorderSize(1);
          leg25->SetFillColor(0);
          leg25->SetTextFont(42);
          leg25->SetTextSize(0.053);
          
          leg25->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg25->AddEntry(h_hist[37], "ggF HH");
          leg25->AddEntry(h_hist[36], "ttbar");
          leg25->AddEntry(h_hist[33], "single top");
          leg25->AddEntry(h_hist[27], "Z#tau#tau");
          leg25->AddEntry(h_hist[25], "W");
          leg25->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg25->AddEntry(h_hist[17], "Fake_W");
          leg25->AddEntry(h_hist[16], "Fake_ttbar");
          leg25->AddEntry(h_hist[14], "DY");
          leg25->AddEntry(h_hist[11], "diboson");
          leg25->AddEntry(h_hist[0], "SM H");
          leg25->AddEntry(h25_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg25->AddEntry(h25_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg25->Draw();
          
          c25 -> SaveAs("dRb1lep_SM.pdf");


          //   ===========================================================   dRb0tau   ===========================================================
          
          TCanvas *c27 = new TCanvas ("c27", "dRb0tau",1200,650);
            
          TPad *pad271 = new TPad("pad271","",0,0,0.8,1);
          TPad *pad272 = new TPad("pad272","",0.75,0,1,1);
          pad271->Draw();
          pad272->Draw();
            
          pad271->cd();
          pad271->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,6);
            h_hist[i]->GetXaxis()->SetTitle("#DeltaR (b0, #tau_{had})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3800);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRb0tau>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs27 = new THStack("hs27", "");
          for(int i= 0; i<38 ; i++){ hs27->Add(h_hist[i], "hist27"); }
          hs27->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h27_1 = new TH1F("h27_1","Quadratic Sum from left",30,0,6); //left
          
         double QuadraticSum_l_27 = 0;
         double R_l_27 = 0;
         double E_l_27 = 0;
         double EE_l_27 = 0;
           
          for (int j=1; j<=30; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_27 +=  2* ( (S+B) * LSB - S );
                  E_l_27 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_27 = sqrt(R_l_27);
                  if(R_l_27 > 0) { EE_l_27 = sqrt(E_l_27) / QuadraticSum_l_27; }
                 
             }

             h27_1->SetBinContent(j,QuadraticSum_l_27);
             h27_1->SetLineColor(kBlue-9);
             h27_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h27_2 = new TH1F("h27_2","Quadratic Sum from right",30,0,6); //right
          
         double QuadraticSum_r_27 = 0;
         double R_r_27 = 0;
         double E_r_27 = 0;
         double EE_r_27 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_27 +=  2* ( (S+B) * LSB - S );
                  E_r_27 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_27 = sqrt(R_r_27);
                  if(R_r_27 > 0) { EE_r_27 = sqrt(E_r_27) / QuadraticSum_r_27; }
                 
             }

            h27_2->SetBinContent(j,QuadraticSum_r_27);
            h27_2->SetLineColor(kGreen-6);
            h27_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_27 = 0;
      double integral_Bkg_27 = 0;
      double integral_noVBFSM_27 = 0;

      double error_VBFSM_27 = 0;
      double error_Bkg_27 = 0;
      double error_noVBFSM_27 = 0;

        integral_VBFSM_27 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_27, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_27 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_27, "");

            integral_noVBFSM_27 += integral_Bkg_27;
            error_noVBFSM_27 += error_Bkg_27*error_Bkg_27;
        }

        error_noVBFSM_27 = sqrt(error_noVBFSM_27);

                double S_27 = 0;   S_27 = integral_VBFSM_27;
                double dS_27 = 0;  dS_27 = error_VBFSM_27;
                double B_27 = 0;   B_27 = integral_noVBFSM_27;
                double dB_27 = 0;  dB_27 = error_noVBFSM_27;

                double Significance_27 = 0;
                double R_27 = 0;
                double E_27 = 0;
                double EE_27 = 0;

                if( B_27 > 0 && S_27 > 0) {
                    
                      double LSB_27 = log(1 + S_27/B_27);
                      R_27 =  2 * ( (S_27+B_27) * LSB_27 - S_27 );
                      E_27 = LSB_27 * LSB_27 * dS_27 * dS_27 + (LSB_27 - S_27/B_27) * (LSB_27 - S_27/B_27) * dB_27 * dB_27;

                      Significance_27 = sqrt(R_27);
                      if(Significance_27 > 0) { EE_27 = sqrt(E_27) / Significance_27; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax27 = 1.1*h27_1->GetMaximum();
          float scale27 = 3800 / rightmax27;
          h27_1->Scale(scale27);
          h27_1->Draw("SAMEHIST");
          
          h27_2->Scale(scale27);
          h27_2->Draw("SAMEHIST");
          
        
        TGaxis*axis27 = new TGaxis(6,0,6,3800,0,rightmax27,510,"+L");
          // axis27->SetTitle("Quadratic Sum of significance");
          axis27->SetTitleSize(0.03);
          axis27->SetLabelSize(0.025);
          //axis27->Draw();
          
          pad272->cd();
          TLegend *leg27 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg27->SetBorderSize(1);
          leg27->SetFillColor(0);
          leg27->SetTextFont(42);
          leg27->SetTextSize(0.053);
          
          leg27->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg27->AddEntry(h_hist[37], "ggF HH");
          leg27->AddEntry(h_hist[36], "ttbar");
          leg27->AddEntry(h_hist[33], "single top");
          leg27->AddEntry(h_hist[27], "Z#tau#tau");
          leg27->AddEntry(h_hist[25], "W");
          leg27->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg27->AddEntry(h_hist[17], "Fake_W");
          leg27->AddEntry(h_hist[16], "Fake_ttbar");
          leg27->AddEntry(h_hist[14], "DY");
          leg27->AddEntry(h_hist[11], "diboson");
          leg27->AddEntry(h_hist[0], "SM H");
          leg27->AddEntry(h27_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg27->AddEntry(h27_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg27->Draw();
          
          c27 -> SaveAs("dRb0tau_SM.pdf");
        
        
        //   ===========================================================   dRb1tau   ===========================================================
          
          TCanvas *c28 = new TCanvas ("c28", "dRb1tau",1200,650);
            
          TPad *pad281 = new TPad("pad281","",0,0,0.8,1);
          TPad *pad282 = new TPad("pad282","",0.75,0,1,1);
          pad281->Draw();
          pad282->Draw();
            
          pad281->cd();
          pad281->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,6);
            h_hist[i]->GetXaxis()->SetTitle("#DeltaR (b1, #tau_{had})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3600);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRb1tau>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs28 = new THStack("hs28", "");
          for(int i= 0; i<38 ; i++){ hs28->Add(h_hist[i], "hist28"); }
          hs28->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h28_1 = new TH1F("h28_1","Quadratic Sum from left",30,0,6); //left
          
         double QuadraticSum_l_28 = 0;
         double R_l_28 = 0;
         double E_l_28 = 0;
         double EE_l_28 = 0;
           
          for (int j=1; j<=30; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_28 +=  2* ( (S+B) * LSB - S );
                  E_l_28 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_28 = sqrt(R_l_28);
                  if(R_l_28 > 0) { EE_l_28 = sqrt(E_l_28) / QuadraticSum_l_28; }
                 
             }

             h28_1->SetBinContent(j,QuadraticSum_l_28);
             h28_1->SetLineColor(kBlue-9);
             h28_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h28_2 = new TH1F("h28_2","Quadratic Sum from right",30,0,6); //right
          
         double QuadraticSum_r_28 = 0;
         double R_r_28 = 0;
         double E_r_28 = 0;
         double EE_r_28 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_28 +=  2* ( (S+B) * LSB - S );
                  E_r_28 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_28 = sqrt(R_r_28);
                  if(R_r_28 > 0) { EE_r_28 = sqrt(E_r_28) / QuadraticSum_r_28; }
                 
             }

            h28_2->SetBinContent(j,QuadraticSum_r_28);
            h28_2->SetLineColor(kGreen-6);
            h28_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_28 = 0;
      double integral_Bkg_28 = 0;
      double integral_noVBFSM_28 = 0;

      double error_VBFSM_28 = 0;
      double error_Bkg_28 = 0;
      double error_noVBFSM_28 = 0;

        integral_VBFSM_28 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_28, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_28 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_28, "");

            integral_noVBFSM_28 += integral_Bkg_28;
            error_noVBFSM_28 += error_Bkg_28*error_Bkg_28;
        }

        error_noVBFSM_28 = sqrt(error_noVBFSM_28);

                double S_28 = 0;   S_28 = integral_VBFSM_28;
                double dS_28 = 0;  dS_28 = error_VBFSM_28;
                double B_28 = 0;   B_28 = integral_noVBFSM_28;
                double dB_28 = 0;  dB_28 = error_noVBFSM_28;

                double Significance_28 = 0;
                double R_28 = 0;
                double E_28 = 0;
                double EE_28 = 0;

                if( B_28 > 0 && S_28 > 0) {
                    
                      double LSB_28 = log(1 + S_28/B_28);
                      R_28 =  2 * ( (S_28+B_28) * LSB_28 - S_28 );
                      E_28 = LSB_28 * LSB_28 * dS_28 * dS_28 + (LSB_28 - S_28/B_28) * (LSB_28 - S_28/B_28) * dB_28 * dB_28;

                      Significance_28 = sqrt(R_28);
                      if(Significance_28 > 0) { EE_28 = sqrt(E_28) / Significance_28; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax28 = 1.1*h28_1->GetMaximum();
          float scale28 = 3600 / rightmax28;
          h28_1->Scale(scale28);
          h28_1->Draw("SAMEHIST");
          
          h28_2->Scale(scale28);
          h28_2->Draw("SAMEHIST");
          
        
        TGaxis*axis28 = new TGaxis(6,0,6,3600,0,rightmax28,510,"+L");
          // axis28->SetTitle("Quadratic Sum of significance");
          axis28->SetTitleSize(0.03);
          axis28->SetLabelSize(0.025);
          //axis28->Draw();
          
          pad282->cd();
          TLegend *leg28 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg28->SetBorderSize(1);
          leg28->SetFillColor(0);
          leg28->SetTextFont(42);
          leg28->SetTextSize(0.053);
          
          leg28->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg28->AddEntry(h_hist[37], "ggF HH");
          leg28->AddEntry(h_hist[36], "ttbar");
          leg28->AddEntry(h_hist[33], "single top");
          leg28->AddEntry(h_hist[27], "Z#tau#tau");
          leg28->AddEntry(h_hist[25], "W");
          leg28->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg28->AddEntry(h_hist[17], "Fake_W");
          leg28->AddEntry(h_hist[16], "Fake_ttbar");
          leg28->AddEntry(h_hist[14], "DY");
          leg28->AddEntry(h_hist[11], "diboson");
          leg28->AddEntry(h_hist[0], "SM H");
          leg28->AddEntry(h28_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg28->AddEntry(h28_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg28->Draw();
          
          c28 -> SaveAs("dRb1tau_SM.pdf");


          //   ===========================================================   dPhijjVBF   ===========================================================
         
         TCanvas *c60 = new TCanvas ("c60", "dPhijjVBF",1200,650);
           
         TPad *pad601 = new TPad("pad601","",0,0,0.8,1);
         TPad *pad602 = new TPad("pad602","",0.75,0,1,1);
         pad601->Draw();
         pad602->Draw();
           
         pad601->cd();
         pad601->SetTickx();
         gStyle->SetOptStat(kFALSE);
         
         for (int i=0; i<n_smp; i++){
           h_nm = h_title[i].c_str();
             h_hist[i] = new TH1F(h_nm, "",35,0,3.5);
             h_hist[i]->GetXaxis()->SetTitle("VBF #Delta#phi (j,j)");
           h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");//
           //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
           h_hist[i]->GetYaxis()->SetRangeUser(0, 600); //900
         }
         
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

       
         for (int i=0; i<n_smp; i++){
             hist_draw[i]="dPhijjVBF>>"+h_title[i];
         }
         
         for(int i = 0; i<n_smp; i++){
           
           if (i == 0 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
           
         }
         
         THStack *hs60 = new THStack("hs60", "");
         for(int i= 0; i<38 ; i++){ hs60->Add(h_hist[i], "hist60"); }
         hs60->Draw("SAMEHIST");
       

        //cout << " ============== significance From left ============== " << endl;
        //cout << " " << endl;
         
       TH1F *h60_1 = new TH1F("h60_1","Quadratic Sum from left",35,0,3.5); //left
         
         double QuadraticSum_l_60 = 0;
         double R_l_60 = 0;
         double E_l_60 = 0;
         double EE_l_60 = 0;
          
         for (int j=1; j<=35; j++) {
             
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_60 +=  2* ( (S+B) * LSB - S );
                  E_l_60 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_60 = sqrt(R_l_60);
                  if(R_l_60 > 0) { EE_l_60 = sqrt(E_l_60) / QuadraticSum_l_60; }
                 
             }

            h60_1->SetBinContent(j,QuadraticSum_l_60);
            h60_1->SetLineColor(kBlue-9);
            h60_1->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
        }
            

        // ------------------------------------------------------------
        
        //cout << " " << endl;
        //cout << " ============== significance From right ============== " << endl;
        //cout << " " << endl;
         
       TH1F *h60_2 = new TH1F("h60_2","Quadratic Sum from right",35,0,3.5); //right
         
         double QuadraticSum_r_60 = 0;
         double R_r_60 = 0;
         double E_r_60 = 0;
         double EE_r_60 = 0;
         
         for (int j=35; j>=1; j--) {
             
           double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_60 +=  2* ( (S+B) * LSB - S );
                  E_r_60 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_60 = sqrt(R_r_60);
                  if(R_r_60 > 0) { EE_r_60 = sqrt(E_r_60) / QuadraticSum_r_60; }
                 
             }

           h60_2->SetBinContent(j,QuadraticSum_r_60);
           h60_2->SetLineColor(kGreen-6);
           h60_2->SetLineStyle(2);
           
           //cout << " ************************************ " << endl;
        }

        //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_60 = 0;
      double integral_Bkg_60 = 0;
      double integral_noVBFSM_60 = 0;

      double error_VBFSM_60 = 0;
      double error_Bkg_60 = 0;
      double error_noVBFSM_60 = 0;

        integral_VBFSM_60 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_60, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_60 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_60, "");

            integral_noVBFSM_60 += integral_Bkg_60;
            error_noVBFSM_60 += error_Bkg_60*error_Bkg_60;
        }

        error_noVBFSM_60 = sqrt(error_noVBFSM_60);

                double S_60 = 0;   S_60 = integral_VBFSM_60;
                double dS_60 = 0;  dS_60 = error_VBFSM_60;
                double B_60 = 0;   B_60 = integral_noVBFSM_60;
                double dB_60 = 0;  dB_60 = error_noVBFSM_60;

                double Significance_60 = 0;
                double R_60 = 0;
                double E_60 = 0;
                double EE_60 = 0;

                if( B_60 > 0 && S_60 > 0) {
                    
                      double LSB_60 = log(1 + S_60/B_60);
                      R_60 =  2 * ( (S_60+B_60) * LSB_60 - S_60 );
                      E_60 = LSB_60 * LSB_60 * dS_60 * dS_60 + (LSB_60 - S_60/B_60) * (LSB_60 - S_60/B_60) * dB_60 * dB_60;

                      Significance_60 = sqrt(R_60);
                      if(Significance_60 > 0) { EE_60 = sqrt(E_60) / Significance_60; }
                    
                }
        
         for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
         
         float rightmax60 = 1.1*h60_1->GetMaximum();
         float scale60 = 600 / rightmax60;
         h60_1->Scale(scale60);
         h60_1->Draw("SAMEHIST");
         
         h60_2->Scale(scale60);
         h60_2->Draw("SAMEHIST");
         
       
         TGaxis*axis60 = new TGaxis(3.5,0,3.5,600,0,rightmax60,510,"+L");
        //  axis60->SetTitle("Quadratic Sum of significance");
         axis60->SetTitleSize(0.03);
         axis60->SetLabelSize(0.025);
         //axis60->Draw();
         
         pad602->cd();
         TLegend *leg60 = new TLegend(0.008, 0.1, 0.985,0.9);
         leg60->SetBorderSize(1);
         leg60->SetFillColor(0);
         leg60->SetTextFont(42);
         leg60->SetTextSize(0.053);
         
          leg60->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg60->AddEntry(h_hist[37], "ggF HH");
          leg60->AddEntry(h_hist[36], "ttbar");
          leg60->AddEntry(h_hist[33], "single top");
          leg60->AddEntry(h_hist[27], "Z#tau#tau");
          leg60->AddEntry(h_hist[25], "W");
          leg60->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg60->AddEntry(h_hist[17], "Fake_W");
          leg60->AddEntry(h_hist[16], "Fake_ttbar");
          leg60->AddEntry(h_hist[14], "DY");
          leg60->AddEntry(h_hist[11], "diboson");
          leg60->AddEntry(h_hist[0], "SM H");
         leg60->AddEntry(h60_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
         leg60->AddEntry(h60_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
         leg60->Draw();
         
         c60 -> SaveAs("dPhijjVBF_SM.pdf");
        

        //   ===========================================================   dEtajjVBF   ===========================================================
          
          TCanvas *c26 = new TCanvas ("c26", "dEtajjVBF",1200,650);
            
          TPad *pad261 = new TPad("pad261","",0,0,0.8,1);
          TPad *pad262 = new TPad("pad262","",0.75,0,1,1);
          pad261->Draw();
          pad262->Draw();
            
          pad261->cd();
          pad261->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",20,0,10);
            h_hist[i]->GetXaxis()->SetTitle("VBF #Delta#eta (j,j)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 4500); //2200
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dEtajjVBF>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs26 = new THStack("hs26", "");
          for(int i= 0; i<38 ; i++){ hs26->Add(h_hist[i], "hist26"); }
          hs26->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h26_1 = new TH1F("h26_1","Quadratic Sum from left",20,0,10); //left
          
         double QuadraticSum_l_26 = 0;
         double R_l_26 = 0;
         double E_l_26 = 0;
         double EE_l_26 = 0;
           
          for (int j=1; j<=20; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_26 +=  2* ( (S+B) * LSB - S );
                  E_l_26 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_26 = sqrt(R_l_26);
                  if(R_l_26 > 0) { EE_l_26 = sqrt(E_l_26) / QuadraticSum_l_26; }
                 
             }


             h26_1->SetBinContent(j,QuadraticSum_l_26);
             h26_1->SetLineColor(kBlue-9);
             h26_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h26_2 = new TH1F("h26_2","Quadratic Sum from right",20,0,10); //right
          
         double QuadraticSum_r_26 = 0;
         double R_r_26 = 0;
         double E_r_26 = 0;
         double EE_r_26 = 0;
          
          for (int j=20; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_26 +=  2* ( (S+B) * LSB - S );
                  E_r_26 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_26 = sqrt(R_r_26);
                  if(R_r_26 > 0) { EE_r_26 = sqrt(E_r_26) / QuadraticSum_r_26; }
                 
             }

            h26_2->SetBinContent(j,QuadraticSum_r_26);
            h26_2->SetLineColor(kGreen-6);
            h26_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_26 = 0;
      double integral_Bkg_26 = 0;
      double integral_noVBFSM_26 = 0;

      double error_VBFSM_26 = 0;
      double error_Bkg_26 = 0;
      double error_noVBFSM_26 = 0;

        integral_VBFSM_26 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_26, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_26 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_26, "");

            integral_noVBFSM_26 += integral_Bkg_26;
            error_noVBFSM_26 += error_Bkg_26*error_Bkg_26;
        }

        error_noVBFSM_26 = sqrt(error_noVBFSM_26);

                double S_26 = 0;   S_26 = integral_VBFSM_26;
                double dS_26 = 0;  dS_26 = error_VBFSM_26;
                double B_26 = 0;   B_26 = integral_noVBFSM_26;
                double dB_26 = 0;  dB_26 = error_noVBFSM_26;

                double Significance_26 = 0;
                double R_26 = 0;
                double E_26 = 0;
                double EE_26 = 0;

                if( B_26 > 0 && S_26 > 0) {
                    
                      double LSB_26 = log(1 + S_26/B_26);
                      R_26 =  2 * ( (S_26+B_26) * LSB_26 - S_26 );
                      E_26 = LSB_26 * LSB_26 * dS_26 * dS_26 + (LSB_26 - S_26/B_26) * (LSB_26 - S_26/B_26) * dB_26 * dB_26;

                      Significance_26 = sqrt(R_26);
                      if(Significance_26 > 0) { EE_26 = sqrt(E_26) / Significance_26; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax26 = 1.1*h26_1->GetMaximum();
          float scale26 = 4500 / rightmax26;
          h26_1->Scale(scale26);
          h26_1->Draw("SAMEHIST");
          
          h26_2->Scale(scale26);
          h26_2->Draw("SAMEHIST");
          
        
        TGaxis*axis26 = new TGaxis(10,0,10,4500,0,rightmax26,510,"+L");
          // axis26->SetTitle("Quadratic Sum of significance");
          axis26->SetTitleSize(0.03);
          axis26->SetLabelSize(0.025);
          //axis26->Draw();
          
          pad262->cd();
          TLegend *leg26 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg26->SetBorderSize(1);
          leg26->SetFillColor(0);
          leg26->SetTextFont(42);
          leg26->SetTextSize(0.053);
          
          leg26->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg26->AddEntry(h_hist[37], "ggF HH");
          leg26->AddEntry(h_hist[36], "ttbar");
          leg26->AddEntry(h_hist[33], "single top");
          leg26->AddEntry(h_hist[27], "Z#tau#tau");
          leg26->AddEntry(h_hist[25], "W");
          leg26->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg26->AddEntry(h_hist[17], "Fake_W");
          leg26->AddEntry(h_hist[16], "Fake_ttbar");
          leg26->AddEntry(h_hist[14], "DY");
          leg26->AddEntry(h_hist[11], "diboson");
          leg26->AddEntry(h_hist[0], "SM H");
          leg26->AddEntry(h26_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg26->AddEntry(h26_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg26->Draw();
          
          c26 -> SaveAs("dEtajjVBF_SM.pdf");
        
        //   ===========================================================   dRjjVBF   ===========================================================
          
          TCanvas *c29 = new TCanvas ("c29", "dRjjVBF",1200,650);
            
          TPad *pad291 = new TPad("pad291","",0,0,0.8,1);
          TPad *pad292 = new TPad("pad292","",0.75,0,1,1);
          pad291->Draw();
          pad292->Draw();
            
          pad291->cd();
          pad291->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",25,0,10);
            h_hist[i]->GetXaxis()->SetTitle("VBF #DeltaR (j,j)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.4");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 4000); //2200
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRjjVBF>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs29 = new THStack("hs29", "");
          for(int i= 0; i<38 ; i++){ hs29->Add(h_hist[i], "hist29"); }
          hs29->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h29_1 = new TH1F("h29_1","Quadratic Sum from left",25,0,10); //left
          
         double QuadraticSum_l_29 = 0;
         double R_l_29 = 0;
         double E_l_29 = 0;
         double EE_l_29 = 0;
           
          for (int j=1; j<=25; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_29 +=  2* ( (S+B) * LSB - S );
                  E_l_29 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_29 = sqrt(R_l_29);
                  if(R_l_29 > 0) { EE_l_29 = sqrt(E_l_29) / QuadraticSum_l_29; }
                 
             }

             h29_1->SetBinContent(j,QuadraticSum_l_29);
             h29_1->SetLineColor(kBlue-9);
             h29_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h29_2 = new TH1F("h29_2","Quadratic Sum from right",25,0,10); //right
          
         double QuadraticSum_r_29 = 0;
         double R_r_29 = 0;
         double E_r_29 = 0;
         double EE_r_29 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_29 +=  2* ( (S+B) * LSB - S );
                  E_r_29 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_29 = sqrt(R_r_29);
                  if(R_r_29 > 0) { EE_r_29 = sqrt(E_r_29) / QuadraticSum_r_29; }
                 
             }

            h29_2->SetBinContent(j,QuadraticSum_r_29);
            h29_2->SetLineColor(kGreen-6);
            h29_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_29 = 0;
      double integral_Bkg_29 = 0;
      double integral_noVBFSM_29 = 0;

      double error_VBFSM_29 = 0;
      double error_Bkg_29 = 0;
      double error_noVBFSM_29 = 0;

        integral_VBFSM_29 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_29, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_29 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_29, "");

            integral_noVBFSM_29 += integral_Bkg_29;
            error_noVBFSM_29 += error_Bkg_29*error_Bkg_29;
        }

        error_noVBFSM_29 = sqrt(error_noVBFSM_29);

                double S_29 = 0;   S_29 = integral_VBFSM_29;
                double dS_29 = 0;  dS_29 = error_VBFSM_29;
                double B_29 = 0;   B_29 = integral_noVBFSM_29;
                double dB_29 = 0;  dB_29 = error_noVBFSM_29;

                double Significance_29 = 0;
                double R_29 = 0;
                double E_29 = 0;
                double EE_29 = 0;

                if( B_29 > 0 && S_29 > 0) {
                    
                      double LSB_29 = log(1 + S_29/B_29);
                      R_29 =  2 * ( (S_29+B_29) * LSB_29 - S_29 );
                      E_29 = LSB_29 * LSB_29 * dS_29 * dS_29 + (LSB_29 - S_29/B_29) * (LSB_29 - S_29/B_29) * dB_29 * dB_29;

                      Significance_29 = sqrt(R_29);
                      if(Significance_29 > 0) { EE_29 = sqrt(E_29) / Significance_29; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax29 = 1.1*h29_1->GetMaximum();
          float scale29 = 4000 / rightmax29;
          h29_1->Scale(scale29);
          h29_1->Draw("SAMEHIST");
          
          h29_2->Scale(scale29);
          h29_2->Draw("SAMEHIST");
          
        
        TGaxis*axis29 = new TGaxis(10,0,10,4000,0,rightmax29,510,"+L");
          // axis29->SetTitle("Quadratic Sum of significance");
          axis29->SetTitleSize(0.03);
          axis29->SetLabelSize(0.025);
          //axis29->Draw();
          
          pad292->cd();
          TLegend *leg29 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg29->SetBorderSize(1);
          leg29->SetFillColor(0);
          leg29->SetTextFont(42);
          leg29->SetTextSize(0.053);
          
          leg29->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg29->AddEntry(h_hist[37], "ggF HH");
          leg29->AddEntry(h_hist[36], "ttbar");
          leg29->AddEntry(h_hist[33], "single top");
          leg29->AddEntry(h_hist[27], "Z#tau#tau");
          leg29->AddEntry(h_hist[25], "W");
          leg29->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg29->AddEntry(h_hist[17], "Fake_W");
          leg29->AddEntry(h_hist[16], "Fake_ttbar");
          leg29->AddEntry(h_hist[14], "DY");
          leg29->AddEntry(h_hist[11], "diboson");
          leg29->AddEntry(h_hist[0], "SM H");
          leg29->AddEntry(h29_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg29->AddEntry(h29_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg29->Draw();
          
          c29 -> SaveAs("dRjjVBF_SM.pdf");
        
        
        //   ===========================================================   MET   ===========================================================
          
          TCanvas *c30 = new TCanvas ("c30", "MET",1200,650);
            
          TPad *pad301 = new TPad("pad301","",0,0,0.8,1);
          TPad *pad302 = new TPad("pad302","",0.75,0,1,1);
          pad301->Draw();
          pad302->Draw();
            
          pad301->cd();
          pad301->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",35,0,700);
            h_hist[i]->GetXaxis()->SetTitle("E_{T}^{miss} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 700);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 8000); //4000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="MET*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs30 = new THStack("hs30", "");
          for(int i= 0; i<38 ; i++){ hs30->Add(h_hist[i], "hist30"); }
          hs30->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h30_1 = new TH1F("h30_1","Quadratic Sum from left",35,0,700); //left
          
         double QuadraticSum_l_30 = 0;
         double R_l_30 = 0;
         double E_l_30 = 0;
         double EE_l_30 = 0;
           
          for (int j=1; j<=35; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_30 +=  2* ( (S+B) * LSB - S );
                  E_l_30 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_30 = sqrt(R_l_30);
                  if(R_l_30 > 0) { EE_l_30 = sqrt(E_l_30) / QuadraticSum_l_30; }
                 
             }

             h30_1->SetBinContent(j,QuadraticSum_l_30);
             h30_1->SetLineColor(kBlue-9);
             h30_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h30_2 = new TH1F("h30_2","Quadratic Sum from right",35,0,700); //right
          
         double QuadraticSum_r_30 = 0;
         double R_r_30 = 0;
         double E_r_30 = 0;
         double EE_r_30 = 0;
          
          for (int j=35; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_30 +=  2* ( (S+B) * LSB - S );
                  E_r_30 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_30 = sqrt(R_r_30);
                  if(R_r_30 > 0) { EE_r_30 = sqrt(E_r_30) / QuadraticSum_r_30; }
                 
             }

            h30_2->SetBinContent(j,QuadraticSum_r_30);
            h30_2->SetLineColor(kGreen-6);
            h30_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_30 = 0;
      double integral_Bkg_30 = 0;
      double integral_noVBFSM_30 = 0;

      double error_VBFSM_30 = 0;
      double error_Bkg_30 = 0;
      double error_noVBFSM_30 = 0;

        integral_VBFSM_30 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_30, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_30 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_30, "");

            integral_noVBFSM_30 += integral_Bkg_30;
            error_noVBFSM_30 += error_Bkg_30*error_Bkg_30;
        }

        error_noVBFSM_30 = sqrt(error_noVBFSM_30);

                double S_30 = 0;   S_30 = integral_VBFSM_30;
                double dS_30 = 0;  dS_30 = error_VBFSM_30;
                double B_30 = 0;   B_30 = integral_noVBFSM_30;
                double dB_30 = 0;  dB_30 = error_noVBFSM_30;

                double Significance_30 = 0;
                double R_30 = 0;
                double E_30 = 0;
                double EE_30 = 0;

                if( B_30 > 0 && S_30 > 0) {
                    
                      double LSB_30 = log(1 + S_30/B_30);
                      R_30 =  2 * ( (S_30+B_30) * LSB_30 - S_30 );
                      E_30 = LSB_30 * LSB_30 * dS_30 * dS_30 + (LSB_30 - S_30/B_30) * (LSB_30 - S_30/B_30) * dB_30 * dB_30;

                      Significance_30 = sqrt(R_30);
                      if(Significance_30 > 0) { EE_30 = sqrt(E_30) / Significance_30; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax30 = 1.1*h30_1->GetMaximum();
          float scale30 = 8000 / rightmax30;
          h30_1->Scale(scale30);
          h30_1->Draw("SAMEHIST");
          
          h30_2->Scale(scale30);
          h30_2->Draw("SAMEHIST");
          
        
        TGaxis*axis30 = new TGaxis(700,0,700,8000,0,rightmax30,510,"+L");
          // axis30->SetTitle("Quadratic Sum of significance");
          axis30->SetTitleSize(0.03);
          axis30->SetLabelSize(0.025);
          //axis30->Draw();
          
          pad302->cd();
          TLegend *leg30 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg30->SetBorderSize(1);
          leg30->SetFillColor(0);
          leg30->SetTextFont(42);
          leg30->SetTextSize(0.053);
          
          leg30->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg30->AddEntry(h_hist[37], "ggF HH");
          leg30->AddEntry(h_hist[36], "ttbar");
          leg30->AddEntry(h_hist[33], "single top");
          leg30->AddEntry(h_hist[27], "Z#tau#tau");
          leg30->AddEntry(h_hist[25], "W");
          leg30->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg30->AddEntry(h_hist[17], "Fake_W");
          leg30->AddEntry(h_hist[16], "Fake_ttbar");
          leg30->AddEntry(h_hist[14], "DY");
          leg30->AddEntry(h_hist[11], "diboson");
          leg30->AddEntry(h_hist[0], "SM H");
          leg30->AddEntry(h30_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg30->AddEntry(h30_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg30->Draw();
          
          c30 -> SaveAs("MET_SM.pdf");
        
        
        //   ===========================================================   METCent   ===========================================================
          
          TCanvas *c31 = new TCanvas ("c31", "METCent",1200,650);
            
          TPad *pad311 = new TPad("pad311","",0,0,0.8,1);
          TPad *pad312 = new TPad("pad312","",0.75,0,1,1);
          pad311->Draw();
          pad312->Draw();
            
          pad311->cd();
          pad311->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",48,-1.5,1.5);
            h_hist[i]->GetXaxis()->SetTitle("MET #phi centrality");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.0625");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 5500);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="METCent>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs31 = new THStack("hs31", "");
          for(int i= 0; i<38 ; i++){ hs31->Add(h_hist[i], "hist31"); }
          hs31->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h31_1 = new TH1F("h31_1","Quadratic Sum from left",48,-1.5,1.5); //left
          
         double QuadraticSum_l_31 = 0;
         double R_l_31 = 0;
         double E_l_31 = 0;
         double EE_l_31 = 0;
           
          for (int j=1; j<=48; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_31 +=  2* ( (S+B) * LSB - S );
                  E_l_31 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_31 = sqrt(R_l_31);
                  if(R_l_31 > 0) { EE_l_31 = sqrt(E_l_31) / QuadraticSum_l_31; }
                 
             }

             h31_1->SetBinContent(j,QuadraticSum_l_31);
             h31_1->SetLineColor(kBlue-9);
             h31_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h31_2 = new TH1F("h31_2","Quadratic Sum from right",48,-1.5,1.5); //right
          
         double QuadraticSum_r_31 = 0;
         double R_r_31 = 0;
         double E_r_31 = 0;
         double EE_r_31 = 0;
          
          for (int j=48; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_31 +=  2* ( (S+B) * LSB - S );
                  E_r_31 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_31 = sqrt(R_r_31);
                  if(R_r_31 > 0) { EE_r_31 = sqrt(E_r_31) / QuadraticSum_r_31; }
                 
             }


            h31_2->SetBinContent(j,QuadraticSum_r_31);
            h31_2->SetLineColor(kGreen-6);
            h31_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_31 = 0;
      double integral_Bkg_31 = 0;
      double integral_noVBFSM_31 = 0;

      double error_VBFSM_31 = 0;
      double error_Bkg_31 = 0;
      double error_noVBFSM_31 = 0;

        integral_VBFSM_31 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_31, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_31 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_31, "");

            integral_noVBFSM_31 += integral_Bkg_31;
            error_noVBFSM_31 += error_Bkg_31*error_Bkg_31;
        }

        error_noVBFSM_31 = sqrt(error_noVBFSM_31);

                double S_31 = 0;   S_31 = integral_VBFSM_31;
                double dS_31 = 0;  dS_31 = error_VBFSM_31;
                double B_31 = 0;   B_31 = integral_noVBFSM_31;
                double dB_31 = 0;  dB_31 = error_noVBFSM_31;

                double Significance_31 = 0;
                double R_31 = 0;
                double E_31 = 0;
                double EE_31 = 0;

                if( B_31 > 0 && S_31 > 0) {
                    
                      double LSB_31 = log(1 + S_31/B_31);
                      R_31 =  2 * ( (S_31+B_31) * LSB_31 - S_31 );
                      E_31 = LSB_31 * LSB_31 * dS_31 * dS_31 + (LSB_31 - S_31/B_31) * (LSB_31 - S_31/B_31) * dB_31 * dB_31;

                      Significance_31 = sqrt(R_31);
                      if(Significance_31 > 0) { EE_31 = sqrt(E_31) / Significance_31; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax31 = 1.1*h31_1->GetMaximum();
          float scale31 = 5500 / rightmax31;
          h31_1->Scale(scale31);
          h31_1->Draw("SAMEHIST");
          
          h31_2->Scale(scale31);
          h31_2->Draw("SAMEHIST");
          
        
        TGaxis*axis31 = new TGaxis(1.5,0,1.5,5500,0,rightmax31,510,"+L");
          // axis31->SetTitle("Quadratic Sum of significance");
          axis31->SetTitleSize(0.03);
          axis31->SetLabelSize(0.025);
          //axis31->Draw();
          
          pad312->cd();
          TLegend *leg31 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg31->SetBorderSize(1);
          leg31->SetFillColor(0);
          leg31->SetTextFont(42);
          leg31->SetTextSize(0.053);
          
          leg31->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg31->AddEntry(h_hist[37], "ggF HH");
          leg31->AddEntry(h_hist[36], "ttbar");
          leg31->AddEntry(h_hist[33], "single top");
          leg31->AddEntry(h_hist[27], "Z#tau#tau");
          leg31->AddEntry(h_hist[25], "W");
          leg31->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg31->AddEntry(h_hist[17], "Fake_W");
          leg31->AddEntry(h_hist[16], "Fake_ttbar");
          leg31->AddEntry(h_hist[14], "DY");
          leg31->AddEntry(h_hist[11], "diboson");
          leg31->AddEntry(h_hist[0], "SM H");
          leg31->AddEntry(h31_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg31->AddEntry(h31_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg31->Draw();
          
          c31 -> SaveAs("METCent_SM.pdf");
        
        
        //   ===========================================================   dPhiLepMET   ===========================================================
          
          TCanvas *c32 = new TCanvas ("c32", "dPhiLepMET",1200,650);
            
          TPad *pad321 = new TPad("pad321","",0,0,0.8,1);
          TPad *pad322 = new TPad("pad322","",0.75,0,1,1);
          pad321->Draw();
          pad322->Draw();
            
          pad321->cd();
          pad321->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",40,-3.5,3.5);
              h_hist[i]->GetXaxis()->SetTitle("#Delta#phi (#tau_{lep}, E_{T}^{miss})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.175");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 4000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dPhiLepMET>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs32 = new THStack("hs32", "");
          for(int i= 0; i<38 ; i++){ hs32->Add(h_hist[i], "hist32"); }
          hs32->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h32_1 = new TH1F("h32_1","Quadratic Sum from left",40,-3.5,3.5); //left
          
         double QuadraticSum_l_32 = 0;
         double R_l_32 = 0;
         double E_l_32 = 0;
         double EE_l_32 = 0;
           
          for (int j=1; j<=40; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_32 +=  2* ( (S+B) * LSB - S );
                  E_l_32 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_32 = sqrt(R_l_32);
                  if(R_l_32 > 0) { EE_l_32 = sqrt(E_l_32) / QuadraticSum_l_32; }
                 
             }

             h32_1->SetBinContent(j,QuadraticSum_l_32);
             h32_1->SetLineColor(kBlue-9);
             h32_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h32_2 = new TH1F("h32_2","Quadratic Sum from right",40,-3.5,3.5); //right
          
         double QuadraticSum_r_32 = 0;
         double R_r_32 = 0;
         double E_r_32 = 0;
         double EE_r_32 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_32 +=  2* ( (S+B) * LSB - S );
                  E_r_32 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_32 = sqrt(R_r_32);
                  if(R_r_32 > 0) { EE_r_32 = sqrt(E_r_32) / QuadraticSum_r_32; }
                 
             }

            h32_2->SetBinContent(j,QuadraticSum_r_32);
            h32_2->SetLineColor(kGreen-6);
            h32_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_32 = 0;
      double integral_Bkg_32 = 0;
      double integral_noVBFSM_32 = 0;

      double error_VBFSM_32 = 0;
      double error_Bkg_32 = 0;
      double error_noVBFSM_32 = 0;

        integral_VBFSM_32 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_32, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_32 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_32, "");

            integral_noVBFSM_32 += integral_Bkg_32;
            error_noVBFSM_32 += error_Bkg_32*error_Bkg_32;
        }

        error_noVBFSM_32 = sqrt(error_noVBFSM_32);

                double S_32 = 0;   S_32 = integral_VBFSM_32;
                double dS_32 = 0;  dS_32 = error_VBFSM_32;
                double B_32 = 0;   B_32 = integral_noVBFSM_32;
                double dB_32 = 0;  dB_32 = error_noVBFSM_32;

                double Significance_32 = 0;
                double R_32 = 0;
                double E_32 = 0;
                double EE_32 = 0;

                if( B_32 > 0 && S_32 > 0) {
                    
                      double LSB_32 = log(1 + S_32/B_32);
                      R_32 =  2 * ( (S_32+B_32) * LSB_32 - S_32 );
                      E_32 = LSB_32 * LSB_32 * dS_32 * dS_32 + (LSB_32 - S_32/B_32) * (LSB_32 - S_32/B_32) * dB_32 * dB_32;

                      Significance_32 = sqrt(R_32);
                      if(Significance_32 > 0) { EE_32 = sqrt(E_32) / Significance_32; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax32 = 1.1*h32_1->GetMaximum();
          float scale32 = 4000 / rightmax32;
          h32_1->Scale(scale32);
          h32_1->Draw("SAMEHIST");
          
          h32_2->Scale(scale32);
          h32_2->Draw("SAMEHIST");
          
        
        TGaxis*axis32 = new TGaxis(3.5,0,3.5,4000,0,rightmax32,510,"+L");
          // axis32->SetTitle("Quadratic Sum of significance");
          axis32->SetTitleSize(0.03);
          axis32->SetLabelSize(0.025);
          //axis32->Draw();
          
          pad322->cd();
          TLegend *leg32 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg32->SetBorderSize(1);
          leg32->SetFillColor(0);
          leg32->SetTextFont(42);
          leg32->SetTextSize(0.053);
          
          leg32->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg32->AddEntry(h_hist[37], "ggF HH");
          leg32->AddEntry(h_hist[36], "ttbar");
          leg32->AddEntry(h_hist[33], "single top");
          leg32->AddEntry(h_hist[27], "Z#tau#tau");
          leg32->AddEntry(h_hist[25], "W");
          leg32->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg32->AddEntry(h_hist[17], "Fake_W");
          leg32->AddEntry(h_hist[16], "Fake_ttbar");
          leg32->AddEntry(h_hist[14], "DY");
          leg32->AddEntry(h_hist[11], "diboson");
          leg32->AddEntry(h_hist[0], "SM H");
          leg32->AddEntry(h32_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg32->AddEntry(h32_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg32->Draw();
          
          c32 -> SaveAs("dPhiLepMET_SM.pdf");
        
        
        //   ===========================================================   dPhiTauMET   ===========================================================
          
          TCanvas *c33 = new TCanvas ("c33", "dPhiTauMET",1200,650);
            
          TPad *pad331 = new TPad("pad331","",0,0,0.8,1);
          TPad *pad332 = new TPad("pad332","",0.75,0,1,1);
          pad331->Draw();
          pad332->Draw();
            
          pad331->cd();
          pad331->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",40,-3.5,3.5);
              h_hist[i]->GetXaxis()->SetTitle("#Delta#phi (#tau_{had}, E_{T}^{miss})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.175");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 2000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dPhiTauMET>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs33 = new THStack("hs33", "");
          for(int i= 0; i<38 ; i++){ hs33->Add(h_hist[i], "hist33"); }
          hs33->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h33_1 = new TH1F("h33_1","Quadratic Sum from left",40,-3.5,3.5); //left
          
         double QuadraticSum_l_33 = 0;
         double R_l_33 = 0;
         double E_l_33 = 0;
         double EE_l_33 = 0;
           
          for (int j=1; j<=40; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_33 +=  2* ( (S+B) * LSB - S );
                  E_l_33 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_33 = sqrt(R_l_33);
                  if(R_l_33 > 0) { EE_l_33 = sqrt(E_l_33) / QuadraticSum_l_33; }
                 
             }

             h33_1->SetBinContent(j,QuadraticSum_l_33);
             h33_1->SetLineColor(kBlue-9);
             h33_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h33_2 = new TH1F("h33_2","Quadratic Sum from right",40,-3.5,3.5); //right
          
         double QuadraticSum_r_33 = 0;
         double R_r_33 = 0;
         double E_r_33 = 0;
         double EE_r_33 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_33 +=  2* ( (S+B) * LSB - S );
                  E_r_33 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_33 = sqrt(R_r_33);
                  if(R_r_33 > 0) { EE_r_33 = sqrt(E_r_33) / QuadraticSum_r_33; }
                 
             }

            h33_2->SetBinContent(j,QuadraticSum_r_33);
            h33_2->SetLineColor(kGreen-6);
            h33_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_33 = 0;
      double integral_Bkg_33 = 0;
      double integral_noVBFSM_33 = 0;

      double error_VBFSM_33 = 0;
      double error_Bkg_33 = 0;
      double error_noVBFSM_33 = 0;

        integral_VBFSM_33 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_33, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_33 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_33, "");

            integral_noVBFSM_33 += integral_Bkg_33;
            error_noVBFSM_33 += error_Bkg_33*error_Bkg_33;
        }

        error_noVBFSM_33 = sqrt(error_noVBFSM_33);

                double S_33 = 0;   S_33 = integral_VBFSM_33;
                double dS_33 = 0;  dS_33 = error_VBFSM_33;
                double B_33 = 0;   B_33 = integral_noVBFSM_33;
                double dB_33 = 0;  dB_33 = error_noVBFSM_33;

                double Significance_33 = 0;
                double R_33 = 0;
                double E_33 = 0;
                double EE_33 = 0;

                if( B_33 > 0 && S_33 > 0) {
                    
                      double LSB_33 = log(1 + S_33/B_33);
                      R_33 =  2 * ( (S_33+B_33) * LSB_33 - S_33 );
                      E_33 = LSB_33 * LSB_33 * dS_33 * dS_33 + (LSB_33 - S_33/B_33) * (LSB_33 - S_33/B_33) * dB_33 * dB_33;

                      Significance_33 = sqrt(R_33);
                      if(Significance_33 > 0) { EE_33 = sqrt(E_33) / Significance_33; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax33 = 1.1*h33_1->GetMaximum();
          float scale33 = 2000 / rightmax33;
          h33_1->Scale(scale33);
          h33_1->Draw("SAMEHIST");
          
          h33_2->Scale(scale33);
          h33_2->Draw("SAMEHIST");
          
        
        TGaxis*axis33 = new TGaxis(3.5,0,3.5,2000,0,rightmax33,510,"+L");
          // axis33->SetTitle("Quadratic Sum of significance");
          axis33->SetTitleSize(0.03);
          axis33->SetLabelSize(0.025);
          //axis33->Draw();
          
          pad332->cd();
          TLegend *leg33 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg33->SetBorderSize(1);
          leg33->SetFillColor(0);
          leg33->SetTextFont(42);
          leg33->SetTextSize(0.053);
          
          leg33->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg33->AddEntry(h_hist[37], "ggF HH");
          leg33->AddEntry(h_hist[36], "ttbar");
          leg33->AddEntry(h_hist[33], "single top");
          leg33->AddEntry(h_hist[27], "Z#tau#tau");
          leg33->AddEntry(h_hist[25], "W");
          leg33->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg33->AddEntry(h_hist[17], "Fake_W");
          leg33->AddEntry(h_hist[16], "Fake_ttbar");
          leg33->AddEntry(h_hist[14], "DY");
          leg33->AddEntry(h_hist[11], "diboson");
          leg33->AddEntry(h_hist[0], "SM H");
          leg33->AddEntry(h33_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg33->AddEntry(h33_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg33->Draw();
          
          c33 -> SaveAs("dPhiTauMET_SM.pdf");
        
        
        //   ===========================================================   dPhiTauTauMET   ===========================================================
          
          TCanvas *c35 = new TCanvas ("c35", "dPhiTauTauMET",1200,650);
            
          TPad *pad351 = new TPad("pad351","",0,0,0.8,1);
          TPad *pad352 = new TPad("pad352","",0.75,0,1,1);
          pad351->Draw();
          pad352->Draw();
            
          pad351->cd();
          pad351->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",40,-3.5,3.5);
              h_hist[i]->GetXaxis()->SetTitle("#Delta#phi (#tau_{lep}#tau_{had}, E_{T}^{miss})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.175");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 5000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dPhiTauTauMET>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs35 = new THStack("hs35", "");
          for(int i= 0; i<38 ; i++){ hs35->Add(h_hist[i], "hist35"); }
          hs35->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h35_1 = new TH1F("h35_1","Quadratic Sum from left",40,-3.5,3.5); //left
          
         double QuadraticSum_l_35 = 0;
         double R_l_35 = 0;
         double E_l_35 = 0;
         double EE_l_35 = 0;
           
          for (int j=1; j<=40; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_35 +=  2* ( (S+B) * LSB - S );
                  E_l_35 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_35 = sqrt(R_l_35);
                  if(R_l_35 > 0) { EE_l_35 = sqrt(E_l_35) / QuadraticSum_l_35; }
                 
             }

             h35_1->SetBinContent(j,QuadraticSum_l_35);
             h35_1->SetLineColor(kBlue-9);
             h35_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h35_2 = new TH1F("h35_2","Quadratic Sum from right",40,-3.5,3.5); //right
          
         double QuadraticSum_r_35 = 0;
         double R_r_35 = 0;
         double E_r_35 = 0;
         double EE_r_35 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_35 +=  2* ( (S+B) * LSB - S );
                  E_r_35 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_35 = sqrt(R_r_35);
                  if(R_r_35 > 0) { EE_r_35 = sqrt(E_r_35) / QuadraticSum_r_35; }
                 
             }

            h35_2->SetBinContent(j,QuadraticSum_r_35);
            h35_2->SetLineColor(kGreen-6);
            h35_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_35 = 0;
      double integral_Bkg_35 = 0;
      double integral_noVBFSM_35 = 0;

      double error_VBFSM_35 = 0;
      double error_Bkg_35 = 0;
      double error_noVBFSM_35 = 0;

        integral_VBFSM_35 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_35, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_35 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_35, "");

            integral_noVBFSM_35 += integral_Bkg_35;
            error_noVBFSM_35 += error_Bkg_35*error_Bkg_35;
        }

        error_noVBFSM_35 = sqrt(error_noVBFSM_35);

                double S_35 = 0;   S_35 = integral_VBFSM_35;
                double dS_35 = 0;  dS_35 = error_VBFSM_35;
                double B_35 = 0;   B_35 = integral_noVBFSM_35;
                double dB_35 = 0;  dB_35 = error_noVBFSM_35;

                double Significance_35 = 0;
                double R_35 = 0;
                double E_35 = 0;
                double EE_35 = 0;

                if( B_35 > 0 && S_35 > 0) {
                    
                      double LSB_35 = log(1 + S_35/B_35);
                      R_35 =  2 * ( (S_35+B_35) * LSB_35 - S_35 );
                      E_35 = LSB_35 * LSB_35 * dS_35 * dS_35 + (LSB_35 - S_35/B_35) * (LSB_35 - S_35/B_35) * dB_35 * dB_35;

                      Significance_35 = sqrt(R_35);
                      if(Significance_35 > 0) { EE_35 = sqrt(E_35) / Significance_35; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax35 = 1.1*h35_1->GetMaximum();
          float scale35 = 5000 / rightmax35;
          h35_1->Scale(scale35);
          h35_1->Draw("SAMEHIST");
          
          h35_2->Scale(scale35);
          h35_2->Draw("SAMEHIST");
          
        
        TGaxis*axis35 = new TGaxis(3.5,0,3.5,5000,0,rightmax35,510,"+L");
          // axis35->SetTitle("Quadratic Sum of significance");
          axis35->SetTitleSize(0.03);
          axis35->SetLabelSize(0.025);
          //axis35->Draw();
          
          pad352->cd();
          TLegend *leg35 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg35->SetBorderSize(1);
          leg35->SetFillColor(0);
          leg35->SetTextFont(42);
          leg35->SetTextSize(0.053);
          
          leg35->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg35->AddEntry(h_hist[37], "ggF HH");
          leg35->AddEntry(h_hist[36], "ttbar");
          leg35->AddEntry(h_hist[33], "single top");
          leg35->AddEntry(h_hist[27], "Z#tau#tau");
          leg35->AddEntry(h_hist[25], "W");
          leg35->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg35->AddEntry(h_hist[17], "Fake_W");
          leg35->AddEntry(h_hist[16], "Fake_ttbar");
          leg35->AddEntry(h_hist[14], "DY");
          leg35->AddEntry(h_hist[11], "diboson");
          leg35->AddEntry(h_hist[0], "SM H");
          leg35->AddEntry(h35_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg35->AddEntry(h35_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg35->Draw();
          
          c35 -> SaveAs("dPhiTauTauMET_SM.pdf");

          
          //   ===========================================================   dPhibbMET   ===========================================================
        
          TCanvas *c45 = new TCanvas ("c45", "dPhibbMET",1200,650);
            
          TPad *pad451 = new TPad("pad451","",0,0,0.8,1);
          TPad *pad452 = new TPad("pad452","",0.75,0,1,1);
          pad451->Draw();
          pad452->Draw();
            
          pad451->cd();
          pad451->SetTickx();
          gStyle->SetOptStat(kFALSE);

          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",40,-3.5,3.5);
              h_hist[i]->GetXaxis()->SetTitle("#Delta#phi (bb, E_{T}^{miss})");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 2000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dPhibbMET>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs45 = new THStack("hs45", "");
          for(int i= 0; i<38 ; i++){ hs45->Add(h_hist[i], "hist45"); }
          hs45->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h45_1 = new TH1F("h45_1","Quadratic Sum from left",40,-3.5,3.5); //left
          
         double QuadraticSum_l_45 = 0;
         double R_l_45 = 0;
         double E_l_45 = 0;
         double EE_l_45 = 0;
           
          for (int j=1; j<=40; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_45 +=  2* ( (S+B) * LSB - S );
                  E_l_45 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_45 = sqrt(R_l_45);
                  if(R_l_45 > 0) { EE_l_45 = sqrt(E_l_45) / QuadraticSum_l_45; }
                 
             }

             h45_1->SetBinContent(j,QuadraticSum_l_45);
             h45_1->SetLineColor(kBlue-9);
             h45_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h45_2 = new TH1F("h45_2","Quadratic Sum from right",40,-3.5,3.5); //right
          
         double QuadraticSum_r_45 = 0;
         double R_r_45 = 0;
         double E_r_45 = 0;
         double EE_r_45 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_45 +=  2* ( (S+B) * LSB - S );
                  E_r_45 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_45 = sqrt(R_r_45);
                  if(R_r_45 > 0) { EE_r_45 = sqrt(E_r_45) / QuadraticSum_r_45; }
                 
             }

            h45_2->SetBinContent(j,QuadraticSum_r_45);
            h45_2->SetLineColor(kGreen-6);
            h45_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_45 = 0;
      double integral_Bkg_45 = 0;
      double integral_noVBFSM_45 = 0;

      double error_VBFSM_45 = 0;
      double error_Bkg_45 = 0;
      double error_noVBFSM_45 = 0;

        integral_VBFSM_45 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_45, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_45 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_45, "");

            integral_noVBFSM_45 += integral_Bkg_45;
            error_noVBFSM_45 += error_Bkg_45*error_Bkg_45;
        }

        error_noVBFSM_45 = sqrt(error_noVBFSM_45);

                double S_45 = 0;   S_45 = integral_VBFSM_45;
                double dS_45 = 0;  dS_45 = error_VBFSM_45;
                double B_45 = 0;   B_45 = integral_noVBFSM_45;
                double dB_45 = 0;  dB_45 = error_noVBFSM_45;

                double Significance_45 = 0;
                double R_45 = 0;
                double E_45 = 0;
                double EE_45 = 0;

                if( B_45 > 0 && S_45 > 0) {
                    
                      double LSB_45 = log(1 + S_45/B_45);
                      R_45 =  2 * ( (S_45+B_45) * LSB_45 - S_45 );
                      E_45 = LSB_45 * LSB_45 * dS_45 * dS_45 + (LSB_45 - S_45/B_45) * (LSB_45 - S_45/B_45) * dB_45 * dB_45;

                      Significance_45 = sqrt(R_45);
                      if(Significance_45 > 0) { EE_45 = sqrt(E_45) / Significance_45; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax45 = 1.1*h45_1->GetMaximum();
          float scale45 = 2000 / rightmax45;
          h45_1->Scale(scale45);
          h45_1->Draw("SAMEHIST");
          
          h45_2->Scale(scale45);
          h45_2->Draw("SAMEHIST");
          
        
          TGaxis*axis45 = new TGaxis(3.5,0,3.5,2000,0,rightmax45,510,"+L");
          // axis45->SetTitle("Quadratic Sum of significance");
          axis45->SetTitleSize(0.03);
          axis45->SetLabelSize(0.025);
          //axis45->Draw();
          
          pad452->cd();
          TLegend *leg45 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg45->SetBorderSize(1);
          leg45->SetFillColor(0);
          leg45->SetTextFont(42);
          leg45->SetTextSize(0.053);
          
          leg45->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg45->AddEntry(h_hist[37], "ggF HH");
          leg45->AddEntry(h_hist[36], "ttbar");
          leg45->AddEntry(h_hist[33], "single top");
          leg45->AddEntry(h_hist[27], "Z#tau#tau");
          leg45->AddEntry(h_hist[25], "W");
          leg45->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg45->AddEntry(h_hist[17], "Fake_W");
          leg45->AddEntry(h_hist[16], "Fake_ttbar");
          leg45->AddEntry(h_hist[14], "DY");
          leg45->AddEntry(h_hist[11], "diboson");
          leg45->AddEntry(h_hist[0], "SM H");
          leg45->AddEntry(h45_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg45->AddEntry(h45_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg45->Draw();
          
          c45 -> SaveAs("dPhibbMET_SM.pdf");
          
        
          //   ===========================================================   pTHH   ===========================================================
          
          TCanvas *c2 = new TCanvas ("c2", "pTHH",1200,650);
            
          TPad *pad21 = new TPad("pad21","",0,0,0.8,1);
          TPad *pad22 = new TPad("pad22","",0.75,0,1,1);
          pad21->Draw();
          pad22->Draw();
            
          pad21->cd();
          pad21->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",37,0,740);
            h_hist[i]->GetXaxis()->SetTitle("p_{T}^{HH} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 4500); //5000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb
        
        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTHH*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs2 = new THStack("hs2", "");
          for(int i= 0; i<38 ; i++){ hs2->Add(h_hist[i], "hist2"); }
          hs2->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h2_1 = new TH1F("h2_1","Quadratic Sum from left",37,0,740); //left
          
          double QuadraticSum_l_2 = 0;
          double R_l_2 = 0;
          double E_l_2 = 0;
          double EE_l_2 = 0;
           
          for (int j=1; j<=37; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
             
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_2 +=  2* ( (S+B) * LSB - S );
                  E_l_2 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_2 = sqrt(R_l_2);
                  if(R_l_2 > 0) { EE_l_2 = sqrt(E_l_2) / QuadraticSum_l_2; }
                  
              }

             h2_1->SetBinContent(j,QuadraticSum_l_2);
             h2_1->SetLineColor(kBlue-9);
             h2_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h2_2 = new TH1F("h2_2","Quadratic Sum from right",37,0,740); //right
          
         double QuadraticSum_r_2 = 0;
         double R_r_2 = 0;
         double E_r_2 = 0;
         double EE_r_2 = 0;
           
          for (int j=37; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }     
             
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_r_2 +=  2* ( (S+B) * LSB - S );
                  E_r_2 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_2 = sqrt(R_r_2);
                  if(R_r_2 > 0) { EE_r_2 = sqrt(E_r_2) / QuadraticSum_r_2; }
                  
              }

            h2_2->SetBinContent(j,QuadraticSum_r_2);
            h2_2->SetLineColor(kGreen-6);
            h2_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_2 = 0;
      double integral_Bkg_2 = 0;
      double integral_noVBFSM_2 = 0;

      double error_VBFSM_2 = 0;
      double error_Bkg_2 = 0;
      double error_noVBFSM_2 = 0;

        integral_VBFSM_2 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_2, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_2 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_2, "");

            integral_noVBFSM_2 += integral_Bkg_2;
            error_noVBFSM_2 += error_Bkg_2*error_Bkg_2;
        }

        error_noVBFSM_2 = sqrt(error_noVBFSM_2);

                double S_2 = 0;   S_2 = integral_VBFSM_2;
                double dS_2 = 0;  dS_2 = error_VBFSM_2;
                double B_2 = 0;   B_2 = integral_noVBFSM_2;
                double dB_2 = 0;  dB_2 = error_noVBFSM_2;

                double Significance_2 = 0;
                double R_2 = 0;
                double E_2 = 0;
                double EE_2 = 0;

                if( B_2 > 0 && S_2 > 0) {
                    
                      double LSB_2 = log(1 + S_2/B_2);
                      R_2 =  2 * ( (S_2+B_2) * LSB_2 - S_2 );
                      E_2 = LSB_2 * LSB_2 * dS_2 * dS_2 + (LSB_2 - S_2/B_2) * (LSB_2 - S_2/B_2) * dB_2 * dB_2;

                      Significance_2 = sqrt(R_2);
                      if(Significance_2 > 0) { EE_2 = sqrt(E_2) / Significance_2; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax2 = 1.1*h2_1->GetMaximum();
          float scale2 = 4500 / rightmax2;
          h2_1->Scale(scale2);
          h2_1->Draw("SAMEHIST");
          
          h2_2->Scale(scale2);
          h2_2->Draw("SAMEHIST");
          

          TGaxis*axis2 = new TGaxis(740,0,740,4500,0,rightmax2,510,"+L");
          // axis2->SetTitle("Quadratic Sum of significance");
          axis2->SetTitleSize(0.03);
          axis2->SetLabelSize(0.025);
          //axis2->Draw();
          
          pad22->cd();
          TLegend *leg2 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg2->SetBorderSize(1);
          leg2->SetFillColor(0);
          leg2->SetTextFont(42);
          leg2->SetTextSize(0.053);
          
          leg2->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg2->AddEntry(h_hist[37], "ggF HH");
          leg2->AddEntry(h_hist[36], "ttbar");
          leg2->AddEntry(h_hist[33], "single top");
          leg2->AddEntry(h_hist[27], "Z#tau#tau");
          leg2->AddEntry(h_hist[25], "W");
          leg2->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg2->AddEntry(h_hist[17], "Fake_W");
          leg2->AddEntry(h_hist[16], "Fake_ttbar");
          leg2->AddEntry(h_hist[14], "DY");
          leg2->AddEntry(h_hist[11], "diboson");
          leg2->AddEntry(h_hist[0], "SM H");
          leg2->AddEntry(h2_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg2->AddEntry(h2_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg2->Draw();
          
          c2 -> SaveAs("pTHH_SM.pdf");
              
          
        //   ===========================================================   HT   ===========================================================
          
          TCanvas *c37 = new TCanvas ("c37", "HT",1200,650);
            
          TPad *pad371 = new TPad("pad371","",0,0,0.8,1);
          TPad *pad372 = new TPad("pad372","",0.75,0,1,1);
          pad371->Draw();
          pad372->Draw();
            
          pad371->cd();
          pad371->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",50,0,2500);
              h_hist[i]->GetXaxis()->SetTitle("HT [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 50 GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 5000); //3000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="HT*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs37 = new THStack("hs37", "");
          for(int i= 0; i<38 ; i++){ hs37->Add(h_hist[i], "hist37"); }
          hs37->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h37_1 = new TH1F("h37_1","Quadratic Sum from left",50,0,2500); //left
          
         double QuadraticSum_l_37 = 0;
         double R_l_37 = 0;
         double E_l_37 = 0;
         double EE_l_37 = 0;
           
          for (int j=1; j<=50; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_37 +=  2* ( (S+B) * LSB - S );
                  E_l_37 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_37 = sqrt(R_l_37);
                  if(R_l_37 > 0) { EE_l_37 = sqrt(E_l_37) / QuadraticSum_l_37; }
                 
             }

             h37_1->SetBinContent(j,QuadraticSum_l_37);
             h37_1->SetLineColor(kBlue-9);
             h37_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h37_2 = new TH1F("h37_2","Quadratic Sum from right",50,0,2500); //right
          
         double QuadraticSum_r_37 = 0;
         double R_r_37 = 0;
         double E_r_37 = 0;
         double EE_r_37 = 0;
          
          for (int j=50; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_37 +=  2* ( (S+B) * LSB - S );
                  E_r_37 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_37 = sqrt(R_r_37);
                  if(R_r_37 > 0) { EE_r_37 = sqrt(E_r_37) / QuadraticSum_r_37; }
                 
             }


            h37_2->SetBinContent(j,QuadraticSum_r_37);
            h37_2->SetLineColor(kGreen-6);
            h37_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_37 = 0;
      double integral_Bkg_37 = 0;
      double integral_noVBFSM_37 = 0;

      double error_VBFSM_37 = 0;
      double error_Bkg_37 = 0;
      double error_noVBFSM_37 = 0;

        integral_VBFSM_37 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_37, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_37 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_37, "");

            integral_noVBFSM_37 += integral_Bkg_37;
            error_noVBFSM_37 += error_Bkg_37*error_Bkg_37;
        }

        error_noVBFSM_37 = sqrt(error_noVBFSM_37);

                double S_37 = 0;   S_37 = integral_VBFSM_37;
                double dS_37 = 0;  dS_37 = error_VBFSM_37;
                double B_37 = 0;   B_37 = integral_noVBFSM_37;
                double dB_37 = 0;  dB_37 = error_noVBFSM_37;

                double Significance_37 = 0;
                double R_37 = 0;
                double E_37 = 0;
                double EE_37 = 0;

                if( B_37 > 0 && S_37 > 0) {
                    
                      double LSB_37 = log(1 + S_37/B_37);
                      R_37 =  2 * ( (S_37+B_37) * LSB_37 - S_37 );
                      E_37 = LSB_37 * LSB_37 * dS_37 * dS_37 + (LSB_37 - S_37/B_37) * (LSB_37 - S_37/B_37) * dB_37 * dB_37;

                      Significance_37 = sqrt(R_37);
                      if(Significance_37 > 0) { EE_37 = sqrt(E_37) / Significance_37; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax37 = 1.1*h37_1->GetMaximum();
          float scale37 = 5000 / rightmax37;
          h37_1->Scale(scale37);
          h37_1->Draw("SAMEHIST");
          
          h37_2->Scale(scale37);
          h37_2->Draw("SAMEHIST");
          
        
        TGaxis*axis37 = new TGaxis(2500,0,2500,5000,0,rightmax37,510,"+L");
          // axis37->SetTitle("Quadratic Sum of significance");
          axis37->SetTitleSize(0.03);
          axis37->SetLabelSize(0.025);
          //axis37->Draw();
          
          pad372->cd();
          TLegend *leg37 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg37->SetBorderSize(1);
          leg37->SetFillColor(0);
          leg37->SetTextFont(42);
          leg37->SetTextSize(0.053);
          
          leg37->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg37->AddEntry(h_hist[37], "ggF HH");
          leg37->AddEntry(h_hist[36], "ttbar");
          leg37->AddEntry(h_hist[33], "single top");
          leg37->AddEntry(h_hist[27], "Z#tau#tau");
          leg37->AddEntry(h_hist[25], "W");
          leg37->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg37->AddEntry(h_hist[17], "Fake_W");
          leg37->AddEntry(h_hist[16], "Fake_ttbar");
          leg37->AddEntry(h_hist[14], "DY");
          leg37->AddEntry(h_hist[11], "diboson");
          leg37->AddEntry(h_hist[0], "SM H");
          leg37->AddEntry(h37_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg37->AddEntry(h37_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg37->Draw();
          
          c37 -> SaveAs("HT_SM.pdf");
        
        
        //   ===========================================================   Mhh   ===========================================================
          
          TCanvas *c36 = new TCanvas ("c36", "Mhh",1200,650);
            
          TPad *pad361 = new TPad("pad361","",0,0,0.8,1);
          TPad *pad362 = new TPad("pad362","",0.75,0,1,1);
          pad361->Draw();
          pad362->Draw();
            
          pad361->cd();
          pad361->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
              h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,3000);
              h_hist[i]->GetXaxis()->SetTitle("m_{HH} [GeV]");
              h_hist[i]->GetYaxis()->SetTitle("Events/ 100 GeV");
              //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
              h_hist[i]->GetYaxis()->SetRangeUser(0, 12000); //16000
          }

          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb


          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mHH*0.001>>"+h_title[i];
          }
    
          
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs36 = new THStack("hs36", "");
          for(int i= 0; i<38 ; i++){ hs36->Add(h_hist[i], "hist36"); }
          hs36->Draw("SAMEHIST");


         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h36_1 = new TH1F("h36_1","Quadratic Sum from left",30,0,3000); //left

          double QuadraticSum_l_36 = 0;
          double R_l_36 = 0;
          double E_l_36 = 0;
          double EE_l_36 = 0;
           
          for (int j=1; j<=30; j++) {

            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
             
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_36 +=  2* ( (S+B) * LSB - S );
                  E_l_36 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_36 = sqrt(R_l_36);
                  if(R_l_36 > 0) { EE_l_36 = sqrt(E_l_36) / QuadraticSum_l_36; }
                  
              }
              
             h36_1->SetBinContent(j,QuadraticSum_l_36);
             h36_1->SetLineColor(kBlue-9);
             h36_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
          }

          
         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h36_2 = new TH1F("h36_2","Quadratic Sum from right",30,0,3000); //right
          
         double QuadraticSum_r_36 = 0;
         double R_r_36 = 0;
         double E_r_36 = 0;
         double EE_r_36 = 0;
         
          for (int j=30; j>=1; j--) {
        
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_36 +=  2* ( (S+B) * LSB - S );
                  E_r_36 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_36 = sqrt(R_r_36);
                  if(R_r_36 > 0) { EE_r_36 = sqrt(E_r_36) / QuadraticSum_r_36; }
                 
             }

            h36_2->SetBinContent(j,QuadraticSum_r_36);
            h36_2->SetLineColor(kGreen-6);
            h36_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_36 = 0;
      double integral_Bkg_36 = 0;
      double integral_noVBFSM_36 = 0;

      double error_VBFSM_36 = 0;
      double error_Bkg_36 = 0;
      double error_noVBFSM_36 = 0;

        integral_VBFSM_36 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_36, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_36 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_36, "");

            integral_noVBFSM_36 += integral_Bkg_36;
            error_noVBFSM_36 += error_Bkg_36*error_Bkg_36;
        }

        error_noVBFSM_36 = sqrt(error_noVBFSM_36);

                double S_36 = 0;   S_36 = integral_VBFSM_36;
                double dS_36 = 0;  dS_36 = error_VBFSM_36;
                double B_36 = 0;   B_36 = integral_noVBFSM_36;
                double dB_36 = 0;  dB_36 = error_noVBFSM_36;

                double Significance_36 = 0;
                double R_36 = 0;
                double E_36 = 0;
                double EE_36 = 0;

                if( B_36 > 0 && S_36 > 0) {
                    
                      double LSB_36 = log(1 + S_36/B_36);
                      R_36 =  2 * ( (S_36+B_36) * LSB_36 - S_36 );
                      E_36 = LSB_36 * LSB_36 * dS_36 * dS_36 + (LSB_36 - S_36/B_36) * (LSB_36 - S_36/B_36) * dB_36 * dB_36;

                      Significance_36 = sqrt(R_36);
                      if(Significance_36 > 0) { EE_36 = sqrt(E_36) / Significance_36; }
                    
                }
         
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }

          float rightmax36 = 1.1*h36_1->GetMaximum();
          float scale36 = 12000 / rightmax36;
          h36_1->Scale(scale36);
          h36_1->Draw("SAMEHIST");
          
          h36_2->Scale(scale36);
          h36_2->Draw("SAMEHIST");
          
        
          TGaxis*axis36 = new TGaxis(3000,0,3000,12000,0,rightmax36,510,"+L");
          // axis36->SetTitle("Quadratic Sum of significance");
          axis36->SetTitleSize(0.03);
          axis36->SetLabelSize(0.025);
          //axis36->Draw();
          
          pad362->cd();
          TLegend *leg36 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg36->SetBorderSize(1);
          leg36->SetFillColor(0);
          leg36->SetTextFont(42);
          leg36->SetTextSize(0.053);
          
          // for(int i=n_smp; i>=0 ; i--) { leg36->AddEntry(h_hist[i], h_titles[i].c_str()); }
          leg36->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg36->AddEntry(h_hist[37], "ggF HH");
          leg36->AddEntry(h_hist[36], "ttbar");
          leg36->AddEntry(h_hist[33], "single top");
          leg36->AddEntry(h_hist[27], "Z#tau#tau");
          leg36->AddEntry(h_hist[25], "W");
          leg36->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg36->AddEntry(h_hist[17], "Fake_W");
          leg36->AddEntry(h_hist[16], "Fake_ttbar");
          leg36->AddEntry(h_hist[14], "DY");
          leg36->AddEntry(h_hist[11], "diboson");
          leg36->AddEntry(h_hist[0], "SM H");
          leg36->AddEntry(h36_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg36->AddEntry(h36_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg36->Draw();
          
          
          c36 -> SaveAs("Mhh_SM.pdf");


          //   ===========================================================   mHH_scaled   ===========================================================
          
          TCanvas *c3 = new TCanvas ("c3", "mHH_scaled",1200,650);
            
          TPad *pad31 = new TPad("pad31","",0,0,0.8,1);
          TPad *pad32 = new TPad("pad32","",0.75,0,1,1);
          pad31->Draw();
          pad32->Draw();
            
          pad31->cd();
          pad31->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",30,0,3000);
            h_hist[i]->GetXaxis()->SetTitle("mHH_{scaled} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 100 GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 14000); //7200
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb
        
        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mHH_scaled*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs3 = new THStack("hs3", "");
          for(int i= 0; i<38 ; i++){ hs3->Add(h_hist[i], "hist3"); }
          hs3->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h3_1 = new TH1F("h3_1","Quadratic Sum from left",30,0,3000); //left
          
          double QuadraticSum_l_3 = 0;
          double R_l_3 = 0;
          double E_l_3 = 0;
          double EE_l_3 = 0;
           
          for (int j=1; j<=30; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
             
        
              if( B > 0 && S > 0) {
                  
                  double LSB = log(1 + S/B);
                  R_l_3 +=  2* ( (S+B) * LSB - S );
                  E_l_3 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_3 = sqrt(R_l_3);
                  if(R_l_3 > 0) { EE_l_3 = sqrt(E_l_3) / QuadraticSum_l_3; }
                  
              }

             h3_1->SetBinContent(j,QuadraticSum_l_3);
             h3_1->SetLineColor(kBlue-9);
             h3_1->SetLineStyle(2);
              
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h3_2 = new TH1F("h3_2","Quadratic Sum from right",30,0,3000); //right
          
         double QuadraticSum_r_3 = 0;
         double R_r_3 = 0;
         double E_r_3 = 0;
         double EE_r_3 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_3 +=  2* ( (S+B) * LSB - S );
                  E_r_3 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_3 = sqrt(R_r_3);
                  if(R_r_3 > 0) { EE_r_3 = sqrt(E_r_3) / QuadraticSum_r_3; }
             }


            h3_2->SetBinContent(j,QuadraticSum_r_3);
            h3_2->SetLineColor(kGreen-6);
            h3_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_3 = 0;
      double integral_Bkg_3 = 0;
      double integral_noVBFSM_3 = 0;

      double error_VBFSM_3 = 0;
      double error_Bkg_3 = 0;
      double error_noVBFSM_3 = 0;

        integral_VBFSM_3 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_3, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_3 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_3, "");

            integral_noVBFSM_3 += integral_Bkg_3;
            error_noVBFSM_3 += error_Bkg_3*error_Bkg_3;
        }

        error_noVBFSM_3 = sqrt(error_noVBFSM_3);

                double S_3 = 0;   S_3 = integral_VBFSM_3;
                double dS_3 = 0;  dS_3 = error_VBFSM_3;
                double B_3 = 0;   B_3 = integral_noVBFSM_3;
                double dB_3 = 0;  dB_3 = error_noVBFSM_3;

                double Significance_3 = 0;
                double R_3 = 0;
                double E_3 = 0;
                double EE_3 = 0;

                if( B_3 > 0 && S_3 > 0) {
                    
                      double LSB_3 = log(1 + S_3/B_3);
                      R_3 =  2 * ( (S_3+B_3) * LSB_3 - S_3 );
                      E_3 = LSB_3 * LSB_3 * dS_3 * dS_3 + (LSB_3 - S_3/B_3) * (LSB_3 - S_3/B_3) * dB_3 * dB_3;

                      Significance_3 = sqrt(R_3);
                      if(Significance_3 > 0) { EE_3 = sqrt(E_3) / Significance_3; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax3 = 1.1*h3_1->GetMaximum();
          float scale3 = 14000 / rightmax3;
          h3_1->Scale(scale3);
          h3_1->Draw("SAMEHIST");
          
          h3_2->Scale(scale3);
          h3_2->Draw("SAMEHIST");
          

          TGaxis*axis3 = new TGaxis(3000,0,3000,14000,0,rightmax3,510,"+L");
          // axis3->SetTitle("Quadratic Sum of significance");
          axis3->SetTitleSize(0.03);
          axis3->SetLabelSize(0.025);
          //axis3->Draw();
          
          pad32->cd();
          TLegend *leg3 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg3->SetBorderSize(1);
          leg3->SetFillColor(0);
          leg3->SetTextFont(42);
          leg3->SetTextSize(0.053);
          
          leg3->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg3->AddEntry(h_hist[37], "ggF HH");
          leg3->AddEntry(h_hist[36], "ttbar");
          leg3->AddEntry(h_hist[33], "single top");
          leg3->AddEntry(h_hist[27], "Z#tau#tau");
          leg3->AddEntry(h_hist[25], "W");
          leg3->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg3->AddEntry(h_hist[17], "Fake_W");
          leg3->AddEntry(h_hist[16], "Fake_ttbar");
          leg3->AddEntry(h_hist[14], "DY");
          leg3->AddEntry(h_hist[11], "diboson");
          leg3->AddEntry(h_hist[0], "SM H");
          leg3->AddEntry(h3_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg3->AddEntry(h3_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg3->Draw();
          
          c3 -> SaveAs("mHH_scaled_SM.pdf");
         
        
        //   ===========================================================   mHHStar   ===========================================================
          
          TCanvas *c38 = new TCanvas ("c38", "mHHStar",1200,650);
            
          TPad *pad381 = new TPad("pad381","",0,0,0.8,1);
          TPad *pad382 = new TPad("pad382","",0.75,0,1,1);
          pad381->Draw();
          pad382->Draw();
            
          pad381->cd();
          pad381->SetTickx();
          //pad381->SetLogy(); // log
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
              h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,3000);
              h_hist[i]->GetXaxis()->SetTitle("m_{HH, star} [GeV]");
              h_hist[i]->GetYaxis()->SetTitle("Events/ 100 GeV");//
               h_hist[i]->GetYaxis()->SetRangeUser(0, 4500); // for normal plot 1300
              //h_hist[i]->SetMaximum(100000); // for log plot
          }

          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mHHStar*0.001>>"+h_title[i];
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb



          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        //(sqrt( ((mMMC-118000)/(mMMC)) * ((mMMC-118000)/(mMMC)) + ((mBB-120000)/(mBB)) * ((mBB-120000)/(mBB)) ))
        //&& mjjVBF>500000 && (sqrt( ((mMMC-118000)/(mMMC)) * ((mMMC-118000)/(mMMC)) + ((mBB-120000)/(mBB)) * ((mBB-120000)/(mBB)) ))<0.4 &&

        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs38 = new THStack("hs38", "");
          for(int i= 0; i<38 ; i++){ hs38->Add(h_hist[i], "hist38"); }
          hs38->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h38_1 = new TH1F("h38_1","Quadratic Sum from left",30,0,3000); //left
          
         double QuadraticSum_l_38 = 0;
         double R_l_38 = 0;
         double E_l_38 = 0;
         double EE_l_38 = 0;
           
          for (int j=1; j<=30; j++) {

            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_38 +=  2* ( (S+B) * LSB - S );
                  E_l_38 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_38 = sqrt(R_l_38);
                  if(R_l_38 > 0) { EE_l_38 = sqrt(E_l_38) / QuadraticSum_l_38; }
                 
             }


             h38_1->SetBinContent(j,QuadraticSum_l_38);
             h38_1->SetLineColor(kBlue-9);
             h38_1->SetLineStyle(2);


             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h38_2 = new TH1F("h38_2","Quadratic Sum from right",30,0,3000); //right
          
         double QuadraticSum_r_38 = 0;
         double R_r_38 = 0;
         double E_r_38 = 0;
         double EE_r_38 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_38 +=  2* ( (S+B) * LSB - S );
                  E_r_38 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_38 = sqrt(R_r_38);
                  if(R_r_38 > 0) { EE_r_38 = sqrt(E_r_38) / QuadraticSum_r_38; }
                 
             }

            h38_2->SetBinContent(j,QuadraticSum_r_38);
            h38_2->SetLineColor(kGreen-6);
            h38_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }


      //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_38 = 0;
      double integral_Bkg_38 = 0;
      double integral_noVBFSM_38 = 0;

      double error_VBFSM_38 = 0;
      double error_Bkg_38 = 0;
      double error_noVBFSM_38 = 0;

        integral_VBFSM_38 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_38, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_38 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_38, "");

            integral_noVBFSM_38 += integral_Bkg_38;
            error_noVBFSM_38 += error_Bkg_38*error_Bkg_38;
        }

        error_noVBFSM_38 = sqrt(error_noVBFSM_38);

                double S_38 = 0;   S_38 = integral_VBFSM_38;
                double dS_38 = 0;  dS_38 = error_VBFSM_38;
                double B_38 = 0;   B_38 = integral_noVBFSM_38;
                double dB_38 = 0;  dB_38 = error_noVBFSM_38;

                double Significance_38 = 0;
                double R_38 = 0;
                double E_38 = 0;
                double EE_38 = 0;

                if( B_38 > 0 && S_38 > 0) {
                    
                      double LSB_38 = log(1 + S_38/B_38);
                      R_38 =  2 * ( (S_38+B_38) * LSB_38 - S_38 );
                      E_38 = LSB_38 * LSB_38 * dS_38 * dS_38 + (LSB_38 - S_38/B_38) * (LSB_38 - S_38/B_38) * dB_38 * dB_38;

                      Significance_38 = sqrt(R_38);
                      if(Significance_38 > 0) { EE_38 = sqrt(E_38) / Significance_38; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax38 = 1.1*h38_1->GetMaximum();
          float scale38 = 100 / rightmax38;
          h38_1->Scale(scale38);
          // h38_1->Draw("SAMEHIST");
          
          h38_2->Scale(scale38);
          // h38_2->Draw("SAMEHIST");
          
        
        TGaxis*axis38 = new TGaxis(3000,0,3000,100,0,rightmax38,510,"+L");
          axis38->SetTitle("Quadratic Sum of significance");
          axis38->SetTitleSize(0.03);
          axis38->SetLabelSize(0.025);
          // axis38->Draw();
          
          pad382->cd();
          TLegend *leg38 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg38->SetBorderSize(1);
          leg38->SetFillColor(0);
          leg38->SetTextFont(42);
          leg38->SetTextSize(0.053);
          
          leg38->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg38->AddEntry(h_hist[37], "ggF HH");
          leg38->AddEntry(h_hist[36], "ttbar");
          leg38->AddEntry(h_hist[33], "single top");
          leg38->AddEntry(h_hist[27], "Z#tau#tau");
          leg38->AddEntry(h_hist[25], "W");
          leg38->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg38->AddEntry(h_hist[17], "Fake_W");
          leg38->AddEntry(h_hist[16], "Fake_ttbar");
          leg38->AddEntry(h_hist[14], "DY");
          leg38->AddEntry(h_hist[11], "diboson");
          leg38->AddEntry(h_hist[0], "SM H");
          // leg38->AddEntry(h38_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          // leg38->AddEntry(h38_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg38->Draw();
          
          c38 -> SaveAs("mHHStar_SM_2.pdf");

 
          //   ===========================================================   dPhiLepTauBB   ===========================================================
          
          TCanvas *c34 = new TCanvas ("c34", "dPhiLepTauBB",1200,650);
            
          TPad *pad341 = new TPad("pad341","",0,0,0.8,1);
          TPad *pad342 = new TPad("pad342","",0.75,0,1,1);
          pad341->Draw();
          pad342->Draw();
            
          pad341->cd();
          pad341->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",40,-3.5,3.5);
              h_hist[i]->GetXaxis()->SetTitle("#Delta#phi (#tau_{lep}#tau_{had}, bb)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.175");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 2500);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dPhiLepTauBB>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs34 = new THStack("hs34", "");
          for(int i= 0; i<38 ; i++){ hs34->Add(h_hist[i], "hist34"); }
          hs34->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h34_1 = new TH1F("h34_1","Quadratic Sum from left",40,-3.5,3.5); //left
          
         double QuadraticSum_l_34 = 0;
         double R_l_34 = 0;
         double E_l_34 = 0;
         double EE_l_34 = 0;
           
          for (int j=1; j<=40; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_34 +=  2* ( (S+B) * LSB - S );
                  E_l_34 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_34 = sqrt(R_l_34);
                  if(R_l_34 > 0) { EE_l_34 = sqrt(E_l_34) / QuadraticSum_l_34; }
                 
             }

             h34_1->SetBinContent(j,QuadraticSum_l_34);
             h34_1->SetLineColor(kBlue-9);
             h34_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h34_2 = new TH1F("h34_2","Quadratic Sum from right",40,-3.5,3.5); //right
          
         double QuadraticSum_r_34 = 0;
         double R_r_34 = 0;
         double E_r_34 = 0;
         double EE_r_34 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_34 +=  2* ( (S+B) * LSB - S );
                  E_r_34 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_34 = sqrt(R_r_34);
                  if(R_r_34 > 0) { EE_r_34 = sqrt(E_r_34) / QuadraticSum_r_34; }
                 
             }

            h34_2->SetBinContent(j,QuadraticSum_r_34);
            h34_2->SetLineColor(kGreen-6);
            h34_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_34 = 0;
      double integral_Bkg_34 = 0;
      double integral_noVBFSM_34 = 0;

      double error_VBFSM_34 = 0;
      double error_Bkg_34 = 0;
      double error_noVBFSM_34 = 0;

        integral_VBFSM_34 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_34, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_34 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_34, "");

            integral_noVBFSM_34 += integral_Bkg_34;
            error_noVBFSM_34 += error_Bkg_34*error_Bkg_34;
        }

        error_noVBFSM_34 = sqrt(error_noVBFSM_34);

                double S_34 = 0;   S_34 = integral_VBFSM_34;
                double dS_34 = 0;  dS_34 = error_VBFSM_34;
                double B_34 = 0;   B_34 = integral_noVBFSM_34;
                double dB_34 = 0;  dB_34 = error_noVBFSM_34;

                double Significance_34 = 0;
                double R_34 = 0;
                double E_34 = 0;
                double EE_34 = 0;

                if( B_34 > 0 && S_34 > 0) {
                    
                      double LSB_34 = log(1 + S_34/B_34);
                      R_34 =  2 * ( (S_34+B_34) * LSB_34 - S_34 );
                      E_34 = LSB_34 * LSB_34 * dS_34 * dS_34 + (LSB_34 - S_34/B_34) * (LSB_34 - S_34/B_34) * dB_34 * dB_34;

                      Significance_34 = sqrt(R_34);
                      if(Significance_34 > 0) { EE_34 = sqrt(E_34) / Significance_34; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax34 = 1.1*h34_1->GetMaximum();
          float scale34 = 2500 / rightmax34;
          h34_1->Scale(scale34);
          h34_1->Draw("SAMEHIST");
          
          h34_2->Scale(scale34);
          h34_2->Draw("SAMEHIST");
          
        
        TGaxis*axis34 = new TGaxis(3.5,0,3.5,2500,0,rightmax34,510,"+L");
          // axis34->SetTitle("Quadratic Sum of significance");
          axis34->SetTitleSize(0.03);
          axis34->SetLabelSize(0.025);
          //axis34->Draw();
          
          pad342->cd();
          TLegend *leg34 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg34->SetBorderSize(1);
          leg34->SetFillColor(0);
          leg34->SetTextFont(42);
          leg34->SetTextSize(0.053);
          
          leg34->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg34->AddEntry(h_hist[37], "ggF HH");
          leg34->AddEntry(h_hist[36], "ttbar");
          leg34->AddEntry(h_hist[33], "single top");
          leg34->AddEntry(h_hist[27], "Z#tau#tau");
          leg34->AddEntry(h_hist[25], "W");
          leg34->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg34->AddEntry(h_hist[17], "Fake_W");
          leg34->AddEntry(h_hist[16], "Fake_ttbar");
          leg34->AddEntry(h_hist[14], "DY");
          leg34->AddEntry(h_hist[11], "diboson");
          leg34->AddEntry(h_hist[0], "SM H");
          leg34->AddEntry(h34_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg34->AddEntry(h34_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg34->Draw();
          
          c34 -> SaveAs("dPhiLepTauBB_SM.pdf");
        
        //   ===========================================================   dEtaHH   ===========================================================
          
          TCanvas *c50 = new TCanvas ("c50", "dEtaHH",1200,650);
            
          TPad *pad501 = new TPad("pad501","",0,0,0.8,1);
          TPad *pad502 = new TPad("pad502","",0.75,0,1,1);
          pad501->Draw();
          pad502->Draw();
            
          pad501->cd();
          pad501->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",40,0,8);
              h_hist[i]->GetXaxis()->SetTitle("#Delta#eta (H,H)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");//
            h_hist[i]->GetXaxis()->SetRangeUser(0, 7);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 4000); //2500
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dEtaHH>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs50 = new THStack("hs50", "");
          for(int i= 0; i<38 ; i++){ hs50->Add(h_hist[i], "hist50"); }
          hs50->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h50_1 = new TH1F("h50_1","Quadratic Sum from left",40,0,8); //left
          
         double QuadraticSum_l_50 = 0;
         double R_l_50 = 0;
         double E_l_50 = 0;
         double EE_l_50 = 0;
           
          for (int j=1; j<=40; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_50 +=  2* ( (S+B) * LSB - S );
                  E_l_50 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_50 = sqrt(R_l_50);
                  if(R_l_50 > 0) { EE_l_50 = sqrt(E_l_50) / QuadraticSum_l_50; }
                 
             }

             h50_1->SetBinContent(j,QuadraticSum_l_50);
             h50_1->SetLineColor(kBlue-9);
             h50_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h50_2 = new TH1F("h50_2","Quadratic Sum from right",40,0,8); //right
          
         double QuadraticSum_r_50 = 0;
         double R_r_50 = 0;
         double E_r_50 = 0;
         double EE_r_50 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_50 +=  2* ( (S+B) * LSB - S );
                  E_r_50 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_50 = sqrt(R_r_50);
                  if(R_r_50 > 0) { EE_r_50 = sqrt(E_r_50) / QuadraticSum_r_50; }
                 
             }

            h50_2->SetBinContent(j,QuadraticSum_r_50);
            h50_2->SetLineColor(kGreen-6);
            h50_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_50 = 0;
      double integral_Bkg_50 = 0;
      double integral_noVBFSM_50 = 0;

      double error_VBFSM_50 = 0;
      double error_Bkg_50 = 0;
      double error_noVBFSM_50 = 0;

        integral_VBFSM_50 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_50, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_50 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_50, "");

            integral_noVBFSM_50 += integral_Bkg_50;
            error_noVBFSM_50 += error_Bkg_50*error_Bkg_50;
        }

        error_noVBFSM_50 = sqrt(error_noVBFSM_50);

                double S_50 = 0;   S_50 = integral_VBFSM_50;
                double dS_50 = 0;  dS_50 = error_VBFSM_50;
                double B_50 = 0;   B_50 = integral_noVBFSM_50;
                double dB_50 = 0;  dB_50 = error_noVBFSM_50;

                double Significance_50 = 0;
                double R_50 = 0;
                double E_50 = 0;
                double EE_50 = 0;

                if( B_50 > 0 && S_50 > 0) {
                    
                      double LSB_50 = log(1 + S_50/B_50);
                      R_50 =  2 * ( (S_50+B_50) * LSB_50 - S_50 );
                      E_50 = LSB_50 * LSB_50 * dS_50 * dS_50 + (LSB_50 - S_50/B_50) * (LSB_50 - S_50/B_50) * dB_50 * dB_50;

                      Significance_50 = sqrt(R_50);
                      if(Significance_50 > 0) { EE_50 = sqrt(E_50) / Significance_50; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax50 = 1.1*h50_1->GetMaximum();
          float scale50 = 4000 / rightmax50;
          h50_1->Scale(scale50);
          h50_1->Draw("SAMEHIST");
          
          h50_2->Scale(scale50);
          h50_2->Draw("SAMEHIST");
          
        
          TGaxis*axis50 = new TGaxis(7,0,7,4000,0,rightmax50,510,"+L");
          // axis50->SetTitle("Quadratic Sum of significance");
          axis50->SetTitleSize(0.03);
          axis50->SetLabelSize(0.025);
          //axis50->Draw();
          
          pad502->cd();
          TLegend *leg50 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg50->SetBorderSize(1);
          leg50->SetFillColor(0);
          leg50->SetTextFont(42);
          leg50->SetTextSize(0.053);
          
          leg50->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg50->AddEntry(h_hist[37], "ggF HH");
          leg50->AddEntry(h_hist[36], "ttbar");
          leg50->AddEntry(h_hist[33], "single top");
          leg50->AddEntry(h_hist[27], "Z#tau#tau");
          leg50->AddEntry(h_hist[25], "W");
          leg50->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg50->AddEntry(h_hist[17], "Fake_W");
          leg50->AddEntry(h_hist[16], "Fake_ttbar");
          leg50->AddEntry(h_hist[14], "DY");
          leg50->AddEntry(h_hist[11], "diboson");
          leg50->AddEntry(h_hist[0], "SM H");
          leg50->AddEntry(h50_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg50->AddEntry(h50_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg50->Draw();
          
          c50 -> SaveAs("dEtaHH_SM.pdf");
        
        //   ===========================================================   dRHH   ===========================================================
          
          TCanvas *c40 = new TCanvas ("c40", "dRHH",1200,650);
            
          TPad *pad401 = new TPad("pad401","",0,0,0.8,1);
          TPad *pad402 = new TPad("pad402","",0.75,0,1,1);
          pad401->Draw();
          pad402->Draw();
            
          pad401->cd();
          pad401->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",40,0,8);
              h_hist[i]->GetXaxis()->SetTitle("#DeltaR (H,H)");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3000); //2500
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="dRHH>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs40 = new THStack("hs40", "");
          for(int i= 0; i<38 ; i++){ hs40->Add(h_hist[i], "hist40"); }
          hs40->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h40_1 = new TH1F("h40_1","Quadratic Sum from left",40,0,8); //left
          
         double QuadraticSum_l_40 = 0;
         double R_l_40 = 0;
         double E_l_40 = 0;
         double EE_l_40 = 0;
           
          for (int j=1; j<=40; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_40 +=  2* ( (S+B) * LSB - S );
                  E_l_40 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_40 = sqrt(R_l_40);
                  if(R_l_40 > 0) { EE_l_40 = sqrt(E_l_40) / QuadraticSum_l_40; }
                 
             }

             h40_1->SetBinContent(j,QuadraticSum_l_40);
             h40_1->SetLineColor(kBlue-9);
             h40_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h40_2 = new TH1F("h40_2","Quadratic Sum from right",40,0,8); //right
          
         double QuadraticSum_r_40 = 0;
         double R_r_40 = 0;
         double E_r_40 = 0;
         double EE_r_40 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_40 +=  2* ( (S+B) * LSB - S );
                  E_r_40 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_40 = sqrt(R_r_40);
                  if(R_r_40 > 0) { EE_r_40 = sqrt(E_r_40) / QuadraticSum_r_40; }
                 
             }

            h40_2->SetBinContent(j,QuadraticSum_r_40);
            h40_2->SetLineColor(kGreen-6);
            h40_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_40 = 0;
      double integral_Bkg_40 = 0;
      double integral_noVBFSM_40 = 0;

      double error_VBFSM_40 = 0;
      double error_Bkg_40 = 0;
      double error_noVBFSM_40 = 0;

        integral_VBFSM_40 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_40, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_40 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_40, "");

            integral_noVBFSM_40 += integral_Bkg_40;
            error_noVBFSM_40 += error_Bkg_40*error_Bkg_40;
        }

        error_noVBFSM_40 = sqrt(error_noVBFSM_40);

                double S_40 = 0;   S_40 = integral_VBFSM_40;
                double dS_40 = 0;  dS_40 = error_VBFSM_40;
                double B_40 = 0;   B_40 = integral_noVBFSM_40;
                double dB_40 = 0;  dB_40 = error_noVBFSM_40;

                double Significance_40 = 0;
                double R_40 = 0;
                double E_40 = 0;
                double EE_40 = 0;

                if( B_40 > 0 && S_40 > 0) {
                    
                      double LSB_40 = log(1 + S_40/B_40);
                      R_40 =  2 * ( (S_40+B_40) * LSB_40 - S_40 );
                      E_40 = LSB_40 * LSB_40 * dS_40 * dS_40 + (LSB_40 - S_40/B_40) * (LSB_40 - S_40/B_40) * dB_40 * dB_40;

                      Significance_40 = sqrt(R_40);
                      if(Significance_40 > 0) { EE_40 = sqrt(E_40) / Significance_40; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax40 = 1.1*h40_1->GetMaximum();
          float scale40 = 3000 / rightmax40;
          h40_1->Scale(scale40);
          h40_1->Draw("SAMEHIST");
          
          h40_2->Scale(scale40);
          h40_2->Draw("SAMEHIST");
          
        
        TGaxis*axis40 = new TGaxis(8,0,8,3000,0,rightmax40,510,"+L");
          // axis40->SetTitle("Quadratic Sum of significance");
          axis40->SetTitleSize(0.03);
          axis40->SetLabelSize(0.025);
          //axis40->Draw();
          
          pad402->cd();
          TLegend *leg40 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg40->SetBorderSize(1);
          leg40->SetFillColor(0);
          leg40->SetTextFont(42);
          leg40->SetTextSize(0.053);
          
          leg40->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg40->AddEntry(h_hist[37], "ggF HH");
          leg40->AddEntry(h_hist[36], "ttbar");
          leg40->AddEntry(h_hist[33], "single top");
          leg40->AddEntry(h_hist[27], "Z#tau#tau");
          leg40->AddEntry(h_hist[25], "W");
          leg40->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg40->AddEntry(h_hist[17], "Fake_W");
          leg40->AddEntry(h_hist[16], "Fake_ttbar");
          leg40->AddEntry(h_hist[14], "DY");
          leg40->AddEntry(h_hist[11], "diboson");
          leg40->AddEntry(h_hist[0], "SM H");
          leg40->AddEntry(h40_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg40->AddEntry(h40_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg40->Draw();
          
          c40 -> SaveAs("dRHH_SM.pdf");
        
        
        //   ===========================================================   mTW   ===========================================================
          
          TCanvas *c41 = new TCanvas ("c41", "mTW",1200,650);
            
          TPad *pad411 = new TPad("pad411","",0,0,0.8,1);
          TPad *pad412 = new TPad("pad412","",0.75,0,1,1);
          pad411->Draw();
          pad412->Draw();
            
          pad411->cd();
          pad411->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",30,0,300);
              h_hist[i]->GetXaxis()->SetTitle("M_{T}^{W} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 10 GeV");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 7000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mTW*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs41 = new THStack("hs41", "");
          for(int i= 0; i<38 ; i++){ hs41->Add(h_hist[i], "hist41"); }
          hs41->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h41_1 = new TH1F("h41_1","Quadratic Sum from left",30,0,300); //left
          
         double QuadraticSum_l_41 = 0;
         double R_l_41 = 0;
         double E_l_41 = 0;
         double EE_l_41 = 0;
           
          for (int j=1; j<=30; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_41 +=  2* ( (S+B) * LSB - S );
                  E_l_41 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_41 = sqrt(R_l_41);
                  if(R_l_41 > 0) { EE_l_41 = sqrt(E_l_41) / QuadraticSum_l_41; }
                 
             }

             h41_1->SetBinContent(j,QuadraticSum_l_41);
             h41_1->SetLineColor(kBlue-9);
             h41_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h41_2 = new TH1F("h41_2","Quadratic Sum from right",30,0,300); //right
          
         double QuadraticSum_r_41 = 0;
         double R_r_41 = 0;
         double E_r_41 = 0;
         double EE_r_41 = 0;
          
          for (int j=30; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_41 +=  2* ( (S+B) * LSB - S );
                  E_r_41 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_41 = sqrt(R_r_41);
                  if(R_r_41 > 0) { EE_r_41 = sqrt(E_r_41) / QuadraticSum_r_41; }
                 
             }

            h41_2->SetBinContent(j,QuadraticSum_r_41);
            h41_2->SetLineColor(kGreen-6);
            h41_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }
         

        //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_41 = 0;
      double integral_Bkg_41 = 0;
      double integral_noVBFSM_41 = 0;

      double error_VBFSM_41 = 0;
      double error_Bkg_41 = 0;
      double error_noVBFSM_41 = 0;

        integral_VBFSM_41 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_41, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_41 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_41, "");

            integral_noVBFSM_41 += integral_Bkg_41;
            error_noVBFSM_41 += error_Bkg_41*error_Bkg_41;
        }

        error_noVBFSM_41 = sqrt(error_noVBFSM_41);

                double S_41 = 0;   S_41 = integral_VBFSM_41;
                double dS_41 = 0;  dS_41 = error_VBFSM_41;
                double B_41 = 0;   B_41 = integral_noVBFSM_41;
                double dB_41 = 0;  dB_41 = error_noVBFSM_41;

                double Significance_41 = 0;
                double R_41 = 0;
                double E_41 = 0;
                double EE_41 = 0;

                if( B_41 > 0 && S_41 > 0) {
                    
                      double LSB_41 = log(1 + S_41/B_41);
                      R_41 =  2 * ( (S_41+B_41) * LSB_41 - S_41 );
                      E_41 = LSB_41 * LSB_41 * dS_41 * dS_41 + (LSB_41 - S_41/B_41) * (LSB_41 - S_41/B_41) * dB_41 * dB_41;

                      Significance_41 = sqrt(R_41);
                      if(Significance_41 > 0) { EE_41 = sqrt(E_41) / Significance_41; }
                    
                }
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax41 = 1.1*h41_1->GetMaximum();
          float scale41 = 7000 / rightmax41;
          h41_1->Scale(scale41);
          h41_1->Draw("SAMEHIST");
          
          h41_2->Scale(scale41);
          h41_2->Draw("SAMEHIST");
          
        
        TGaxis*axis41 = new TGaxis(300,0,300,7000,0,rightmax41,510,"+L");
          // axis41->SetTitle("Quadratic Sum of significance");
          axis41->SetTitleSize(0.03);
          axis41->SetLabelSize(0.025);
          //axis41->Draw();
          
          pad412->cd();
          TLegend *leg41 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg41->SetBorderSize(1);
          leg41->SetFillColor(0);
          leg41->SetTextFont(42);
          leg41->SetTextSize(0.053);
          
          leg41->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg41->AddEntry(h_hist[37], "ggF HH");
          leg41->AddEntry(h_hist[36], "ttbar");
          leg41->AddEntry(h_hist[33], "single top");
          leg41->AddEntry(h_hist[27], "Z#tau#tau");
          leg41->AddEntry(h_hist[25], "W");
          leg41->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg41->AddEntry(h_hist[17], "Fake_W");
          leg41->AddEntry(h_hist[16], "Fake_ttbar");
          leg41->AddEntry(h_hist[14], "DY");
          leg41->AddEntry(h_hist[11], "diboson");
          leg41->AddEntry(h_hist[0], "SM H");
          leg41->AddEntry(h41_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg41->AddEntry(h41_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg41->Draw();
          
          c41 -> SaveAs("mTW_SM.pdf");
        
        
        //   ===========================================================   mTLep   ===========================================================
          
          TCanvas *c43 = new TCanvas ("c43", "mTLep",1200,650);
            
          TPad *pad431 = new TPad("pad431","",0,0,0.8,1);
          TPad *pad432 = new TPad("pad432","",0.75,0,1,1);
          pad431->Draw();
          pad432->Draw();
            
          pad431->cd();
          pad431->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",25,0,500);
              h_hist[i]->GetXaxis()->SetTitle("m_{T}^{#tau_{lep}} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20 GeV");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 13000); //4000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mTLep*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs43 = new THStack("hs43", "");
          for(int i= 0; i<38 ; i++){ hs43->Add(h_hist[i], "hist43"); }
          hs43->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h43_1 = new TH1F("h43_1","Quadratic Sum from left",25,0,500); //left
          
         double QuadraticSum_l_43 = 0;
         double R_l_43 = 0;
         double E_l_43 = 0;
         double EE_l_43 = 0;
           
          for (int j=1; j<=25; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_43 +=  2* ( (S+B) * LSB - S );
                  E_l_43 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_43 = sqrt(R_l_43);
                  if(R_l_43 > 0) { EE_l_43 = sqrt(E_l_43) / QuadraticSum_l_43; }
                 
             }

             h43_1->SetBinContent(j,QuadraticSum_l_43);
             h43_1->SetLineColor(kBlue-9);
             h43_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h43_2 = new TH1F("h43_2","Quadratic Sum from right",25,0,500); //right
          
         double QuadraticSum_r_43 = 0;
         double R_r_43 = 0;
         double E_r_43 = 0;
         double EE_r_43 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_43 +=  2* ( (S+B) * LSB - S );
                  E_r_43 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_43 = sqrt(R_r_43);
                  if(R_r_43 > 0) { EE_r_43 = sqrt(E_r_43) / QuadraticSum_r_43; }
                 
             }

            h43_2->SetBinContent(j,QuadraticSum_r_43);
            h43_2->SetLineColor(kGreen-6);
            h43_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }
         
         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_43 = 0;
      double integral_Bkg_43 = 0;
      double integral_noVBFSM_43 = 0;

      double error_VBFSM_43 = 0;
      double error_Bkg_43 = 0;
      double error_noVBFSM_43 = 0;

        integral_VBFSM_43 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_43, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_43 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_43, "");

            integral_noVBFSM_43 += integral_Bkg_43;
            error_noVBFSM_43 += error_Bkg_43*error_Bkg_43;
        }

        error_noVBFSM_43 = sqrt(error_noVBFSM_43);

                double S_43 = 0;   S_43 = integral_VBFSM_43;
                double dS_43 = 0;  dS_43 = error_VBFSM_43;
                double B_43 = 0;   B_43 = integral_noVBFSM_43;
                double dB_43 = 0;  dB_43 = error_noVBFSM_43;

                double Significance_43 = 0;
                double R_43 = 0;
                double E_43 = 0;
                double EE_43 = 0;

                if( B_43 > 0 && S_43 > 0) {
                    
                      double LSB_43 = log(1 + S_43/B_43);
                      R_43 =  2 * ( (S_43+B_43) * LSB_43 - S_43 );
                      E_43 = LSB_43 * LSB_43 * dS_43 * dS_43 + (LSB_43 - S_43/B_43) * (LSB_43 - S_43/B_43) * dB_43 * dB_43;

                      Significance_43 = sqrt(R_43);
                      if(Significance_43 > 0) { EE_43 = sqrt(E_43) / Significance_43; }
                    
                }
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax43 = 1.1*h43_1->GetMaximum();
          float scale43 = 13000 / rightmax43;
          h43_1->Scale(scale43);
          h43_1->Draw("SAMEHIST");
          
          h43_2->Scale(scale43);
          h43_2->Draw("SAMEHIST");
          
        
          TGaxis*axis43 = new TGaxis(500,0,500,13000,0,rightmax43,510,"+L");
          // axis43->SetTitle("Quadratic Sum of significance");
          axis43->SetTitleSize(0.03);
          axis43->SetLabelSize(0.025);
          //axis43->Draw();
          
          pad432->cd();
          TLegend *leg43 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg43->SetBorderSize(1);
          leg43->SetFillColor(0);
          leg43->SetTextFont(42);
          leg43->SetTextSize(0.053);
          
          leg43->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg43->AddEntry(h_hist[37], "ggF HH");
          leg43->AddEntry(h_hist[36], "ttbar");
          leg43->AddEntry(h_hist[33], "single top");
          leg43->AddEntry(h_hist[27], "Z#tau#tau");
          leg43->AddEntry(h_hist[25], "W");
          leg43->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg43->AddEntry(h_hist[17], "Fake_W");
          leg43->AddEntry(h_hist[16], "Fake_ttbar");
          leg43->AddEntry(h_hist[14], "DY");
          leg43->AddEntry(h_hist[11], "diboson");
          leg43->AddEntry(h_hist[0], "SM H");
          leg43->AddEntry(h43_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg43->AddEntry(h43_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg43->Draw();
          
          c43 -> SaveAs("mTLep_SM.pdf");
      
           
        //   ===========================================================   mTtau   ===========================================================
          
          TCanvas *c44 = new TCanvas ("c44", "mTtau",1200,650);
            
          TPad *pad441 = new TPad("pad441","",0,0,0.8,1);
          TPad *pad442 = new TPad("pad442","",0.75,0,1,1);
          pad441->Draw();
          pad442->Draw();
            
          pad441->cd();
          pad441->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
              h_hist[i] = new TH1F(h_nm, "",25,0,500);
              h_hist[i]->GetXaxis()->SetTitle("m_{T}^{#tau_{had}} [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 50 GeV");//
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 7000);
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="mTtau*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs44 = new THStack("hs44", "");
          for(int i= 0; i<38 ; i++){ hs44->Add(h_hist[i], "hist44"); }
          hs44->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h44_1 = new TH1F("h44_1","Quadratic Sum from left",25,0,500); //left
          
         double QuadraticSum_l_44 = 0;
         double R_l_44 = 0;
         double E_l_44 = 0;
         double EE_l_44 = 0;
           
          for (int j=1; j<=25; j++) {
              
             double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
             double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
             double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
             double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }  
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_44 +=  2* ( (S+B) * LSB - S );
                  E_l_44 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_44 = sqrt(R_l_44);
                  if(R_l_44 > 0) { EE_l_44 = sqrt(E_l_44) / QuadraticSum_l_44; }
                 
             }

             h44_1->SetBinContent(j,QuadraticSum_l_44);
             h44_1->SetLineColor(kBlue-9);
             h44_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
        TH1F *h44_2 = new TH1F("h44_2","Quadratic Sum from right",25,0,500); //right
          
         double QuadraticSum_r_44 = 0;
         double R_r_44 = 0;
         double E_r_44 = 0;
         double EE_r_44 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_44 +=  2* ( (S+B) * LSB - S );
                  E_r_44 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_44 = sqrt(R_r_44);
                  if(R_r_44 > 0) { EE_r_44 = sqrt(E_r_44) / QuadraticSum_r_44; }
                 
             }

            h44_2->SetBinContent(j,QuadraticSum_r_44);
            h44_2->SetLineColor(kGreen-6);
            h44_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

          //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_44 = 0;
      double integral_Bkg_44 = 0;
      double integral_noVBFSM_44 = 0;

      double error_VBFSM_44 = 0;
      double error_Bkg_44 = 0;
      double error_noVBFSM_44 = 0;

        integral_VBFSM_44 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_44, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_44 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_44, "");

            integral_noVBFSM_44 += integral_Bkg_44;
            error_noVBFSM_44 += error_Bkg_44*error_Bkg_44;
        }

        error_noVBFSM_44 = sqrt(error_noVBFSM_44);

                double S_44 = 0;   S_44 = integral_VBFSM_44;
                double dS_44 = 0;  dS_44 = error_VBFSM_44;
                double B_44 = 0;   B_44 = integral_noVBFSM_44;
                double dB_44 = 0;  dB_44 = error_noVBFSM_44;

                double Significance_44 = 0;
                double R_44 = 0;
                double E_44 = 0;
                double EE_44 = 0;

                if( B_44 > 0 && S_44 > 0) {
                    
                      double LSB_44 = log(1 + S_44/B_44);
                      R_44 =  2 * ( (S_44+B_44) * LSB_44 - S_44 );
                      E_44 = LSB_44 * LSB_44 * dS_44 * dS_44 + (LSB_44 - S_44/B_44) * (LSB_44 - S_44/B_44) * dB_44 * dB_44;

                      Significance_44 = sqrt(R_44);
                      if(Significance_44 > 0) { EE_44 = sqrt(E_44) / Significance_44; }
                    
                }
         
         for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }

          float rightmax44 = 1.1*h44_1->GetMaximum();
          float scale44 = 7000 / rightmax44;
          h44_1->Scale(scale44);
          h44_1->Draw("SAMEHIST");
          
          h44_2->Scale(scale44);
          h44_2->Draw("SAMEHIST");
          
        
          TGaxis*axis44 = new TGaxis(500,0,500,7000,0,rightmax44,510,"+L");
          // axis44->SetTitle("Quadratic Sum of significance");
          axis44->SetTitleSize(0.03);
          axis44->SetLabelSize(0.025);
          //axis44->Draw();
          
          pad442->cd();
          TLegend *leg44 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg44->SetBorderSize(1);
          leg44->SetFillColor(0);
          leg44->SetTextFont(42);
          leg44->SetTextSize(0.053);
          
          leg44->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg44->AddEntry(h_hist[37], "ggF HH");
          leg44->AddEntry(h_hist[36], "ttbar");
          leg44->AddEntry(h_hist[33], "single top");
          leg44->AddEntry(h_hist[27], "Z#tau#tau");
          leg44->AddEntry(h_hist[25], "W");
          leg44->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg44->AddEntry(h_hist[17], "Fake_W");
          leg44->AddEntry(h_hist[16], "Fake_ttbar");
          leg44->AddEntry(h_hist[14], "DY");
          leg44->AddEntry(h_hist[11], "diboson");
          leg44->AddEntry(h_hist[0], "SM H");
          leg44->AddEntry(h44_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg44->AddEntry(h44_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg44->Draw();
          
          c44 -> SaveAs("mTtau_SM.pdf");
          
          
          //   ===========================================================   coshelicitybb   ===========================================================
      
      TCanvas *c51 = new TCanvas ("c51", "coshelicitybb",1200,650);
        
      TPad *pad511 = new TPad("pad511","",0,0,0.8,1);
      TPad *pad512 = new TPad("pad512","",0.75,0,1,1);
      pad511->Draw();
      pad512->Draw();
        
      pad511->cd();
      pad511->SetTickx();
      gStyle->SetOptStat(kFALSE);
      
      for (int i=0; i<n_smp; i++){
        h_nm = h_title[i].c_str();
          h_hist[i] = new TH1F(h_nm, "",20,-1,1);
          h_hist[i]->GetXaxis()->SetTitle("coshelicity_{b,b}");
        h_hist[i]->GetYaxis()->SetTitle("Events/ 0.1");//
        //h_hist[i]->GetXaxis()->SetRangeUser(0, 7);
        h_hist[i]->GetYaxis()->SetRangeUser(0, 2000); //2500
      }
      
                h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

    
      for (int i=0; i<n_smp; i++){
          hist_draw[i]="coshelicitybb>>"+h_title[i];
      }
      
      for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
        
      }
      
      THStack *hs51 = new THStack("hs51", "");
      for(int i= 0; i<38 ; i++){ hs51->Add(h_hist[i], "hist51"); }
      hs51->Draw("SAMEHIST");
    

     //cout << " ============== significance From left ============== " << endl;
     //cout << " " << endl;
      
    TH1F *h51_1 = new TH1F("h51_1","Quadratic Sum from left",20,-1,1); //left
      
         double QuadraticSum_l_51 = 0;
         double R_l_51 = 0;
         double E_l_51 = 0;
         double EE_l_51 = 0;
       
      for (int j=1; j<=20; j++) {
          
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_51 +=  2* ( (S+B) * LSB - S );
                  E_l_51 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_51 = sqrt(R_l_51);
                  if(R_l_51 > 0) { EE_l_51 = sqrt(E_l_51) / QuadraticSum_l_51; }
                 
             }

         h51_1->SetBinContent(j,QuadraticSum_l_51);
         h51_1->SetLineColor(kBlue-9);
         h51_1->SetLineStyle(2);
         
         //cout << " ************************************ " << endl;
     }
         

     // ------------------------------------------------------------
     
     //cout << " " << endl;
     //cout << " ============== significance From right ============== " << endl;
     //cout << " " << endl;
      
    TH1F *h51_2 = new TH1F("h51_2","Quadratic Sum from right",20,-1,1); //right
      
        double QuadraticSum_r_51 = 0;
        double R_r_51 = 0;
        double E_r_51 = 0;
        double EE_r_51 = 0;
      
      for (int j=20; j>=1; j--) {
          
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_51 +=  2* ( (S+B) * LSB - S );
                  E_r_51 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_51 = sqrt(R_r_51);
                  if(R_r_51 > 0) { EE_r_51 = sqrt(E_r_51) / QuadraticSum_r_51; }
                 
             }

        h51_2->SetBinContent(j,QuadraticSum_r_51);
        h51_2->SetLineColor(kGreen-6);
        h51_2->SetLineStyle(2);
        
        //cout << " ************************************ " << endl;
     }

     //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_51 = 0;
      double integral_Bkg_51 = 0;
      double integral_noVBFSM_51 = 0;

      double error_VBFSM_51 = 0;
      double error_Bkg_51 = 0;
      double error_noVBFSM_51 = 0;

        integral_VBFSM_51 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_51, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_51 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_51, "");

            integral_noVBFSM_51 += integral_Bkg_51;
            error_noVBFSM_51 += error_Bkg_51*error_Bkg_51;
        }

        error_noVBFSM_51 = sqrt(error_noVBFSM_51);

                double S_51 = 0;   S_51 = integral_VBFSM_51;
                double dS_51 = 0;  dS_51 = error_VBFSM_51;
                double B_51 = 0;   B_51 = integral_noVBFSM_51;
                double dB_51 = 0;  dB_51 = error_noVBFSM_51;

                double Significance_51 = 0;
                double R_51 = 0;
                double E_51 = 0;
                double EE_51 = 0;

                if( B_51 > 0 && S_51 > 0) {
                    
                      double LSB_51 = log(1 + S_51/B_51);
                      R_51 =  2 * ( (S_51+B_51) * LSB_51 - S_51 );
                      E_51 = LSB_51 * LSB_51 * dS_51 * dS_51 + (LSB_51 - S_51/B_51) * (LSB_51 - S_51/B_51) * dB_51 * dB_51;

                      Significance_51 = sqrt(R_51);
                      if(Significance_51 > 0) { EE_51 = sqrt(E_51) / Significance_51; }
                    
                }
     
      for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
      
      float rightmax51 = 1.1*h51_1->GetMaximum();
      float scale51 = 2000 / rightmax51;
      h51_1->Scale(scale51);
      h51_1->Draw("SAMEHIST");
      
      h51_2->Scale(scale51);
      h51_2->Draw("SAMEHIST");
      
    
      TGaxis*axis51 = new TGaxis(1,0,1,2000,0,rightmax51,510,"+L");
      // axis51->SetTitle("Quadratic Sum of significance");
      axis51->SetTitleSize(0.03);
      axis51->SetLabelSize(0.025);
      //axis51->Draw();
      
      pad512->cd();
      TLegend *leg51 = new TLegend(0.008, 0.1, 0.985,0.9);
      leg51->SetBorderSize(1);
      leg51->SetFillColor(0);
      leg51->SetTextFont(42);
      leg51->SetTextSize(0.053);
      
          leg51->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg51->AddEntry(h_hist[37], "ggF HH");
          leg51->AddEntry(h_hist[36], "ttbar");
          leg51->AddEntry(h_hist[33], "single top");
          leg51->AddEntry(h_hist[27], "Z#tau#tau");
          leg51->AddEntry(h_hist[25], "W");
          leg51->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg51->AddEntry(h_hist[17], "Fake_W");
          leg51->AddEntry(h_hist[16], "Fake_ttbar");
          leg51->AddEntry(h_hist[14], "DY");
          leg51->AddEntry(h_hist[11], "diboson");
          leg51->AddEntry(h_hist[0], "SM H");
      leg51->AddEntry(h51_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
      leg51->AddEntry(h51_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
      leg51->Draw();
      
      c51 -> SaveAs("coshelicitybb_SM.pdf");
    
    
    //   ===========================================================   coshelicitytautau   ===========================================================
      
      TCanvas *c52 = new TCanvas ("c52", "coshelicitytautau",1200,650);
        
      TPad *pad521 = new TPad("pad521","",0,0,0.8,1);
      TPad *pad522 = new TPad("pad522","",0.75,0,1,1);
      pad521->Draw();
      pad522->Draw();
        
      pad521->cd();
      pad521->SetTickx();
      gStyle->SetOptStat(kFALSE);
      
      for (int i=0; i<n_smp; i++){
        h_nm = h_title[i].c_str();
          h_hist[i] = new TH1F(h_nm, "",20,-1,1);
          h_hist[i]->GetXaxis()->SetTitle("coshelicity_{#tau_{lep},#tau_{had}}");
        h_hist[i]->GetYaxis()->SetTitle("Events/ 0.1");//
        //h_hist[i]->GetXaxis()->SetRangeUser(0, 7);
        h_hist[i]->GetYaxis()->SetRangeUser(0, 2000); //2500
      }
      
                h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

    
      for (int i=0; i<n_smp; i++){
          hist_draw[i]="coshelicitytautau>>"+h_title[i];
      }
      for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }

      for(int i = 0; i<n_smp; i++){
        
        if (i == 0 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
        
      }
      
      THStack *hs52 = new THStack("hs52", "");
      for(int i= 0; i<38 ; i++){ hs52->Add(h_hist[i], "hist52"); }
      hs52->Draw("SAMEHIST");

   
     //cout << " ============== significance From left ============== " << endl;
     //cout << " " << endl;
      
    TH1F *h52_1 = new TH1F("h52_1","Quadratic Sum from left",20,-1,1); //left
      
         double QuadraticSum_l_52 = 0;
         double R_l_52 = 0;
         double E_l_52 = 0;
         double EE_l_52 = 0;
       
      for (int j=1; j<=20; j++) {
          
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_52 +=  2* ( (S+B) * LSB - S );
                  E_l_52 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_52 = sqrt(R_l_52);
                  if(R_l_52 > 0) { EE_l_52 = sqrt(E_l_52) / QuadraticSum_l_52; }
                 
             }

         h52_1->SetBinContent(j,QuadraticSum_l_52);
         h52_1->SetLineColor(kBlue-9);
         h52_1->SetLineStyle(2);
         
         //cout << " ************************************ " << endl;
     }
         

     // ------------------------------------------------------------
     
     //cout << " " << endl;
     //cout << " ============== significance From right ============== " << endl;
     //cout << " " << endl;
      
    TH1F *h52_2 = new TH1F("h52_2","Quadratic Sum from right",20,-1,1); //right
      
         double QuadraticSum_r_52 = 0;
         double R_r_52 = 0;
         double E_r_52 = 0;
         double EE_r_52 = 0;
      
      for (int j=20; j>=1; j--) {
          
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_52 +=  2* ( (S+B) * LSB - S );
                  E_r_52 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_52 = sqrt(R_r_52);
                  if(R_r_52 > 0) { EE_r_52 = sqrt(E_r_52) / QuadraticSum_r_52; }
                 
             }
        h52_2->SetBinContent(j,QuadraticSum_r_52);
        h52_2->SetLineColor(kGreen-6);
        h52_2->SetLineStyle(2);
        
        //cout << " ************************************ " << endl;
     }

     //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_52 = 0;
      double integral_Bkg_52 = 0;
      double integral_noVBFSM_52 = 0;

      double error_VBFSM_52 = 0;
      double error_Bkg_52 = 0;
      double error_noVBFSM_52 = 0;

        integral_VBFSM_52 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_52, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_52 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_52, "");

            integral_noVBFSM_52 += integral_Bkg_52;
            error_noVBFSM_52 += error_Bkg_52*error_Bkg_52;
        }

        error_noVBFSM_52 = sqrt(error_noVBFSM_52);

                double S_52 = 0;   S_52 = integral_VBFSM_52;
                double dS_52 = 0;  dS_52 = error_VBFSM_52;
                double B_52 = 0;   B_52 = integral_noVBFSM_52;
                double dB_52 = 0;  dB_52 = error_noVBFSM_52;

                double Significance_52 = 0;
                double R_52 = 0;
                double E_52 = 0;
                double EE_52 = 0;

                if( B_52 > 0 && S_52 > 0) {
                    
                      double LSB_52 = log(1 + S_52/B_52);
                      R_52 =  2 * ( (S_52+B_52) * LSB_52 - S_52 );
                      E_52 = LSB_52 * LSB_52 * dS_52 * dS_52 + (LSB_52 - S_52/B_52) * (LSB_52 - S_52/B_52) * dB_52 * dB_52;

                      Significance_52 = sqrt(R_52);
                      if(Significance_52 > 0) { EE_52 = sqrt(E_52) / Significance_52; }
                    
                }
     
      for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
      
      float rightmax52 = 1.1*h52_1->GetMaximum();
      float scale52 = 2000 / rightmax52;
      h52_1->Scale(scale52);
      h52_1->Draw("SAMEHIST");
      
      h52_2->Scale(scale52);
      h52_2->Draw("SAMEHIST");
      
    
      TGaxis*axis52 = new TGaxis(1,0,1,2000,0,rightmax52,510,"+L");
      // axis52->SetTitle("Quadratic Sum of significance");
      axis52->SetTitleSize(0.03);
      axis52->SetLabelSize(0.025);
      //axis52->Draw();
      
      pad522->cd();
      TLegend *leg52 = new TLegend(0.008, 0.1, 0.985,0.9);
      leg52->SetBorderSize(1);
      leg52->SetFillColor(0);
      leg52->SetTextFont(42);
      leg52->SetTextSize(0.053);
      
          leg52->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg52->AddEntry(h_hist[37], "ggF HH");
          leg52->AddEntry(h_hist[36], "ttbar");
          leg52->AddEntry(h_hist[33], "single top");
          leg52->AddEntry(h_hist[27], "Z#tau#tau");
          leg52->AddEntry(h_hist[25], "W");
          leg52->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg52->AddEntry(h_hist[17], "Fake_W");
          leg52->AddEntry(h_hist[16], "Fake_ttbar");
          leg52->AddEntry(h_hist[14], "DY");
          leg52->AddEntry(h_hist[11], "diboson");
          leg52->AddEntry(h_hist[0], "SM H");
      leg52->AddEntry(h52_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
      leg52->AddEntry(h52_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
      leg52->Draw();
      
      c52 -> SaveAs("coshelicitytautau_SM.pdf");
       
  
          //   ===========================================================   X_HH   ===========================================================
          
          TCanvas *c12 = new TCanvas ("c12", "X_HH",1200,650);
            
          TPad *pad121 = new TPad("pad121","",0,0,0.8,1);
          TPad *pad122 = new TPad("pad122","",0.75,0,1,1);
          pad121->Draw();
          pad122->Draw();
            
          pad121->cd();
          pad121->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",15,0,3);
            h_hist[i]->GetXaxis()->SetTitle("X_{HH}");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 17000); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="(sqrt( ((mMMC-118000)/(mMMC)) * ((mMMC-118000)/(mMMC)) + ((mBB-120000)/(mBB)) * ((mBB-120000)/(mBB)) ))>>"+h_title[i];
          }
    
          //for (int i=0; i<n_smp; i++){hist_draw[i]="X_HH>>"+h_title[i];}
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs12 = new THStack("hs12", "");
          for(int i= 0; i<38 ; i++){ hs12->Add(h_hist[i], "hist12"); }
          hs12->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h12_1 = new TH1F("h12_1","Quadratic Sum from left",15,0,3); //left
          
         double QuadraticSum_l_12 = 0;
         double R_l_12 = 0;
         double E_l_12 = 0;
         double EE_l_12 = 0;
           
          for (int j=1; j<=15; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_12 +=  2* ( (S+B) * LSB - S );
                  E_l_12 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_12 = sqrt(R_l_12);
                  if(R_l_12 > 0) { EE_l_12 = sqrt(E_l_12) / QuadraticSum_l_12; }
                 
             }
             h12_1->SetBinContent(j,QuadraticSum_l_12);
             h12_1->SetLineColor(kBlue-9);
             h12_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h12_2 = new TH1F("h12_2","Quadratic Sum from right",15,0,3); //right
          
         double QuadraticSum_r_12 = 0;
         double R_r_12 = 0;
         double E_r_12 = 0;
         double EE_r_12 = 0;
          
          for (int j=15; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_12 +=  2* ( (S+B) * LSB - S );
                  E_r_12 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_12 = sqrt(R_r_12);
                  if(R_r_12 > 0) { EE_r_12 = sqrt(E_r_12) / QuadraticSum_r_12; }
                 
             }

            h12_2->SetBinContent(j,QuadraticSum_r_12);
            h12_2->SetLineColor(kGreen-6);
            h12_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_12 = 0;
      double integral_Bkg_12 = 0;
      double integral_noVBFSM_12 = 0;

      double error_VBFSM_12 = 0;
      double error_Bkg_12 = 0;
      double error_noVBFSM_12 = 0;

        integral_VBFSM_12 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_12, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_12 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_12, "");

            integral_noVBFSM_12 += integral_Bkg_12;
            error_noVBFSM_12 += error_Bkg_12*error_Bkg_12;
        }

        error_noVBFSM_12 = sqrt(error_noVBFSM_12);

                double S_12 = 0;   S_12 = integral_VBFSM_12;
                double dS_12 = 0;  dS_12 = error_VBFSM_12;
                double B_12 = 0;   B_12 = integral_noVBFSM_12;
                double dB_12 = 0;  dB_12 = error_noVBFSM_12;

                double Significance_12 = 0;
                double R_12 = 0;
                double E_12 = 0;
                double EE_12 = 0;

                if( B_12 > 0 && S_12 > 0) {
                    
                      double LSB_12 = log(1 + S_12/B_12);
                      R_12 =  2 * ( (S_12+B_12) * LSB_12 - S_12 );
                      E_12 = LSB_12 * LSB_12 * dS_12 * dS_12 + (LSB_12 - S_12/B_12) * (LSB_12 - S_12/B_12) * dB_12 * dB_12;

                      Significance_12 = sqrt(R_12);
                      if(Significance_12 > 0) { EE_12 = sqrt(E_12) / Significance_12; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax12 = 1.1*h12_1->GetMaximum();
          float scale12 = 17000 / rightmax12;
          h12_1->Scale(scale12);
          h12_1->Draw("SAMEHIST");
          
          h12_2->Scale(scale12);
          h12_2->Draw("SAMEHIST");
          
        
          TGaxis*axis12 = new TGaxis(3,0,3,17000,0,rightmax12,510,"+L");
          // axis12->SetTitle("Quadratic Sum of significance");
          axis12->SetTitleSize(0.03);
          axis12->SetLabelSize(0.025);
          //axis12->Draw();
          
          pad122->cd();
          TLegend *leg12 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg12->SetBorderSize(1);
          leg12->SetFillColor(0);
          leg12->SetTextFont(42);
          leg12->SetTextSize(0.053);
          
          leg12->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg12->AddEntry(h_hist[37], "ggF HH");
          leg12->AddEntry(h_hist[36], "ttbar");
          leg12->AddEntry(h_hist[33], "single top");
          leg12->AddEntry(h_hist[27], "Z#tau#tau");
          leg12->AddEntry(h_hist[25], "W");
          leg12->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg12->AddEntry(h_hist[17], "Fake_W");
          leg12->AddEntry(h_hist[16], "Fake_ttbar");
          leg12->AddEntry(h_hist[14], "DY");
          leg12->AddEntry(h_hist[11], "diboson");
          leg12->AddEntry(h_hist[0], "SM H");
          leg12->AddEntry(h12_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg12->AddEntry(h12_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg12->Draw();
          
          c12 -> SaveAs("X_HH_SM.pdf");


            //   ===========================================================   VBFjj   ===========================================================
          
          TCanvas *c56 = new TCanvas ("c56", "VBFjj",1200,650);
            
          TPad *pad561 = new TPad("pad561","",0,0,0.8,1);
          TPad *pad562 = new TPad("pad562","",0.75,0,1,1);
          pad561->Draw();
          pad562->Draw();
            
          pad561->cd();
          pad561->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",40,-20,0);
            h_hist[i]->GetXaxis()->SetTitle("#eta_{j0VBF}*#eta_{j1VBF}");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 8000); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="Etaj1VBF*Etaj2VBF>>"+h_title[i];
          }
    
    //for (int i=0; i<n_smp; i++){
     //   hist_draw[i]="EtajjVBF>>"+h_title[i];
    //}
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs56 = new THStack("hs56", "");
          for(int i= 0; i<38 ; i++){ hs56->Add(h_hist[i], "hist56"); }
          hs56->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h56_1 = new TH1F("h56_1","Quadratic Sum from left",40,-20,0); //left
          
         double QuadraticSum_l_56 = 0;
         double R_l_56 = 0;
         double E_l_56 = 0;
         double EE_l_56 = 0;
           
          for (int j=1; j<=40; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_56 +=  2* ( (S+B) * LSB - S );
                  E_l_56 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_56 = sqrt(R_l_56);
                  if(R_l_56 > 0) { EE_l_56 = sqrt(E_l_56) / QuadraticSum_l_56; }
                 
             }
             h56_1->SetBinContent(j,QuadraticSum_l_56);
             h56_1->SetLineColor(kBlue-9);
             h56_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h56_2 = new TH1F("h56_2","Quadratic Sum from right",40,-20,0); //right
          
         double QuadraticSum_r_56 = 0;
         double R_r_56 = 0;
         double E_r_56 = 0;
         double EE_r_56 = 0;
          
          for (int j=40; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_56 +=  2* ( (S+B) * LSB - S );
                  E_r_56 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_56 = sqrt(R_r_56);
                  if(R_r_56> 0) { EE_r_56 = sqrt(E_r_56) / QuadraticSum_r_56; }
                 
             }

            h56_2->SetBinContent(j,QuadraticSum_r_56);
            h56_2->SetLineColor(kGreen-6);
            h56_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_56 = 0;
      double integral_Bkg_56 = 0;
      double integral_noVBFSM_56 = 0;

      double error_VBFSM_56 = 0;
      double error_Bkg_56 = 0;
      double error_noVBFSM_56 = 0;

        integral_VBFSM_56 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_56, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_56 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_56, "");

            integral_noVBFSM_56 += integral_Bkg_56;
            error_noVBFSM_56 += error_Bkg_56*error_Bkg_56;
        }

        error_noVBFSM_56 = sqrt(error_noVBFSM_56);

                double S_56 = 0;   S_56 = integral_VBFSM_56;
                double dS_56 = 0;  dS_56 = error_VBFSM_56;
                double B_56 = 0;   B_56 = integral_noVBFSM_56;
                double dB_56 = 0;  dB_56 = error_noVBFSM_56;

                double Significance_56 = 0;
                double R_56 = 0;
                double E_56 = 0;
                double EE_56 = 0;

                if( B_56 > 0 && S_56 > 0) {
                    
                      double LSB_56 = log(1 + S_56/B_56);
                      R_56 =  2 * ( (S_56+B_56) * LSB_56 - S_56 );
                      E_56 = LSB_56 * LSB_56 * dS_56 * dS_56 + (LSB_56 - S_56/B_56) * (LSB_56 - S_56/B_56) * dB_56 * dB_56;

                      Significance_56 = sqrt(R_56);
                      if(Significance_56 > 0) { EE_56 = sqrt(E_56) / Significance_56; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax56 = 1.1*h56_1->GetMaximum();
          float scale56 = 8000 / rightmax56;
          h56_1->Scale(scale56);
          h56_1->Draw("SAMEHIST");
          
          h56_2->Scale(scale56);
          h56_2->Draw("SAMEHIST");
          
        
          TGaxis*axis56 = new TGaxis(0,0,0,8000,0,rightmax56,510,"+L");
          // axis56->SetTitle("Quadratic Sum of significance");
          axis56->SetTitleSize(0.03);
          axis56->SetLabelSize(0.025);
          //axis56->Draw();
          
          pad562->cd();
          TLegend *leg56 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg56->SetBorderSize(1);
          leg56->SetFillColor(0);
          leg56->SetTextFont(42);
          leg56->SetTextSize(0.053);
          
          leg56->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg56->AddEntry(h_hist[37], "ggF HH");
          leg56->AddEntry(h_hist[36], "ttbar");
          leg56->AddEntry(h_hist[33], "single top");
          leg56->AddEntry(h_hist[27], "Z#tau#tau");
          leg56->AddEntry(h_hist[25], "W");
          leg56->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg56->AddEntry(h_hist[17], "Fake_W");
          leg56->AddEntry(h_hist[16], "Fake_ttbar");
          leg56->AddEntry(h_hist[14], "DY");
          leg56->AddEntry(h_hist[11], "diboson");
          leg56->AddEntry(h_hist[0], "SM H");
          leg56->AddEntry(h56_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg56->AddEntry(h56_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg56->Draw();
          
          c56 -> SaveAs("VBFjj_SM.pdf");


            //   ===========================================================   tau_rnn   ===========================================================
          
          TCanvas *c57 = new TCanvas ("c57", "tau_rnn",1200,650);
            
          TPad *pad571 = new TPad("pad571","",0,0,0.8,1);
          TPad *pad572 = new TPad("pad572","",0.75,0,1,1);
          pad571->Draw();
          pad572->Draw();
            
          pad571->cd();
          pad571->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,1);
            h_hist[i]->GetXaxis()->SetTitle("tau_rnn");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.04");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3000); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="tau_rnn>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs57 = new THStack("hs57", "");
          for(int i= 0; i<38 ; i++){ hs57->Add(h_hist[i], "hist57"); }
          hs57->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h57_1 = new TH1F("h57_1","Quadratic Sum from left",25,0,1); //left
          
         double QuadraticSum_l_57 = 0;
         double R_l_57 = 0;
         double E_l_57 = 0;
         double EE_l_57 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_57 +=  2* ( (S+B) * LSB - S );
                  E_l_57 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_57 = sqrt(R_l_57);
                  if(R_l_57 > 0) { EE_l_57 = sqrt(E_l_57) / QuadraticSum_l_57; }
                 
             }
             h57_1->SetBinContent(j,QuadraticSum_l_57);
             h57_1->SetLineColor(kBlue-9);
             h57_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h57_2 = new TH1F("h57_2","Quadratic Sum from right",25,0,1); //right
          
         double QuadraticSum_r_57 = 0;
         double R_r_57 = 0;
         double E_r_57 = 0;
         double EE_r_57 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_57 +=  2* ( (S+B) * LSB - S );
                  E_r_57 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_57 = sqrt(R_r_57);
                  if(R_r_57> 0) { EE_r_57 = sqrt(E_r_57) / QuadraticSum_r_57; }
                 
             }

            h57_2->SetBinContent(j,QuadraticSum_r_57);
            h57_2->SetLineColor(kGreen-6);
            h57_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_57 = 0;
      double integral_Bkg_57 = 0;
      double integral_noVBFSM_57 = 0;

      double error_VBFSM_57 = 0;
      double error_Bkg_57 = 0;
      double error_noVBFSM_57 = 0;

        integral_VBFSM_57 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_57, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_57 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_57, "");

            integral_noVBFSM_57 += integral_Bkg_57;
            error_noVBFSM_57 += error_Bkg_57*error_Bkg_57;
        }

        error_noVBFSM_57 = sqrt(error_noVBFSM_57);

                double S_57 = 0;   S_57 = integral_VBFSM_57;
                double dS_57 = 0;  dS_57 = error_VBFSM_57;
                double B_57 = 0;   B_57 = integral_noVBFSM_57;
                double dB_57 = 0;  dB_57 = error_noVBFSM_57;

                double Significance_57 = 0;
                double R_57 = 0;
                double E_57 = 0;
                double EE_57 = 0;

                if( B_57 > 0 && S_57 > 0) {
                    
                      double LSB_57 = log(1 + S_57/B_57);
                      R_57 =  2 * ( (S_57+B_57) * LSB_57 - S_57 );
                      E_57 = LSB_57 * LSB_57 * dS_57 * dS_57 + (LSB_57 - S_57/B_57) * (LSB_57 - S_57/B_57) * dB_57 * dB_57;

                      Significance_57 = sqrt(R_57);
                      if(Significance_57 > 0) { EE_57 = sqrt(E_57) / Significance_57; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax57 = 1.1*h57_1->GetMaximum();
          float scale57 = 3000 / rightmax57;
          h57_1->Scale(scale57);
          h57_1->Draw("SAMEHIST");
          
          h57_2->Scale(scale57);
          h57_2->Draw("SAMEHIST");
          
        
          TGaxis*axis57 = new TGaxis(1,0,1,3000,0,rightmax57,510,"+L");
          // axis57->SetTitle("Quadratic Sum of significance");
          axis57->SetTitleSize(0.03);
          axis57->SetLabelSize(0.025);
          //axis57->Draw();
          
          pad572->cd();
          TLegend *leg57 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg57->SetBorderSize(1);
          leg57->SetFillColor(0);
          leg57->SetTextFont(42);
          leg57->SetTextSize(0.053);
          
          leg57->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg57->AddEntry(h_hist[37], "ggF HH");
          leg57->AddEntry(h_hist[36], "ttbar");
          leg57->AddEntry(h_hist[33], "single top");
          leg57->AddEntry(h_hist[27], "Z#tau#tau");
          leg57->AddEntry(h_hist[25], "W");
          leg57->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg57->AddEntry(h_hist[17], "Fake_W");
          leg57->AddEntry(h_hist[16], "Fake_ttbar");
          leg57->AddEntry(h_hist[14], "DY");
          leg57->AddEntry(h_hist[11], "diboson");
          leg57->AddEntry(h_hist[0], "SM H");
          leg57->AddEntry(h57_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg57->AddEntry(h57_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg57->Draw();
          
          c57 -> SaveAs("TauRNN_SM.pdf");


            //   ===========================================================   LeadBjet   ===========================================================
          
          TCanvas *c58 = new TCanvas ("c58", "LeadBjet",1200,650);
            
          TPad *pad581 = new TPad("pad581","",0,0,0.8,1);
          TPad *pad582 = new TPad("pad582","",0.75,0,1,1);
          pad581->Draw();
          pad582->Draw();
            
          pad581->cd();
          pad581->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,500);
            h_hist[i]->GetXaxis()->SetTitle("Leading b-jet [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 10000); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="LeadBjet*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs58 = new THStack("hs58", "");
          for(int i= 0; i<38 ; i++){ hs58->Add(h_hist[i], "hist58"); }
          hs58->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h58_1 = new TH1F("h58_1","Quadratic Sum from left",25,0,500); //left
          
         double QuadraticSum_l_58 = 0;
         double R_l_58 = 0;
         double E_l_58 = 0;
         double EE_l_58 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_58 +=  2* ( (S+B) * LSB - S );
                  E_l_58 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_58 = sqrt(R_l_58);
                  if(R_l_58 > 0) { EE_l_58 = sqrt(E_l_58) / QuadraticSum_l_58; }
                 
             }
             h58_1->SetBinContent(j,QuadraticSum_l_58);
             h58_1->SetLineColor(kBlue-9);
             h58_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h58_2 = new TH1F("h58_2","Quadratic Sum from right",25,0,500); //right
          
         double QuadraticSum_r_58 = 0;
         double R_r_58 = 0;
         double E_r_58 = 0;
         double EE_r_58 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_58 +=  2* ( (S+B) * LSB - S );
                  E_r_58 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_58 = sqrt(R_r_58);
                  if(R_r_58> 0) { EE_r_58 = sqrt(E_r_58) / QuadraticSum_r_58; }
                 
             }

            h58_2->SetBinContent(j,QuadraticSum_r_58);
            h58_2->SetLineColor(kGreen-6);
            h58_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_58 = 0;
      double integral_Bkg_58 = 0;
      double integral_noVBFSM_58 = 0;

      double error_VBFSM_58 = 0;
      double error_Bkg_58 = 0;
      double error_noVBFSM_58 = 0;

        integral_VBFSM_58 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_58, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_58 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_58, "");

            integral_noVBFSM_58 += integral_Bkg_58;
            error_noVBFSM_58 += error_Bkg_58*error_Bkg_58;
        }

        error_noVBFSM_58 = sqrt(error_noVBFSM_58);

                double S_58 = 0;   S_58 = integral_VBFSM_58;
                double dS_58 = 0;  dS_58 = error_VBFSM_58;
                double B_58 = 0;   B_58 = integral_noVBFSM_58;
                double dB_58 = 0;  dB_58 = error_noVBFSM_58;

                double Significance_58 = 0;
                double R_58 = 0;
                double E_58 = 0;
                double EE_58 = 0;

                if( B_58 > 0 && S_58 > 0) {
                    
                      double LSB_58 = log(1 + S_58/B_58);
                      R_58 =  2 * ( (S_58+B_58) * LSB_58 - S_58 );
                      E_58 = LSB_58 * LSB_58 * dS_58 * dS_58 + (LSB_58 - S_58/B_58) * (LSB_58 - S_58/B_58) * dB_58 * dB_58;

                      Significance_58 = sqrt(R_58);
                      if(Significance_58 > 0) { EE_58 = sqrt(E_58) / Significance_58; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax58 = 1.1*h58_1->GetMaximum();
          float scale58 = 10000 / rightmax58;
          h58_1->Scale(scale58);
          h58_1->Draw("SAMEHIST");
          
          h58_2->Scale(scale58);
          h58_2->Draw("SAMEHIST");
          
        
          TGaxis*axis58 = new TGaxis(500,0,500,10000,0,rightmax58,510,"+L");
          // axis58->SetTitle("Quadratic Sum of significance");
          axis58->SetTitleSize(0.03);
          axis58->SetLabelSize(0.025);
          //axis58->Draw();
          
          pad582->cd();
          TLegend *leg58 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg58->SetBorderSize(1);
          leg58->SetFillColor(0);
          leg58->SetTextFont(42);
          leg58->SetTextSize(0.053);
          
          leg58->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg58->AddEntry(h_hist[37], "ggF HH");
          leg58->AddEntry(h_hist[36], "ttbar");
          leg58->AddEntry(h_hist[33], "single top");
          leg58->AddEntry(h_hist[27], "Z#tau#tau");
          leg58->AddEntry(h_hist[25], "W");
          leg58->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg58->AddEntry(h_hist[17], "Fake_W");
          leg58->AddEntry(h_hist[16], "Fake_ttbar");
          leg58->AddEntry(h_hist[14], "DY");
          leg58->AddEntry(h_hist[11], "diboson");
          leg58->AddEntry(h_hist[0], "SM H");
          leg58->AddEntry(h58_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg58->AddEntry(h58_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg58->Draw();
          
          c58 -> SaveAs("LeadBjet_SM.pdf");


             //   ===========================================================   LeadJetPt   ===========================================================
          
          TCanvas *c59 = new TCanvas ("c59", "LeadJetPt",1200,650);
            
          TPad *pad591 = new TPad("pad591","",0,0,0.8,1);
          TPad *pad592 = new TPad("pad592","",0.75,0,1,1);
          pad591->Draw();
          pad592->Draw();
            
          pad591->cd();
          pad591->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",35,0,700);
            h_hist[i]->GetXaxis()->SetTitle("Leading Jet pT [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 20GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 8000); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="LeadJetPt*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs59 = new THStack("hs59", "");
          for(int i= 0; i<38 ; i++){ hs59->Add(h_hist[i], "hist59"); }
          hs59->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h59_1 = new TH1F("h59_1","Quadratic Sum from left",35,0,700); //left
          
         double QuadraticSum_l_59 = 0;
         double R_l_59 = 0;
         double E_l_59 = 0;
         double EE_l_59 = 0;
           
          for (int j=1; j<=35; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_59 +=  2* ( (S+B) * LSB - S );
                  E_l_59 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_59 = sqrt(R_l_59);
                  if(R_l_59 > 0) { EE_l_59 = sqrt(E_l_59) / QuadraticSum_l_59; }
                 
             }
             h59_1->SetBinContent(j,QuadraticSum_l_59);
             h59_1->SetLineColor(kBlue-9);
             h59_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h59_2 = new TH1F("h59_2","Quadratic Sum from right",35,0,700); //right
          
         double QuadraticSum_r_59 = 0;
         double R_r_59 = 0;
         double E_r_59 = 0;
         double EE_r_59 = 0;
          
          for (int j=35; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_59 +=  2* ( (S+B) * LSB - S );
                  E_r_59 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_59 = sqrt(R_r_59);
                  if(R_r_59> 0) { EE_r_59 = sqrt(E_r_59) / QuadraticSum_r_59; }
                 
             }

            h59_2->SetBinContent(j,QuadraticSum_r_59);
            h59_2->SetLineColor(kGreen-6);
            h59_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_59 = 0;
      double integral_Bkg_59 = 0;
      double integral_noVBFSM_59 = 0;

      double error_VBFSM_59 = 0;
      double error_Bkg_59 = 0;
      double error_noVBFSM_59 = 0;

        integral_VBFSM_59 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_59, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_59 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_59, "");

            integral_noVBFSM_59 += integral_Bkg_59;
            error_noVBFSM_59 += error_Bkg_59*error_Bkg_59;
        }

        error_noVBFSM_59 = sqrt(error_noVBFSM_59);

                double S_59 = 0;   S_59 = integral_VBFSM_59;
                double dS_59 = 0;  dS_59 = error_VBFSM_59;
                double B_59 = 0;   B_59 = integral_noVBFSM_59;
                double dB_59 = 0;  dB_59 = error_noVBFSM_59;

                double Significance_59 = 0;
                double R_59 = 0;
                double E_59 = 0;
                double EE_59 = 0;

                if( B_59 > 0 && S_59 > 0) {
                    
                      double LSB_59 = log(1 + S_59/B_59);
                      R_59 =  2 * ( (S_59+B_59) * LSB_59 - S_59 );
                      E_59 = LSB_59 * LSB_59 * dS_59 * dS_59 + (LSB_59 - S_59/B_59) * (LSB_59 - S_59/B_59) * dB_59 * dB_59;

                      Significance_59 = sqrt(R_59);
                      if(Significance_59 > 0) { EE_59 = sqrt(E_59) / Significance_59; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax59 = 1.1*h59_1->GetMaximum();
          float scale59 = 8000 / rightmax59;
          h59_1->Scale(scale59);
          h59_1->Draw("SAMEHIST");
          
          h59_2->Scale(scale59);
          h59_2->Draw("SAMEHIST");
          
        
          TGaxis*axis59 = new TGaxis(700,0,700,8000,0,rightmax59,510,"+L");
          // axis59->SetTitle("Quadratic Sum of significance");
          axis59->SetTitleSize(0.03);
          axis59->SetLabelSize(0.025);
          //axis59->Draw();
          
          pad592->cd();
          TLegend *leg59 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg59->SetBorderSize(1);
          leg59->SetFillColor(0);
          leg59->SetTextFont(42);
          leg59->SetTextSize(0.053);
          
          leg59->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg59->AddEntry(h_hist[37], "ggF HH");
          leg59->AddEntry(h_hist[36], "ttbar");
          leg59->AddEntry(h_hist[33], "single top");
          leg59->AddEntry(h_hist[27], "Z#tau#tau");
          leg59->AddEntry(h_hist[25], "W");
          leg59->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg59->AddEntry(h_hist[17], "Fake_W");
          leg59->AddEntry(h_hist[16], "Fake_ttbar");
          leg59->AddEntry(h_hist[14], "DY");
          leg59->AddEntry(h_hist[11], "diboson");
          leg59->AddEntry(h_hist[0], "SM H");
          leg59->AddEntry(h59_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg59->AddEntry(h59_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg59->Draw();
          
          c59 -> SaveAs("LeadJetPt_SM.pdf");


            //   ===========================================================   pTSixObjVBF   ===========================================================
          
          TCanvas *c63 = new TCanvas ("c63", "pTSixObjVBF",1200,650);
            
          TPad *pad631 = new TPad("pad631","",0,0,0.8,1);
          TPad *pad632 = new TPad("pad632","",0.75,0,1,1);
          pad631->Draw();
          pad632->Draw();
            
          pad631->cd();
          pad631->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",20,0,200);
            h_hist[i]->GetXaxis()->SetTitle("pTSixObjVBF [GeV]");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 10GeV");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 8000); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="pTSixObjVBF*0.001>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs63 = new THStack("hs63", "");
          for(int i= 0; i<38 ; i++){ hs63->Add(h_hist[i], "hist63"); }
          hs63->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h63_1 = new TH1F("h63_1","Quadratic Sum from left",20,0,200); //left
          
         double QuadraticSum_l_63 = 0;
         double R_l_63 = 0;
         double E_l_63 = 0;
         double EE_l_63 = 0;
           
          for (int j=1; j<=20; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_63 +=  2* ( (S+B) * LSB - S );
                  E_l_63 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_63 = sqrt(R_l_63);
                  if(R_l_63 > 0) { EE_l_63 = sqrt(E_l_63) / QuadraticSum_l_63; }
                 
             }
             h63_1->SetBinContent(j,QuadraticSum_l_63);
             h63_1->SetLineColor(kBlue-9);
             h63_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h63_2 = new TH1F("h63_2","Quadratic Sum from right",20,0,200); //right
          
         double QuadraticSum_r_63 = 0;
         double R_r_63 = 0;
         double E_r_63 = 0;
         double EE_r_63 = 0;
          
          for (int j=20; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_63 +=  2* ( (S+B) * LSB - S );
                  E_r_63 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_63 = sqrt(R_r_63);
                  if(R_r_63> 0) { EE_r_63 = sqrt(E_r_63) / QuadraticSum_r_63; }
                 
             }

            h63_2->SetBinContent(j,QuadraticSum_r_63);
            h63_2->SetLineColor(kGreen-6);
            h63_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_63 = 0;
      double integral_Bkg_63 = 0;
      double integral_noVBFSM_63 = 0;

      double error_VBFSM_63 = 0;
      double error_Bkg_63 = 0;
      double error_noVBFSM_63 = 0;

        integral_VBFSM_63 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_63, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_63 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_63, "");

            integral_noVBFSM_63 += integral_Bkg_63;
            error_noVBFSM_63 += error_Bkg_63*error_Bkg_63;
        }

        error_noVBFSM_63 = sqrt(error_noVBFSM_63);

                double S_63 = 0;   S_63 = integral_VBFSM_63;
                double dS_63 = 0;  dS_63 = error_VBFSM_63;
                double B_63 = 0;   B_63 = integral_noVBFSM_63;
                double dB_63 = 0;  dB_63 = error_noVBFSM_63;

                double Significance_63 = 0;
                double R_63 = 0;
                double E_63 = 0;
                double EE_63 = 0;

                if( B_63 > 0 && S_63 > 0) {
                    
                      double LSB_63 = log(1 + S_63/B_63);
                      R_63 =  2 * ( (S_63+B_63) * LSB_63 - S_63 );
                      E_63 = LSB_63 * LSB_63 * dS_63 * dS_63 + (LSB_63 - S_63/B_63) * (LSB_63 - S_63/B_63) * dB_63 * dB_63;

                      Significance_63 = sqrt(R_63);
                      if(Significance_63 > 0) { EE_63 = sqrt(E_63) / Significance_63; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax63 = 1.1*h63_1->GetMaximum();
          float scale63 = 8000 / rightmax63;
          h63_1->Scale(scale63);
          h63_1->Draw("SAMEHIST");
          
          h63_2->Scale(scale63);
          h63_2->Draw("SAMEHIST");
          
        
          TGaxis*axis63 = new TGaxis(200,0,200,8000,0,rightmax63,510,"+L");
          // axis63->SetTitle("Quadratic Sum of significance");
          axis63->SetTitleSize(0.03);
          axis63->SetLabelSize(0.025);
          //axis63->Draw();
          
          pad632->cd();
          TLegend *leg63 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg63->SetBorderSize(1);
          leg63->SetFillColor(0);
          leg63->SetTextFont(42);
          leg63->SetTextSize(0.053);
          
          leg63->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg63->AddEntry(h_hist[37], "ggF HH");
          leg63->AddEntry(h_hist[36], "ttbar");
          leg63->AddEntry(h_hist[33], "single top");
          leg63->AddEntry(h_hist[27], "Z#tau#tau");
          leg63->AddEntry(h_hist[25], "W");
          leg63->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg63->AddEntry(h_hist[17], "Fake_W");
          leg63->AddEntry(h_hist[16], "Fake_ttbar");
          leg63->AddEntry(h_hist[14], "DY");
          leg63->AddEntry(h_hist[11], "diboson");
          leg63->AddEntry(h_hist[0], "SM H");
          leg63->AddEntry(h63_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg63->AddEntry(h63_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg63->Draw();
          
          c63 -> SaveAs("pTSixObjVBF_SM.pdf");


            //   ===========================================================   Etaj1VBF   ===========================================================
          
          TCanvas *c61 = new TCanvas ("c61", "Etaj1VBF",1200,650);
            
          TPad *pad611 = new TPad("pad611","",0,0,0.8,1);
          TPad *pad612 = new TPad("pad612","",0.75,0,1,1);
          pad611->Draw();
          pad612->Draw();
            
          pad611->cd();
          pad611->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,5);
            h_hist[i]->GetXaxis()->SetTitle("#eta_{j0VBF}");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 3000); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="abs(Etaj1VBF)>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs61 = new THStack("hs61", "");
          for(int i= 0; i<38 ; i++){ hs61->Add(h_hist[i], "hist61"); }
          hs61->Draw("SAMEHIST");
        
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h61_1 = new TH1F("h61_1","Quadratic Sum from left",25,0,5); //left
          
         double QuadraticSum_l_61 = 0;
         double R_l_61 = 0;
         double E_l_61 = 0;
         double EE_l_61 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_61 +=  2* ( (S+B) * LSB - S );
                  E_l_61 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_61 = sqrt(R_l_61);
                  if(R_l_61 > 0) { EE_l_61 = sqrt(E_l_61) / QuadraticSum_l_61; }
                 
             }
             h61_1->SetBinContent(j,QuadraticSum_l_61);
             h61_1->SetLineColor(kBlue-9);
             h61_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h61_2 = new TH1F("h61_2","Quadratic Sum from right",25,0,5); //right
          
         double QuadraticSum_r_61 = 0;
         double R_r_61 = 0;
         double E_r_61 = 0;
         double EE_r_61 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_61 +=  2* ( (S+B) * LSB - S );
                  E_r_61 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_61 = sqrt(R_r_61);
                  if(R_r_61> 0) { EE_r_61 = sqrt(E_r_61) / QuadraticSum_r_61; }
                 
             }

            h61_2->SetBinContent(j,QuadraticSum_r_61);
            h61_2->SetLineColor(kGreen-6);
            h61_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_61 = 0;
      double integral_Bkg_61 = 0;
      double integral_noVBFSM_61 = 0;

      double error_VBFSM_61 = 0;
      double error_Bkg_61 = 0;
      double error_noVBFSM_61 = 0;

        integral_VBFSM_61 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_61, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_61 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_61, "");

            integral_noVBFSM_61 += integral_Bkg_61;
            error_noVBFSM_61 += error_Bkg_61*error_Bkg_61;
        }

        error_noVBFSM_61 = sqrt(error_noVBFSM_61);

                double S_61 = 0;   S_61 = integral_VBFSM_61;
                double dS_61 = 0;  dS_61 = error_VBFSM_61;
                double B_61 = 0;   B_61 = integral_noVBFSM_61;
                double dB_61 = 0;  dB_61 = error_noVBFSM_61;

                double Significance_61 = 0;
                double R_61 = 0;
                double E_61 = 0;
                double EE_61 = 0;

                if( B_61 > 0 && S_61 > 0) {
                    
                      double LSB_61 = log(1 + S_61/B_61);
                      R_61 =  2 * ( (S_61+B_61) * LSB_61 - S_61 );
                      E_61 = LSB_61 * LSB_61 * dS_61 * dS_61 + (LSB_61 - S_61/B_61) * (LSB_61 - S_61/B_61) * dB_61 * dB_61;

                      Significance_61 = sqrt(R_61);
                      if(Significance_61 > 0) { EE_61 = sqrt(E_61) / Significance_61; }
                    
                }
         
          
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }
          
          float rightmax61 = 1.1*h61_1->GetMaximum();
          float scale61 = 3000 / rightmax61;
          h61_1->Scale(scale61);
          h61_1->Draw("SAMEHIST");
          
          h61_2->Scale(scale61);
          h61_2->Draw("SAMEHIST");
          
        
          TGaxis*axis61 = new TGaxis(5,0,5,3000,0,rightmax61,510,"+L");
          // axis61->SetTitle("Quadratic Sum of significance");
          axis61->SetTitleSize(0.03);
          axis61->SetLabelSize(0.025);
          //axis61->Draw();
          
          pad612->cd();
          TLegend *leg61 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg61->SetBorderSize(1);
          leg61->SetFillColor(0);
          leg61->SetTextFont(42);
          leg61->SetTextSize(0.053);
          
          leg61->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg61->AddEntry(h_hist[37], "ggF HH");
          leg61->AddEntry(h_hist[36], "ttbar");
          leg61->AddEntry(h_hist[33], "single top");
          leg61->AddEntry(h_hist[27], "Z#tau#tau");
          leg61->AddEntry(h_hist[25], "W");
          leg61->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg61->AddEntry(h_hist[17], "Fake_W");
          leg61->AddEntry(h_hist[16], "Fake_ttbar");
          leg61->AddEntry(h_hist[14], "DY");
          leg61->AddEntry(h_hist[11], "diboson");
          leg61->AddEntry(h_hist[0], "SM H");
          leg61->AddEntry(h61_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg61->AddEntry(h61_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg61->Draw();
          
          c61 -> SaveAs("Etaj1VBF_SM.pdf");


            //   ===========================================================   Etaj2VBF   ===========================================================
          
          TCanvas *c62 = new TCanvas ("c62", "Etaj2VBF",1200,650);
            
          TPad *pad621 = new TPad("pad621","",0,0,0.8,1);
          TPad *pad622 = new TPad("pad622","",0.75,0,1,1);
          pad621->Draw();
          pad622->Draw();
            
          pad621->cd();
          pad621->SetTickx();
          gStyle->SetOptStat(kFALSE);
          
          for (int i=0; i<n_smp; i++){
            h_nm = h_title[i].c_str();
            h_hist[i] = new TH1F(h_nm, "",25,0,5);
            h_hist[i]->GetXaxis()->SetTitle("#eta_{j1VBF}");
            h_hist[i]->GetYaxis()->SetTitle("Events/ 0.2");
            //h_hist[i]->GetXaxis()->SetRangeUser(0, 500);
            h_hist[i]->GetYaxis()->SetRangeUser(0, 2500); //70000
          }
          
          h_hist[0]->SetLineColor(kOrange+7); h_hist[0]->SetMarkerColor(kOrange+7); h_hist[0]->SetFillColor(kOrange+7); //SMH_ttH
          h_hist[1]->SetLineColor(kOrange+7); h_hist[1]->SetMarkerColor(kOrange+7); h_hist[1]->SetFillColor(kOrange+7); //SMH_ttZ
          h_hist[2]->SetLineColor(kOrange+7); h_hist[2]->SetMarkerColor(kOrange+7); h_hist[2]->SetFillColor(kOrange+7); //SMH_ttW
          h_hist[3]->SetLineColor(kOrange+7); h_hist[3]->SetMarkerColor(kOrange+7); h_hist[3]->SetFillColor(kOrange+7); //SMH_VBFHtautau
          h_hist[4]->SetLineColor(kOrange+7); h_hist[4]->SetMarkerColor(kOrange+7); h_hist[4]->SetFillColor(kOrange+7); //SMH_WHbb
          h_hist[5]->SetLineColor(kOrange+7); h_hist[5]->SetMarkerColor(kOrange+7); h_hist[5]->SetFillColor(kOrange+7); //SMH_qqZHbb
          h_hist[6]->SetLineColor(kOrange+7); h_hist[6]->SetMarkerColor(kOrange+7); h_hist[6]->SetFillColor(kOrange+7); //SMH_ggZHbb
          h_hist[7]->SetLineColor(kOrange+7); h_hist[7]->SetMarkerColor(kOrange+7); h_hist[7]->SetFillColor(kOrange+7); //SMH_WHtautau
          h_hist[8]->SetLineColor(kOrange+7); h_hist[8]->SetMarkerColor(kOrange+7); h_hist[8]->SetFillColor(kOrange+7); //SMH_qqZHtautau
          h_hist[9]->SetLineColor(kOrange+7); h_hist[9]->SetMarkerColor(kOrange+7); h_hist[9]->SetFillColor(kOrange+7); //SMH_ggZHtautau
          h_hist[10]->SetLineColor(kOrange+7); h_hist[10]->SetMarkerColor(kOrange+7); h_hist[10]->SetFillColor(kOrange+7); //SMH_ggFHtautau

          h_hist[11]->SetLineColor(kGray+1); h_hist[11]->SetMarkerColor(kGray+1); h_hist[11]->SetFillColor(kGray+1); //diboson_WZ
          h_hist[12]->SetLineColor(kGray+1); h_hist[12]->SetMarkerColor(kGray+1); h_hist[12]->SetFillColor(kGray+1); //diboson_WW
          h_hist[13]->SetLineColor(kGray+1); h_hist[13]->SetMarkerColor(kGray+1); h_hist[13]->SetFillColor(kGray+1); //diboson_ZZ
          
          h_hist[14]->SetLineColor(kOrange+1); h_hist[14]->SetMarkerColor(kOrange+1); h_hist[14]->SetFillColor(kOrange+1); //DY
          h_hist[15]->SetLineColor(kOrange+1); h_hist[15]->SetMarkerColor(kOrange+1); h_hist[15]->SetFillColor(kOrange+1); //DYtt

          h_hist[16]->SetLineColor(kPink+1); h_hist[16]->SetMarkerColor(kPink+1); h_hist[16]->SetFillColor(kPink+1); //ttbarFake

          h_hist[17]->SetLineColor(kPink-1); h_hist[17]->SetMarkerColor(kPink-1); h_hist[17]->SetFillColor(kPink-1); //WFake
          h_hist[18]->SetLineColor(kPink-1); h_hist[18]->SetMarkerColor(kPink-1); h_hist[18]->SetFillColor(kPink-1); //WFake_WttFake

          h_hist[19]->SetLineColor(kAzure+7); h_hist[19]->SetMarkerColor(kAzure+7); h_hist[19]->SetFillColor(kAzure+7); //Zbb
          h_hist[20]->SetLineColor(kAzure+7); h_hist[20]->SetMarkerColor(kAzure+7); h_hist[20]->SetFillColor(kAzure+7); //Zbc
          h_hist[21]->SetLineColor(kAzure+7); h_hist[21]->SetMarkerColor(kAzure+7); h_hist[21]->SetFillColor(kAzure+7); //Zbl
          h_hist[22]->SetLineColor(kAzure+7); h_hist[22]->SetMarkerColor(kAzure+7); h_hist[22]->SetFillColor(kAzure+7); //Zcc
          h_hist[23]->SetLineColor(kAzure+7); h_hist[23]->SetMarkerColor(kAzure+7); h_hist[23]->SetFillColor(kAzure+7); //Zcl
          h_hist[24]->SetLineColor(kAzure+7); h_hist[24]->SetMarkerColor(kAzure+7); h_hist[24]->SetFillColor(kAzure+7); //Zl

          h_hist[25]->SetLineColor(kGreen-6); h_hist[25]->SetMarkerColor(kGreen-6); h_hist[25]->SetFillColor(kGreen-6); //W
          h_hist[26]->SetLineColor(kGreen-6); h_hist[26]->SetMarkerColor(kGreen-6); h_hist[26]->SetFillColor(kGreen-6); //W_Wtt

          h_hist[27]->SetLineColor(kAzure+3); h_hist[27]->SetMarkerColor(kAzure+3); h_hist[27]->SetFillColor(kAzure+3); //Zttbb
          h_hist[28]->SetLineColor(kAzure+3); h_hist[28]->SetMarkerColor(kAzure+3); h_hist[28]->SetFillColor(kAzure+3); //Zttbc
          h_hist[29]->SetLineColor(kAzure+3); h_hist[29]->SetMarkerColor(kAzure+3); h_hist[29]->SetFillColor(kAzure+3); //Zttbl
          h_hist[30]->SetLineColor(kAzure+3); h_hist[30]->SetMarkerColor(kAzure+3); h_hist[30]->SetFillColor(kAzure+3); //Zttcc
          h_hist[31]->SetLineColor(kAzure+3); h_hist[31]->SetMarkerColor(kAzure+3); h_hist[31]->SetFillColor(kAzure+3); //Zttcl
          h_hist[32]->SetLineColor(kAzure+3); h_hist[32]->SetMarkerColor(kAzure+3); h_hist[32]->SetFillColor(kAzure+3); //Zttl

          h_hist[33]->SetLineColor(kOrange-1); h_hist[33]->SetMarkerColor(kOrange-1); h_hist[33]->SetFillColor(kOrange-1); //stops
          h_hist[34]->SetLineColor(kOrange-1); h_hist[34]->SetMarkerColor(kOrange-1); h_hist[34]->SetFillColor(kOrange-1); //stopWt
          h_hist[35]->SetLineColor(kOrange-1); h_hist[35]->SetMarkerColor(kOrange-1); h_hist[35]->SetFillColor(kOrange-1); //stopt

          h_hist[36]->SetLineColor(kOrange); h_hist[36]->SetMarkerColor(kOrange); h_hist[36]->SetFillColor(kOrange); //ttbar

          h_hist[37]->SetLineColor(kRed-9); h_hist[37]->SetMarkerColor(kRed-9); h_hist[37]->SetFillColor(kRed-9); // hh_bbtt

          h_hist[38]->SetLineColor(kRed); h_hist[38]->SetMarkerColor(kRed); //hhttbb

        
          for (int i=0; i<n_smp; i++){
              hist_draw[i]="abs(Etaj2VBF)>>"+h_title[i];
          }
          
          for (int i=0; i<n_smp; i++){
	          h_hist[i]->Reset();
	          h_hist[i]->Sumw2();
        }
        
        for(int i = 0; i<n_smp; i++){
          if(i == 0){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttH\" )",  "SAMEHIST");}
            else if (i == 1 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttZ\" )",  "SAMEHIST");}
            else if (i == 2 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttW\" )",  "SAMEHIST");}
            else if (i == 3 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"VBFHtautau\" )",  "SAMEHIST");}
            else if (i == 4 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHbb\" )",  "SAMEHIST");}
            else if (i == 5 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHbb\" )",  "SAMEHIST");}
            else if (i == 6 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggZHbb\" )",  "SAMEHIST");}
            else if (i == 7 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WHtautau\" )",  "SAMEHIST");}
            else if (i == 8 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"qqZHtautau\" )",  "SAMEHIST");}
            else if (i == 9 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ggFHtautau\" )",  "SAMEHIST");}
            else if (i == 10 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 11 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WZ\" )",  "SAMEHIST");}
            else if (i == 12 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WW\" )",  "SAMEHIST");}
            else if (i == 13 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ZZ\" )",  "SAMEHIST");}
            else if (i == 14 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DY\" )",  "SAMEHIST");}
            else if (i == 15 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"DYtt\" )",  "SAMEHIST");}
            else if (i == 16 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbarFake\" )",  "SAMEHIST");}
            else if (i == 17 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WFake\" )",  "SAMEHIST");}
            else if (i == 18 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"WttFake\" )",  "SAMEHIST");}
            else if (i == 19 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbb\" )",  "SAMEHIST");}
            else if (i == 20 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbc\" )",  "SAMEHIST");}
            else if (i == 21 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zbl\" )",  "SAMEHIST");}
            else if (i == 22 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcc\" )",  "SAMEHIST");}
            else if (i == 23 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zcl\" )",  "SAMEHIST");}
            else if (i == 24 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zl\" )",  "SAMEHIST");}
            else if (i == 25 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"W\" )",  "SAMEHIST");}
            else if (i == 26 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Wtt\" )",  "SAMEHIST");}
            else if (i == 27 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbb\" )",  "SAMEHIST");}
            else if (i == 28 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbc\" )",  "SAMEHIST");}
            else if (i == 29 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttbl\" )",  "SAMEHIST");}
            else if (i == 30 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcc\" )",  "SAMEHIST");}
            else if (i == 31 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttcl\" )",  "SAMEHIST");}
            else if (i == 32 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"Zttl\" )",  "SAMEHIST");}
            else if (i == 33 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stops\" )",  "SAMEHIST");}
            else if (i == 34 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopWt\" )",  "SAMEHIST");}
            else if (i == 35 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"stopt\" )",  "SAMEHIST");}
            else if (i == 36 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"ttbar\" )",  "SAMEHIST");}
            else if (i == 37 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbb\" )",  "SAMEHIST");}
            else if (i == 38 ){chain_smp[i]->Draw(hist_draw[i].c_str(), "  (weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}
            
          }
          
          THStack *hs62 = new THStack("hs62", "");
          for(int i= 0; i<38 ; i++){ hs62->Add(h_hist[i], "hist62"); }
          hs62->Draw("SAMEHIST");
        
          
    
   
         //cout << " ============== significance From left ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h62_1 = new TH1F("h62_1","Quadratic Sum from left",25,0,5); //left
          
         double QuadraticSum_l_62 = 0;
         double R_l_62 = 0;
         double E_l_62 = 0;
         double EE_l_62 = 0;
           
          for (int j=1; j<=25; j++) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_l_62 +=  2* ( (S+B) * LSB - S );
                  E_l_62 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_l_62 = sqrt(R_l_62);
                  if(R_l_62 > 0) { EE_l_62 = sqrt(E_l_62) / QuadraticSum_l_62; }
                 
             }
             h62_1->SetBinContent(j,QuadraticSum_l_62);
             h62_1->SetLineColor(kBlue-9);
             h62_1->SetLineStyle(2);
             
             //cout << " ************************************ " << endl;
         }
             

         // ------------------------------------------------------------
         
         //cout << " " << endl;
         //cout << " ============== significance From right ============== " << endl;
         //cout << " " << endl;
          
         TH1F *h62_2 = new TH1F("h62_2","Quadratic Sum from right",25,0,5); //right
          
         double QuadraticSum_r_62 = 0;
         double R_r_62 = 0;
         double E_r_62 = 0;
         double EE_r_62 = 0;
          
          for (int j=25; j>=1; j--) {
              
            double S = 0;   for(int i = 38; i<n_smp; i++) { S += h_hist[i]->GetBinContent(j); }  
            double dS = 0;   for(int i = 38; i<n_smp; i++) { dS += h_hist[i]->GetBinError(j); }
            double B = 0;   for(int i = 0; i<38; i++) { B += h_hist[i]->GetBinContent(j); }  
            double dB = 0;   for(int i = 0; i<38; i++) { dB += h_hist[i]->GetBinError(j); }    
          

             if( B > 0 && S > 0) {
                 
                  double LSB = log(1 + S/B);
                  R_r_62 +=  2* ( (S+B) * LSB - S );
                  E_r_62 += LSB * LSB * dS * dS + (LSB - S/B) * (LSB - S/B) * dB * dB;

                  QuadraticSum_r_62 = sqrt(R_r_62);
                  if(R_r_62> 0) { EE_r_62 = sqrt(E_r_62) / QuadraticSum_r_62; }
                 
             }

            h62_2->SetBinContent(j,QuadraticSum_r_62);
            h62_2->SetLineColor(kGreen-6);
            h62_2->SetLineStyle(2);
            
            //cout << " ************************************ " << endl;
         }

         //cout << " ============== significance calculation ============== " << endl;
        
      double integral_VBFSM_62 = 0;
      double integral_Bkg_62 = 0;
      double integral_noVBFSM_62 = 0;

      double error_VBFSM_62 = 0;
      double error_Bkg_62 = 0;
      double error_noVBFSM_62 = 0;

        integral_VBFSM_62 = h_hist[38]->IntegralAndError(0, 3000, error_VBFSM_62, "");

        for (int i=0; i<38; i++)
        {
            integral_Bkg_62 = h_hist[i]->IntegralAndError(0, 3000, error_Bkg_62, "");

            integral_noVBFSM_62 += integral_Bkg_62;
            error_noVBFSM_62 += error_Bkg_62*error_Bkg_62;
        }

        error_noVBFSM_62 = sqrt(error_noVBFSM_62);

                double S_62 = 0;   S_62 = integral_VBFSM_62;
                double dS_62 = 0;  dS_62 = error_VBFSM_62;
                double B_62 = 0;   B_62 = integral_noVBFSM_62;
                double dB_62 = 0;  dB_62 = error_noVBFSM_62;

                double Significance_62 = 0;
                double R_62 = 0;
                double E_62 = 0;
                double EE_62 = 0;

                if( B_62 > 0 && S_62 > 0) {
                    
                      double LSB_62 = log(1 + S_62/B_62);
                      R_62 =  2 * ( (S_62+B_62) * LSB_62 - S_62 );
                      E_62 = LSB_62 * LSB_62 * dS_62 * dS_62 + (LSB_62 - S_62/B_62) * (LSB_62 - S_62/B_62) * dB_62 * dB_62;

                      Significance_62 = sqrt(R_62);
                      if(Significance_62 > 0) { EE_62 = sqrt(E_62) / Significance_62; }
                    
                }
         
          for(int i = 0; i<n_smp; i++){
              if(i == 38){chain_smp[i]->Draw(hist_draw[i].c_str(), "180455.78*(weight)*(OS==1 && n_btag==2 && mBB<150000 && ((Etaj1VBF*Etaj2VBF)<0) && sample ==\"hhttbbVBFSM\" )",  "SAMEHIST");}  //hhttbb
          }

          
          float rightmax62 = 1.1*h62_1->GetMaximum();
          float scale62 = 2500 / rightmax62;
          h62_1->Scale(scale62);
          h62_1->Draw("SAMEHIST");
          
          h62_2->Scale(scale62);
          h62_2->Draw("SAMEHIST");
          
        
          TGaxis*axis62 = new TGaxis(5,0,5,2500,0,rightmax62,510,"+L");
          // axis62->SetTitle("Quadratic Sum of significance");
          axis62->SetTitleSize(0.03);
          axis62->SetLabelSize(0.025);
          //axis62->Draw();
          
          
          pad622->cd();
          TLegend *leg62 = new TLegend(0.008, 0.1, 0.985,0.9);
          leg62->SetBorderSize(1);
          leg62->SetFillColor(0);
          leg62->SetTextFont(42);
          leg62->SetTextSize(0.053);
          
          leg62->AddEntry(h_hist[38], "VBFSM x 180455.78");
          leg62->AddEntry(h_hist[37], "ggF HH");
          leg62->AddEntry(h_hist[36], "ttbar");
          leg62->AddEntry(h_hist[33], "single top");
          leg62->AddEntry(h_hist[27], "Z#tau#tau");
          leg62->AddEntry(h_hist[25], "W");
          leg62->AddEntry(h_hist[19], "Zee/#mu#mu");
          leg62->AddEntry(h_hist[17], "Fake_W");
          leg62->AddEntry(h_hist[16], "Fake_ttbar");
          leg62->AddEntry(h_hist[14], "DY");
          leg62->AddEntry(h_hist[11], "diboson");
          leg62->AddEntry(h_hist[0], "SM H");
          leg62->AddEntry(h62_1, "Quadratic Sum of #frac{S}{#sqrt{B}} from left");
          leg62->AddEntry(h62_2, "Quadratic Sum of #frac{S}{#sqrt{B}} from right");
          leg62->Draw();

          
          c62 -> SaveAs("Etaj2VBF_SM.pdf");


      
        // =================  Significance of each variable  =================
 
        cout << " pTBB = " << QuadraticSum_r_1 << " ± " << EE_r_1 << endl; 
        cout << " mBB = " << QuadraticSum_r_4 << " ± " << EE_r_4 << endl; 
        cout << " EtaBB = " << QuadraticSum_r_47 << " ± " << EE_r_47 << endl;
        cout << " dEtaBB = " << QuadraticSum_r_6 << " ± " << EE_r_6 << endl;
        cout << " dRBB = " << QuadraticSum_r_7 << " ± " << EE_r_7<< endl;
        
        cout << " " << endl;
        
        cout << " pTTauTau = " << QuadraticSum_r_8 << " ± " << EE_r_8 << endl;
        cout << " pTTauLep = " << QuadraticSum_r_13 << " ± " << EE_r_13 << endl;
        cout << " dPtLepTau = " << QuadraticSum_r_19 << " ± " << EE_r_19 << endl;
        cout << " TauPt = " << QuadraticSum_r_9 << " ± " << EE_r_9 << endl;
        cout << " pTLep = " << QuadraticSum_r_10 << " ± " << EE_r_10 << endl;
        cout << " mMMC = " << QuadraticSum_r_11 << " ± " << EE_r_11 << endl;
        
    
        cout << " EtaTauTau = " << QuadraticSum_r_49 << " ± " << EE_r_49 << endl;
        cout << " dEtalepTau = " << QuadraticSum_r_15 << " ± " << EE_r_15 << endl;
        cout << " dRTauLep = " << QuadraticSum_r_18 << " ± " << EE_r_18 << endl;
        cout << " MT2 = " << QuadraticSum_r_20 << " ± " << EE_r_20 << endl;
        
        cout << " " << endl;

        cout << " pTjjVBF = " << QuadraticSum_r_39 << " ± " << EE_r_39 << endl;
        cout << " pTj1VBF = " << QuadraticSum_r_21 << " ± " << EE_r_21 << endl;
        cout << " pTj2VBF = " << QuadraticSum_r_22 << " ± " << EE_r_22 << endl;
        cout << " mjjVBF = " << QuadraticSum_r_23 << " ± " << EE_r_23 << endl;
        cout << " VBFjj = " << QuadraticSum_r_12 << " ± " << EE_r_12 << endl;
    
        cout << " " << endl;

        cout << " dRb0lep = " << QuadraticSum_r_24 << " ± " << EE_r_24 << endl;
        cout << " dRb1lep = " << QuadraticSum_r_25 << " ± " << EE_r_25 << endl;
        cout << " dRb0tau = " << QuadraticSum_r_27 << " ± " << EE_r_27 << endl;
        cout << " dRb1tau = " << QuadraticSum_r_28 << " ± " << EE_r_28 << endl;
        
        cout << " dPhijjVBF = " << QuadraticSum_r_60 << " ± " << EE_r_60 << endl;
        cout << " dEtajjVBF = " << QuadraticSum_r_26 << " ± " << EE_r_26 << endl;
        cout << " Etaj1VBF = " << QuadraticSum_r_61 << " ± " << EE_r_61 << endl; 
        cout << " Etaj2VBF = " << QuadraticSum_r_62 << " ± " << EE_r_62 << endl; 
        cout << " dRjjVBF = " << QuadraticSum_r_29 << " ± " << EE_r_29 << endl;
        
        cout << " " << endl;
        
        cout << " MET = " << QuadraticSum_r_30 << " ± " << EE_r_30 << endl;
        cout << " METCent = " << QuadraticSum_r_31 << " ± " << EE_r_31 << endl;
        cout << " dPhiLepMET = " << QuadraticSum_r_32 << " ± " << EE_r_32 << endl;
        cout << " dPhiTauMET = " << QuadraticSum_r_33 << " ± " << EE_r_33 << endl;
        cout << " dPhiTauTauMET = " << QuadraticSum_r_35 << " ± " << EE_r_35 << endl;
        cout << " dPhibbMET = " << QuadraticSum_r_45 << " ± " << EE_r_45 << endl;
        
        cout << " " << endl;
            
        cout << " pTHH = " << QuadraticSum_r_2 << " ± " << EE_r_2 << endl;
        cout << " HT = " << QuadraticSum_r_37 << " ± " << EE_r_37 << endl;
        cout << " mHH = " << QuadraticSum_r_36 << " ± " << EE_r_36 << endl;    
        cout << " mHH_scaled = " << QuadraticSum_r_3 << " ± " << EE_r_3 << endl; 
        cout << " mHHStar = " << QuadraticSum_r_38 << " ± " << EE_r_38 << endl; 
        cout << " dPhiLepTauBB = " << QuadraticSum_r_34 << " ± " << EE_r_34 << endl;
        cout << " dEtaHH = " << QuadraticSum_r_50 << " ± " << EE_r_50 << endl;
        cout << " dRHH = " << QuadraticSum_r_40 << " ± " << EE_r_40 << endl;
        
        cout << " " << endl;
        
        cout << " mTW = " << QuadraticSum_r_41 << "± " << EE_r_41 << endl;
        cout << " mTLep = " << QuadraticSum_r_43 << " ± " << EE_r_43 << endl;
        cout << " mTtau = " << QuadraticSum_r_44 << " ± " << EE_r_44 << endl;
           
        cout << " " << endl;

        cout << " coshelicitybb = " << QuadraticSum_r_51 << " ± " << EE_r_51 << endl;
        cout << " coshelicitytautau = " << QuadraticSum_r_52 << " ± " << EE_r_52 << endl;

        cout << " X_HH = " << QuadraticSum_r_12 << " ± " << EE_r_12 << endl;

        cout << " " << endl;

        cout << " tau_rnn = " << QuadraticSum_r_57 << " ± " << EE_r_57 << endl; 
        cout << " LeadBjet = " << QuadraticSum_r_58 << " ± " << EE_r_58 << endl; 
        cout << " LeadJetPt = " << QuadraticSum_r_59 << " ± " << EE_r_59 << endl; 
        cout << " pTSixObjVBF = " << QuadraticSum_r_63 << " ± " << EE_r_63 << endl; 
  
         
      */
    }
